/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by quicktype (https://github.com/quicktype/quicktype).
 * Do not edit the class manually.
 */

// To parse this data:
//
//   import { Convert, MpMaintenanceSpec } from "./file";
//
//   const mpMaintenanceSpec = Convert.toMpMaintenanceSpec(json);
//
// These functions will throw an error if the JSON doesn't
// match the expected interface, even if the JSON is valid.

export interface MpMaintenanceSpec {
	$schema: string;
	type: LithiumIonBatteriesType;
	title: string;
	properties: MpMaintenanceSpecProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface MpMaintenanceSpecProperties {
	MPItemFeedHeader: MPItemFeedHeader;
	MPItem: MPItem;
}

export interface MPItem {
	$schema: string;
	type: SafetyDataSheetType;
	title: string;
	items: MPItemItems;
	minItems: number;
}

export interface MPItemItems {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: PurpleProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface PurpleProperties {
	Orderable: Orderable;
	Visible: Visible;
	TradeItem: TradeItem;
}

export interface Orderable {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: OrderableProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface OrderableProperties {
	sku: FeedDate;
	productIdentifiers: ProductIdentifiers;
	productName: FeedDate;
	brand: FeedDate;
	price: NumberOfHazardousComponents;
	electronicsIndicator: Locale;
	batteryTechnologyType: Locale;
	chemicalAerosolPesticide: Locale;
	netContent: NetContent;
	safetyDataSheet: SafetyDataSheet;
	numberOfHazardousComponents: NumberOfHazardousComponents;
	hasBatteries: Locale;
	batterySize: FeedDate;
	lithiumIonBatteries: LithiumBatteries;
	lithiumMetalBatteries: LithiumBatteries;
	shipsInOriginalPackaging: Locale;
	startDate: FeedDate;
	endDate: FeedDate;
	MustShipAlone: Locale;
	SkuUpdate: Locale;
	stateRestrictions: StateRestrictions;
}

export interface Locale {
	type: PurpleType;
	title: string;
	enum: string[];
}

export enum PurpleType {
	String = 'string',
}

export interface FeedDate {
	type: PurpleType;
	title?: string;
	minLength?: number;
	maxLength?: number;
	format?: Format;
}

export enum Format {
	DateTime = 'date-time',
	URI = 'uri',
}

export interface LithiumBatteries {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: LithiumIonBatteriesProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface LithiumIonBatteriesProperties {
	batteryModel: FeedDate;
	batteryFormFactor: Locale;
	numberOfBatteries: NumberOfHazardousComponents;
	numberOfBatteryCells: NumberOfHazardousComponents;
	includedBatteryPackaging: Locale;
	batteryWeight: NumberOfHazardousComponents;
	batteryWattHour?: NumberOfHazardousComponents;
	lithiumMetalContentWeight?: NumberOfHazardousComponents;
}

export interface NumberOfHazardousComponents {
	type: NumberOfHazardousComponentsType;
	title: string;
	minimum: number;
	maximum: number;
	exclusiveMaximum: boolean;
	multipleOf?: number;
}

export enum NumberOfHazardousComponentsType {
	Integer = 'integer',
	Number = 'number',
}

export enum LithiumIonBatteriesType {
	Object = 'object',
}

export interface NetContent {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: NetContentProperties;
	additionalProperties: boolean;
}

export interface NetContentProperties {
	productNetContentMeasure: NumberOfHazardousComponents;
	productNetContentUnit: Locale;
}

export interface ProductIdentifiers {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: ProductIdentifiersProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface ProductIdentifiersProperties {
	productIdType: Locale;
	productId: FeedDate;
}

export interface SafetyDataSheet {
	$schema: string;
	type: SafetyDataSheetType;
	title: string;
	items: FeedDate;
	minItems: number;
}

export enum SafetyDataSheetType {
	Array = 'array',
}

export interface StateRestrictions {
	$schema: string;
	type: SafetyDataSheetType;
	title: string;
	items: StateRestrictionsItems;
	minItems: number;
}

export interface StateRestrictionsItems {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: FluffyProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface FluffyProperties {
	stateRestrictionsText: Locale;
	states: FeedDate;
	zipCodes: FeedDate;
}

export interface TradeItem {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: TradeItemProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface TradeItemProperties {
	sku: FeedDate;
	countryOfOriginAssembly: CountryOfOriginAssembly;
	orderableGTIN: FeedDate;
	each: Each;
	innerPack: InnerPack;
	case: Case;
	pallet: Pallet;
}

export interface Case {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: CaseProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface CaseProperties {
	caseGTIN: FeedDate;
	caseDepth: NumberOfHazardousComponents;
	caseWidth: NumberOfHazardousComponents;
	caseHeight: NumberOfHazardousComponents;
	caseWeight: NumberOfHazardousComponents;
	qtySellableItemsCase: NumberOfHazardousComponents;
}

export interface CountryOfOriginAssembly {
	$schema: string;
	type: SafetyDataSheetType;
	title: string;
	items: CountryOfOriginAssemblyItems;
	minItems: number;
}

export interface CountryOfOriginAssemblyItems {
	type: PurpleType;
	enum: string[];
}

export interface Each {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: EachProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface EachProperties {
	eachGTIN: FeedDate;
	eachDepth: NumberOfHazardousComponents;
	eachWidth: NumberOfHazardousComponents;
	eachHeight: NumberOfHazardousComponents;
	eachWeight: NumberOfHazardousComponents;
}

export interface InnerPack {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: InnerPackProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface InnerPackProperties {
	innerPackGTIN: FeedDate;
	innerPackDepth: NumberOfHazardousComponents;
	innerPackWidth: NumberOfHazardousComponents;
	innerPackHeight: NumberOfHazardousComponents;
	innerPackWeight: NumberOfHazardousComponents;
	qtySellableItemsInnerPack: NumberOfHazardousComponents;
}

export interface Pallet {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: PalletProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface PalletProperties {
	palletGTIN: FeedDate;
	palletDepth: NumberOfHazardousComponents;
	palletWidth: NumberOfHazardousComponents;
	palletHeight: NumberOfHazardousComponents;
	palletWeight: NumberOfHazardousComponents;
	qtySellableItemsPallet: NumberOfHazardousComponents;
}

export interface Visible {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: VisibleProperties;
	oneOf: OneOf[];
	additionalProperties: boolean;
}

export interface OneOf {
	$schema: string;
	type: LithiumIonBatteriesType;
	required: string[];
}

export interface VisibleProperties {
	'Animal Accessories': Animal;
	'Animal Food': AnimalFood;
	'Animal Health & Grooming': AnimalHealthGrooming;
	'Animal Other': Animal;
	'Art & Craft': ArtCraft;
	'Baby Clothing': Baby;
	'Baby Diapering, Care, & Other': BabyDiaperingCareOther;
	'Baby Food': BabyFood;
	'Baby Furniture': BabyDiaperingCareOther;
	'Baby Toys': Baby;
	'Baby Transport': BabyTransport;
	'Beauty, Personal Care, & Hygiene': BeautyPersonalCareHygiene;
	Bedding: BabyDiaperingCareOther;
	'Building Supply': BuildingSupply;
	'Cameras & Lenses': CamerasLenses;
	'Carriers & Accessories': CarriersAccessories;
	'Cases & Bags': CarriersAccessories;
	'Cell Phones': CellPhones;
	'Ceremonial Clothing & Accessories': CeremonialClothingAccessories;
	Clothing: Clothing;
	'Computer Components': ComputerComponents;
	Computers: Computers;
	Costumes: CeremonialClothingAccessories;
	Cycling: Cycling;
	'Decorations & Favors': DecorationsFavors;
	Electrical: Electrical;
	'Electronics Accessories': ElectronicsAccessories;
	'Electronics Cables': ElectronicsCables;
	'Electronics Other': ElectronicsOther;
	'Food & Beverage': BabyFood;
	Footwear: Footwear;
	'Fuels & Lubricants': FuelsLubricants;
	Funeral: CeremonialClothingAccessories;
	Furniture: Furniture;
	'Garden & Patio': GardenPatio;
	'Gift Supply & Awards': CeremonialClothingAccessories;
	'Grills & Outdoor Cooking': GrillsOutdoorCooking;
	Hardware: Hardware;
	'Health & Beauty Electronics': HealthBeautyElectronics;
	'Home Decor, Kitchen, & Other': HomeDecorKitchenOther;
	'Household Cleaning Products & Supplies': HouseholdCleaningProductsSupplies;
	'Instrument Accessories': InstrumentAccessories;
	Jewelry: Jewelry;
	'Land Vehicles': LandVehicles;
	'Large Appliances': LargeAppliances;
	'Medical Aids & Equipment': MedicalAidsEquipment;
	'Medicine & Supplements': MedicineSupplements;
	'Music Cases & Bags': CeremonialClothingAccessories;
	'Musical Instruments': MusicalInstruments;
	Office: Office;
	Optical: Optical;
	Optics: Optics;
	Other: CeremonialClothingAccessories;
	'Photo Accessories': PhotoAccessories;
	'Plumbing & HVAC': PlumbingHVAC;
	'Printers, Scanners, & Imaging': PrintersScannersImaging;
	'Safety & Emergency': SafetyEmergency;
	Software: Software;
	'Sound & Recording': InstrumentAccessories;
	'Sport & Recreation Other': SportRecreationOther;
	Storage: Storage;
	'TVs & Video Displays': TVsVideoDisplays;
	'Tools & Hardware Other': Hardware;
	Tools: Tools;
	Toys: Toys;
	'Vehicle Other': VehicleOther;
	'Vehicle Parts & Accessories': VehiclePartsAccessories;
	'Video Games': VideoGames;
	'Video Projectors': VideoProjectors;
	Watches: Watches;
	Watercraft: Watercraft;
	'Wheels & Wheel Components': WheelsWheelComponents;
	Music: Music;
	Movies: Movies;
}

export interface Animal {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: AnimalAccessoriesProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface AnimalAccessoriesProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	countryOfOriginTextiles: Locale;
	manufacturer: AnimalBreed;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: AnimalBreed;
	modelNumber: AnimalBreed;
	countPerPack: NumberOfHazardousComponents;
	count: AnimalBreed;
	pieceCount: NumberOfHazardousComponents;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	size: FeedDate;
	animalType: AnimalBreed;
	animalBreed: AnimalBreed;
	petSize: AnimalBreed;
	animalLifestage: AnimalBreed;
	minimumWeight: AssembledProductHeight;
	maximumWeight: AssembledProductHeight;
	capacity?: FeedDate;
	shape?: FeedDate;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	material: Athlete;
	fabricContent: FabricContent;
	fabricCareInstructions: Athlete;
	globalBrandLicense: Athlete;
	instructions: AnimalBreed;
	batteriesRequired?: Locale;
	isFoldable: Locale;
	isReflective?: Locale;
	isRetractable?: Locale;
	maximumTemperature?: AssembledProductHeight;
	minimumTemperature?: AssembledProductHeight;
	numberOfSteps?: NumberOfHazardousComponents;
	pattern: Athlete;
	character?: Athlete;
	sportsLeague: Athlete;
	sportsTeam: Athlete;
	features?: Athlete;
	warrantyText: AnimalBreed;
	warrantyURL: WarrantyURL;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: AnimalBreed;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
	inflexKitComponent?: Locale;
	isPortable?: Locale;
	autographedBy?: FeedDate;
	athlete?: Athlete;
}

export interface AdditionalProductAttributes {
	$schema: string;
	type: SafetyDataSheetType;
	title: AdditionalProductAttributesTitle;
	items: AdditionalProductAttributesItems;
	minItems: number;
}

export interface AdditionalProductAttributesItems {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: TentacledProperties;
	required: PurpleRequired[];
	additionalProperties: boolean;
}

export interface TentacledProperties {
	productAttributeName: AnimalBreed;
	productAttributeValue: AnimalBreed;
}

export interface AnimalBreed {
	type: PurpleType;
	title: string;
	minLength: number;
	maxLength: number;
}

export enum PurpleRequired {
	ProductAttributeName = 'productAttributeName',
	ProductAttributeValue = 'productAttributeValue',
}

export enum AdditionalProductAttributesTitle {
	AdditionalProductAttributes = 'Additional Product Attributes',
}

export interface AssembledProductHeight {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: AssembledProductHeightProperties;
	additionalProperties: boolean;
}

export interface AssembledProductHeightProperties {
	measure: NumberOfHazardousComponents;
	unit: Locale;
}

export interface Athlete {
	$schema: string;
	type: SafetyDataSheetType;
	title: string;
	items: AthleteItems;
	minItems: number;
}

export interface AthleteItems {
	type: PurpleType;
	minLength: number;
	maxLength: number;
}

export interface FabricContent {
	$schema: string;
	type: SafetyDataSheetType;
	title: FabricContentTitle;
	items: FabricContentItems;
	minItems: number;
}

export interface FabricContentItems {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: StickyProperties;
	additionalProperties: boolean;
}

export interface StickyProperties {
	materialName: AnimalBreed;
	materialPercentage: NumberOfHazardousComponents;
}

export enum FabricContentTitle {
	FabricContent = 'Fabric Content',
}

export interface ProductSecondaryImageURL {
	$schema: string;
	type: SafetyDataSheetType;
	title: ProductSecondaryImageURLTitle;
	items: ProductSecondaryImageURLItems;
	minItems: number;
}

export interface ProductSecondaryImageURLItems {
	type: PurpleType;
	minLength: number;
	maxLength: number;
	format: Format;
}

export enum ProductSecondaryImageURLTitle {
	AdditionalImageURL = 'Additional Image URL',
}

export interface PurpleSwatchImages {
	$schema: string;
	type: SafetyDataSheetType;
	title: SwatchImagesTitle;
	items: PurpleItems;
	minItems: number;
}

export interface PurpleItems {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: IndigoProperties;
	additionalProperties: boolean;
}

export interface IndigoProperties {
	swatchVariantAttribute: Locale;
	swatchImageUrl: FeedDate;
}

export enum SwatchImagesTitle {
	SwatchImages = 'Swatch Images',
}

export interface WarrantyURL {
	type: PurpleType;
	title: WarrantyURLTitle;
	minLength: number;
	format: Format;
}

export enum WarrantyURLTitle {
	AssemblyInstructionsURL = 'Assembly Instructions URL',
	LabelImageURL = 'Label Image URL',
	WarrantyURL = 'Warranty URL',
}

export interface AnimalFood {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: AnimalFoodProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface AnimalFoodProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	labelImage: LabelImage;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	ingredients: FeedDate;
	msrp: NumberOfHazardousComponents;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	animalType: FeedDate;
	animalBreed: FeedDate;
	animalLifestage: FeedDate;
	minimumWeight: AssembledProductHeight;
	maximumWeight: AssembledProductHeight;
	petSize: FeedDate;
	size: FeedDate;
	petFoodForm: FeedDate;
	flavor: FeedDate;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	shelfLife: AssembledProductHeight;
	feedingInstructions: FeedDate;
	instructions: FeedDate;
	animalHealthConcern: Athlete;
	features: Athlete;
	globalBrandLicense: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface LabelImage {
	$schema: string;
	type: SafetyDataSheetType;
	title: string;
	items: LabelImageItems;
	minItems: number;
}

export interface LabelImageItems {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: IndecentProperties;
	required: FluffyRequired[];
	additionalProperties: boolean;
}

export interface IndecentProperties {
	labelImageContains: Locale;
	labelImageURL: WarrantyURL;
}

export enum FluffyRequired {
	LabelImageContains = 'labelImageContains',
	LabelImageURL = 'labelImageURL',
}

export interface AnimalHealthGrooming {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: AnimalHealthGroomingProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface AnimalHealthGroomingProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	labelImage: LabelImage;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	ingredients: FeedDate;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	animalType: FeedDate;
	animalBreed: FeedDate;
	animalLifestage: FeedDate;
	size: FeedDate;
	minimumWeight: AssembledProductHeight;
	maximumWeight: AssembledProductHeight;
	color: Athlete;
	petSize: FeedDate;
	animalHealthConcern: Athlete;
	dosage: FeedDate;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	shelfLife: AssembledProductHeight;
	drugDosageInstructionsImage: FeedDate;
	drugActiveInactiveIngredientsImage: FeedDate;
	globalBrandLicense: Athlete;
	flavor: FeedDate;
	activeIngredients: ActiveIngredients;
	inactiveIngredients: Athlete;
	stopUseIndications: Athlete;
	form: FeedDate;
	scent: FeedDate;
	hairLength: Athlete;
	powerType: FeedDate;
	isDisposable: Locale;
	instructions: FeedDate;
	isRetractable: Locale;
	features: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface ActiveIngredients {
	$schema: string;
	type: SafetyDataSheetType;
	title: string;
	items: ActiveIngredientsItems;
	minItems: number;
}

export interface ActiveIngredientsItems {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: HilariousProperties;
	additionalProperties: boolean;
}

export interface HilariousProperties {
	activeIngredientName: AnimalBreed;
	activeIngredientPercentage: NumberOfHazardousComponents;
}

export interface ArtCraft {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: ArtCraftProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface ArtCraftProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	smallPartsWarnings: CountryOfOriginAssembly;
	compositeWoodCertificationCode: Locale;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	inflexKitComponent: Locale;
	keyFeatures: Athlete;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	msrp: NumberOfHazardousComponents;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	material: Athlete;
	pattern: Athlete;
	size: FeedDate;
	metal: Locale;
	plating: FeedDate;
	finish: FeedDate;
	shape: FeedDate;
	scent: FeedDate;
	gender: Locale;
	ageGroup: CountryOfOriginAssembly;
	minimumRecommendedAge: AssembledProductHeight;
	maximumRecommendedAge: AssembledProductHeight;
	artPaintType: FeedDate;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	ingredients: FeedDate;
	fabricContent: FabricContent;
	fabricCareInstructions: Athlete;
	diameter: AssembledProductHeight;
	theme: Athlete;
	occasion: Athlete;
	isPowered: Locale;
	powerType: FeedDate;
	isBulk: Locale;
	isSelfAdhesive: Locale;
	isRefillable: Locale;
	isDisposable: Locale;
	isRecyclable: Locale;
	recommendedUses: Athlete;
	recommendedSurfaces: Athlete;
	skillLevel: FeedDate;
	features: Athlete;
	sweingMachineType: Locale;
	sewingKitType: Locale;
	boltLengthYardage: AssembledProductHeight;
	maximumTemperature: AssembledProductHeight;
	productLine: Athlete;
	fabricPurchaseForm: Locale;
	precutFabricSpecialtySize: Locale;
	globalBrandLicense: Athlete;
	character: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface Baby {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: BabyClothingProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface BabyClothingProperties {
	shortDescription: AnimalBreed;
	prop65WarningText: AnimalBreed;
	smallPartsWarnings: CountryOfOriginAssembly;
	countryOfOriginTextiles?: Locale;
	manufacturer: AnimalBreed;
	clothingSize?: FeedDate;
	color: Athlete;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	gender: Locale;
	ageGroup?: CountryOfOriginAssembly;
	colorCategory: CountryOfOriginAssembly;
	clothingSizeGroup?: Locale;
	size: AnimalBreed;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: AnimalBreed;
	modelNumber: AnimalBreed;
	countPerPack: NumberOfHazardousComponents;
	count: AnimalBreed;
	pieceCount: NumberOfHazardousComponents;
	minimumRecommendedAge: AssembledProductHeight;
	maximumRecommendedAge: AssembledProductHeight;
	fabricContent: FabricContent;
	fabricCareInstructions: Athlete;
	minimumWeight: AssembledProductHeight;
	maximumWeight: AssembledProductHeight;
	season: Athlete;
	scent: AnimalBreed;
	pajamaType?: FeedDate;
	tShirtType?: Athlete;
	outerwearCoatJacketAnVestType?: FeedDate;
	pattern: Athlete;
	shoeCategory?: Locale;
	shoeSize?: FeedDate;
	shoeStyle?: FeedDate;
	shoeWidth?: FeedDate;
	shoeClosure?: FeedDate;
	theme: Athlete;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	character: Athlete;
	sportsTeam: Athlete;
	sportsLeague: Athlete;
	athlete: Athlete;
	globalBrandLicense: Athlete;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: AnimalBreed;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
	seasonYear?: NumberOfHazardousComponents;
	seasonCode?: Locale;
	compositeWoodCertificationCode?: Locale;
	material?: Athlete;
	educationalFocus?: Athlete;
	makesNoise?: Locale;
	awardsWon?: Athlete;
	animalType?: FeedDate;
	isAssemblyRequired?: Locale;
	assemblyInstructions?: FeedDate;
	isPowered?: Locale;
	powerType?: FeedDate;
	screenSize?: AssembledProductHeight;
	warrantyText?: FeedDate;
	warrantyURL?: FeedDate;
}

export interface BabyDiaperingCareOther {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: BabyDiaperingCareOtherProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface BabyDiaperingCareOtherProperties {
	shortDescription: AnimalBreed;
	prop65WarningText: AnimalBreed;
	labelImage?: LabelImage;
	manufacturer: AnimalBreed;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	ingredients?: FeedDate;
	manufacturerPartNumber: AnimalBreed;
	modelNumber: AnimalBreed;
	msrp: NumberOfHazardousComponents;
	count: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	size: AnimalBreed;
	shelfLife?: AssembledProductHeight;
	bedSize: FeedDate;
	diaperSize?: FeedDate;
	diaposableBabyDiaperType?: Athlete;
	material: Athlete;
	gender: Locale;
	ageGroup: CountryOfOriginAssembly;
	minimumRecommendedAge?: AssembledProductHeight;
	maximumRecommendedAge?: AssembledProductHeight;
	minimumWeight?: AssembledProductHeight;
	maximumWeight?: AssembledProductHeight;
	scent?: FeedDate;
	character: Athlete;
	globalBrandLicense: Athlete;
	pattern: Athlete;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	warrantyURL: WarrantyURL;
	warrantyText: AnimalBreed;
	fabricContent: FabricContent;
	fabricCareInstructions: Athlete;
	sportsLeague: Athlete;
	sportsTeam: Athlete;
	athlete: Athlete;
	babyMonitorType?: Athlete;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: AnimalBreed;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
	countryOfOriginTextiles?: Locale;
	compositeWoodCertificationCode?: Locale;
	pieceCount?: NumberOfHazardousComponents;
	babyCribType?: Locale;
	collection?: FeedDate;
	mattressFirmness?: AnimalBreed;
	fillMaterial?: Athlete;
	finish?: FeedDate;
	shape?: AnimalBreed;
	isFoldable?: Locale;
	isWheeled?: Locale;
	homeDecorStyle?: AnimalBreed;
	isAssemblyRequired?: Locale;
	assemblyInstructions?: FeedDate;
	smallPartsWarnings?: CountryOfOriginAssembly;
	bedPillowSize?: Athlete;
	bedStyle?: FeedDate;
	threadCount?: NumberOfHazardousComponents;
	theme?: Athlete;
	monogramLetter?: FeedDate;
	occasion?: Athlete;
	isSet?: Locale;
}

export interface BabyFood {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: BabyFoodProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface BabyFoodProperties {
	shortDescription: AnimalBreed;
	prop65WarningText: AnimalBreed;
	labelImage: LabelImage;
	manufacturer: AnimalBreed;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	ingredients: AnimalBreed;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	countPerPack: NumberOfHazardousComponents;
	count: AnimalBreed;
	flavor: AnimalBreed;
	meal: AnimalBreed;
	size: AnimalBreed;
	ageGroup?: CountryOfOriginAssembly;
	minimumRecommendedAge?: AssembledProductHeight;
	maximumRecommendedAge?: AssembledProductHeight;
	shelfLife: AssembledProductHeight;
	character: Athlete;
	globalBrandLicense?: Athlete;
	servingSize: AnimalBreed;
	servingsPerContainer: NumberOfHazardousComponents;
	calories: AssembledProductHeight;
	caloriesFromFat: AssembledProductHeight;
	totalFat: AssembledProductHeight;
	totalFatPercentageDailyValue: NumberOfHazardousComponents;
	totalCarbohydrate: AssembledProductHeight;
	totalCarbohydratePercentageDailyValue: NumberOfHazardousComponents;
	nutrients: Nutrients;
	nutrientFootnote: AnimalBreed;
	totalProteinPercentageDailyValue: NumberOfHazardousComponents;
	totalProtein: AssembledProductHeight;
	foodForm: AnimalBreed;
	containerType: Athlete;
	fluidOuncesSupplying100Calories?: AssembledProductHeight;
	foodAllergenStatements: Athlete;
	babyFoodPackaging?: FeedDate;
	babyFormulaStage?: Athlete;
	babyFoodStage?: Athlete;
	instructions: AnimalBreed;
	features?: Athlete;
	safeHandlingInstructions: AnimalBreed;
	cuisine: Athlete;
	foodPreparationTips: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: AnimalBreed;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
	mealStyle?: FeedDate;
	dietType?: Locale;
	caffeineDesignation?: Locale;
	spiceLevel?: FeedDate;
	beefCut?: FeedDate;
	poultryCut?: FeedDate;
	releaseDate?: FeedDate;
	puffedSnackType?: Locale;
	nutrientContentClaims?: Athlete;
	dietaryMethod?: Athlete;
}

export interface Nutrients {
	$schema: string;
	type: SafetyDataSheetType;
	title: string;
	items: NutrientsItems;
	minItems: number;
}

export interface NutrientsItems {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: AmbitiousProperties;
	additionalProperties: boolean;
}

export interface AmbitiousProperties {
	nutrientName: AnimalBreed;
	nutrientAmount: AnimalBreed;
	nutrientPercentageDailyValue: AnimalBreed;
}

export interface BabyTransport {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: BabyTransportProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface BabyTransportProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	countryOfOriginTextiles: Locale;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	gender: Locale;
	keyFeatures: Athlete;
	modelNumber: FeedDate;
	manufacturerPartNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	pattern: Athlete;
	material: Athlete;
	msrp: NumberOfHazardousComponents;
	size: FeedDate;
	ageGroup: CountryOfOriginAssembly;
	minimumRecommendedAge: AssembledProductHeight;
	maximumRecommendedAge: AssembledProductHeight;
	minimumWeight: AssembledProductHeight;
	maximumWeight: AssembledProductHeight;
	isFoldable: Locale;
	isWheeled: Locale;
	strollerType: Athlete;
	seatingCapacity: NumberOfHazardousComponents;
	babyCarrierStyle: Athlete;
	babyCarrierPosition: Athlete;
	safetyHarnessStyle: Locale;
	childWalkingHarnessStyle: FeedDate;
	travelSystemCompatibility: FeedDate;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	character: Athlete;
	isAssemblyRequired: Locale;
	assemblyInstructions: FeedDate;
	fabricContent: FabricContent;
	fabricCareInstructions: Athlete;
	childCarSeatType: Locale;
	facingDirection: FeedDate;
	forwardFacingMinimumWeight: AssembledProductHeight;
	forwardFacingMaximumWeight: AssembledProductHeight;
	rearFacingMinimumWeight: AssembledProductHeight;
	rearFacingMaximumWeight: AssembledProductHeight;
	hasLatchSystem: Locale;
	carSeatBaseDepth: AssembledProductHeight;
	carSeatBaseWidth: AssembledProductHeight;
	carSeatMaxChildHeight: AssembledProductHeight;
	globalBrandLicense: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	sportsLeague: Athlete;
	sportsTeam: Athlete;
	athlete: Athlete;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface BeautyPersonalCareHygiene {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: BeautyPersonalCareHygieneProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface BeautyPersonalCareHygieneProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	labelImage: LabelImage;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	ingredients: FeedDate;
	manufacturer: FeedDate;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	msrp: NumberOfHazardousComponents;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	gender: Locale;
	size: FeedDate;
	collection: FeedDate;
	scent: FeedDate;
	flavor: FeedDate;
	drugActiveInactiveIngredientsImage: FeedDate;
	drugDosageInstructionsImage: FeedDate;
	isControlledSubstance: Locale;
	bodyParts: Athlete;
	hairType: FeedDate;
	hairColorCategory: Locale;
	hairCareKeyBenefit: CountryOfOriginAssembly;
	hairProductForm: Locale;
	wigCapStyle: Locale;
	skinType: FeedDate;
	skinTone: FeedDate;
	skinCareConcern: Athlete;
	spfValue: NumberOfHazardousComponents;
	absorbency: FeedDate;
	activeIngredients: ActiveIngredients;
	inactiveIngredients: Athlete;
	resultTime: AssembledProductHeight;
	stopUseIndications: Athlete;
	form: FeedDate;
	isNoncomodegenic: Locale;
	isUnscented: Locale;
	isAdultProduct: Locale;
	isTinted: Locale;
	isSelfTanning: Locale;
	isReusable: Locale;
	isSet: Locale;
	isTravelSize: Locale;
	isPortable: Locale;
	isDisposable: Locale;
	isPowered: Locale;
	isWaterproof: Locale;
	athlete: Athlete;
	makeupForm: CountryOfOriginAssembly;
	instructions: FeedDate;
	recommendedUses: Athlete;
	powerType: FeedDate;
	batteriesRequired: Locale;
	cleaningCareAndMaintenance: FeedDate;
	isHypoallergenic: Locale;
	perfumeCologneType: Locale;
	bodySprayType: Locale;
	material: Athlete;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	ageGroup: CountryOfOriginAssembly;
	compatibleBrands: Athlete;
	globalBrandLicense: Athlete;
	sportsTeam: Athlete;
	sportsLeague: Athlete;
	features: Athlete;
	medicineStrength: FeedDate;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface BuildingSupply {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: BuildingSupplyProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface BuildingSupplyProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	compositeWoodCertificationCode: Locale;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	size: FeedDate;
	material: Athlete;
	shape: FeedDate;
	pattern: Athlete;
	coverageArea: AssembledProductHeight;
	snowLoadRating: AssembledProductHeight;
	paintFinish: FeedDate;
	rollLength: AssembledProductHeight;
	recommendedSurfaces: Athlete;
	dryTime: AssembledProductHeight;
	doorStyle: FeedDate;
	doorOpeningStyle: FeedDate;
	carpetStyle: FeedDate;
	ingredients: FeedDate;
	vocLevel: FeedDate;
	peiRating: FeedDate;
	acRating: Locale;
	pileHeight: AssembledProductHeight;
	hasLowEmissivity: Locale;
	grade: FeedDate;
	form: FeedDate;
	fineness: FeedDate;
	isEnergyStarCertified: Locale;
	isOdorless: Locale;
	isMadeFromSustainableMaterials: Locale;
	isMadeFromRecycledMaterial: Locale;
	isMadeFromReclaimedMaterials: Locale;
	isPrefinished: Locale;
	isReadyToUse: Locale;
	isFastSetting: Locale;
	isCombustible: Locale;
	isMoldResistant: Locale;
	isFlammable: Locale;
	isFireResistant: Locale;
	isBiodegradable: Locale;
	isWaterSoluble: Locale;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	recycledMaterialContent: RecycledMaterialContent;
	isWaterproof: Locale;
	powerType: FeedDate;
	accessoriesIncluded: Athlete;
	thickness: AssembledProductHeight;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	cleaningCareAndMaintenance: FeedDate;
	globalBrandLicense: Athlete;
	recommendedUses: Athlete;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface RecycledMaterialContent {
	$schema: string;
	type: SafetyDataSheetType;
	title: string;
	items: RecycledMaterialContentItems;
	minItems: number;
}

export interface RecycledMaterialContentItems {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: CunningProperties;
	additionalProperties: boolean;
}

export interface CunningProperties {
	recycledMaterial: AnimalBreed;
	percentageOfRecycledMaterial: NumberOfHazardousComponents;
}

export interface CamerasLenses {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: CamerasLensesProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface CamerasLensesProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	numberOfMegapixels: AssembledProductHeight;
	digitalZoom: FeedDate;
	opticalZoom: FeedDate;
	magnification: FeedDate;
	sensorResolution: FeedDate;
	lensDiameter: AssembledProductHeight;
	lensCoating: FeedDate;
	lensFilterType: FeedDate;
	cameraLensType: FeedDate;
	hasFlash: Locale;
	flashType: FeedDate;
	minimumShutterSpeed: FocalLength;
	maximumShutterSpeed: FocalLength;
	focusType: Athlete;
	focalLength: FocalLength;
	focalRatio: FeedDate;
	minimumAperture: FeedDate;
	maximumAperture: FeedDate;
	exposureModes: Athlete;
	displayTechnology: FeedDate;
	displayResolution: Athlete;
	screenSize: AssembledProductHeight;
	diameter: AssembledProductHeight;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	isAssemblyRequired: Locale;
	assemblyInstructions: FeedDate;
	accessoriesIncluded: Athlete;
	hasTouchscreen: Locale;
	hasMemoryCardSlot: Locale;
	memoryCardType: Athlete;
	recordableMediaFormats: Athlete;
	wirelessTechnologies: Athlete;
	connections: Athlete;
	isPortable: Locale;
	isWaterproof: Locale;
	hasSelfTimer: Locale;
	selfTimerDelay: Athlete;
	standbyTime: AssembledProductHeight;
	fieldOfView: FeedDate;
	isParfocal: Locale;
	shootingMode: FeedDate;
	microphoneIncluded: Locale;
	hasHandle: Locale;
	isMulticoated: Locale;
	hasRedEyeReduction: Locale;
	hasNightVision: Locale;
	isFogResistant: Locale;
	attachmentStyle: FeedDate;
	hasShoulderStrap: Locale;
	compatibleBrands: Athlete;
	compatibleDevices: Athlete;
	material: Athlete;
	capacity: FeedDate;
	cleaningCareAndMaintenance: FeedDate;
	globalBrandLicense: Athlete;
	features: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface FocalLength {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: FocalLengthProperties;
	additionalProperties: boolean;
}

export interface FocalLengthProperties {
	measure: AnimalBreed;
	unit: Locale;
}

export interface CarriersAccessories {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: CarriersAccessoriesProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface CarriersAccessoriesProperties {
	shortDescription: AnimalBreed;
	prop65WarningText: AnimalBreed;
	countryOfOriginTextiles: Locale;
	manufacturer: AnimalBreed;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	gender: Locale;
	size: AnimalBreed;
	colorCategory: CountryOfOriginAssembly;
	ageGroup: CountryOfOriginAssembly;
	manufacturerPartNumber: AnimalBreed;
	modelNumber: AnimalBreed;
	countPerPack: NumberOfHazardousComponents;
	pieceCount: NumberOfHazardousComponents;
	msrp: NumberOfHazardousComponents;
	count: AnimalBreed;
	color: Athlete;
	bagStyle?: CountryOfOriginAssembly;
	pattern: Athlete;
	material: Athlete;
	dimensions?: FeedDate;
	capacity: AnimalBreed;
	isWheeled: Locale;
	numberOfWheels: NumberOfHazardousComponents;
	fabricContent: FabricContent;
	fabricCareInstructions: Athlete;
	handleMaterial: Athlete;
	shape: AnimalBreed;
	handleType: AnimalBreed;
	zipperMaterial: AnimalBreed;
	lockingMechanism: AnimalBreed;
	leatherGrade: AnimalBreed;
	bagCaseFeature?: FeedDate;
	isWeatherResistant: Locale;
	isWaterproof: Locale;
	autographedBy: AnimalBreed;
	monogramLetter: AnimalBreed;
	isMadeFromRecycledMaterial: Locale;
	recycledMaterialContent: RecycledMaterialContent;
	isFairTrade?: Locale;
	luggageType?: FeedDate;
	scarfStyle?: Athlete;
	designer: AnimalBreed;
	luggageStyle?: FeedDate;
	isLined: Locale;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	warrantyText: AnimalBreed;
	warrantyURL: WarrantyURL;
	character: Athlete;
	features: Athlete;
	globalBrandLicense: Athlete;
	sportsLeague: Athlete;
	sportsTeam: Athlete;
	athlete: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: AnimalBreed;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
	seasonYear: NumberOfHazardousComponents;
	seasonCode: Locale;
	hardOrSoftCase?: Locale;
	compatibleBrands?: Athlete;
	compatibleDevices?: Athlete;
	screenSize?: AssembledProductHeight;
	maximumWeight?: AssembledProductHeight;
	finish?: FeedDate;
	numberOfCompartments?: NumberOfHazardousComponents;
	hasRemovableStrap?: Locale;
	fastenerType?: FeedDate;
	sport?: Athlete;
	isReusable?: Locale;
	isFoldable?: Locale;
	recommendedUses?: Athlete;
	occasion?: Athlete;
}

export interface CellPhones {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: CellPhonesProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface CellPhonesProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	mobileOperatingSystem: Athlete;
	cellPhoneServiceProvider: FeedDate;
	cellPhoneType: FeedDate;
	modelName: FeedDate;
	screenSize: AssembledProductHeight;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	color: Athlete;
	edition: FeedDate;
	cellularNetworkTechnology: FeedDate;
	msrp: NumberOfHazardousComponents;
	hardDriveCapacity: AssembledProductHeight;
	frontFacingCameraMegapixels: AssembledProductHeight;
	rearCameraMegapixels: AssembledProductHeight;
	hasSignalBooster: Locale;
	connections: Athlete;
	memoryCardType: Athlete;
	hasFlash: Locale;
	batteryLife: AssembledProductHeight;
	resolution: FeedDate;
	ramMemory: AssembledProductHeight;
	talkTime: AssembledProductHeight;
	standbyTime: AssembledProductHeight;
	wirelessTechnologies: Athlete;
	compatibleModels: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface CeremonialClothingAccessories {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: CeremonialClothingAccessoriesProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface CeremonialClothingAccessoriesProperties {
	shortDescription: AnimalBreed;
	prop65WarningText?: AnimalBreed;
	smallPartsWarnings?: CountryOfOriginAssembly;
	countryOfOriginTextiles?: Locale;
	manufacturer: AnimalBreed;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: AnimalBreed;
	modelNumber: AnimalBreed;
	countPerPack: NumberOfHazardousComponents;
	count: AnimalBreed;
	pieceCount?: NumberOfHazardousComponents;
	material: Athlete;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	pattern?: Athlete;
	size: AnimalBreed;
	clothingSize?: AnimalBreed;
	clothingSizeGroup?: Locale;
	occasion?: Athlete;
	gender?: Locale;
	theme?: Athlete;
	fabricContent?: FabricContent;
	fabricCareInstructions?: Athlete;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	globalBrandLicense?: Athlete;
	recommendedUses?: Athlete;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: AnimalBreed;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
	targetAudience?: Athlete;
	animalType?: FeedDate;
	wigStyles?: Athlete;
	character?: Athlete;
	compositeWoodCertificationCode?: Locale;
	shape?: AnimalBreed;
	finish?: AnimalBreed;
	isAssemblyRequired?: Locale;
	assemblyInstructions?: WarrantyURL;
	sportsLeague?: Athlete;
	instrument?: Athlete;
	hardOrSoftCase?: Locale;
	isWheeled?: Locale;
	isPortable?: Locale;
	recommendedLocations?: Athlete;
	warrantyText?: FeedDate;
	warrantyURL?: FeedDate;
	ingredients?: FeedDate;
	isFoldable?: Locale;
	isRetractable?: Locale;
	isIndustrial?: Locale;
	systemOfMeasurement?: FeedDate;
}

export interface Clothing {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: ClothingProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface ClothingProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	gender: Locale;
	clothingSize: FeedDate;
	ageGroup: CountryOfOriginAssembly;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	smallPartsWarnings: CountryOfOriginAssembly;
	countryOfOriginTextiles: Locale;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	clothingSizeGroup: Locale;
	clothingStyle: Athlete;
	fabricContent: FabricContent;
	fabricCareInstructions: Athlete;
	material: Athlete;
	pattern: Athlete;
	clothingCut: Athlete;
	clothingFit: FeedDate;
	clothingWeight: Locale;
	clothingTopStyle: Athlete;
	clothingLengthStyle: FeedDate;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	isSet: Locale;
	dressShirtSize: FeedDate;
	neckSize: AssembledProductHeight;
	shirtNeckStyle: FeedDate;
	sleeveLength: AssembledProductHeight;
	sleeveLengthStyle: Locale;
	sleeveStyle: FeedDate;
	collarType: FeedDate;
	tShirtType: Athlete;
	jacketStyle: Athlete;
	suitBreastingStyle: Locale;
	sweaterStyle: Athlete;
	scarfStyle: Athlete;
	hatStyle: Athlete;
	hatSize: Locale;
	braStyle: Athlete;
	braSize: FeedDate;
	braBandSize: AssembledProductHeight;
	braCupSize: FeedDate;
	upperBodyStrapConfiguration: Athlete;
	chestSize: AssembledProductHeight;
	pantySize: Locale;
	pantRise: FeedDate;
	waistStyle: CountryOfOriginAssembly;
	waistSize: AssembledProductHeight;
	skirtLength: AssembledProductHeight;
	legOpeningCut: Locale;
	pantLegCut: Locale;
	inseam: AssembledProductHeight;
	jeanStyle: Athlete;
	jeanWash: FeedDate;
	jeanFinish: Athlete;
	pantSize: FeedDate;
	pantFit: Athlete;
	pantStyle: FeedDate;
	beltStyle: Athlete;
	beltBuckleStyle: FeedDate;
	shortsStyle: Athlete;
	skirtAndDressCut: Athlete;
	skirtLengthStyle: FeedDate;
	hosieryStyle: Athlete;
	tightsSheerness: Locale;
	pantyStyle: FeedDate;
	underwearStyle: Athlete;
	underpantsType: FeedDate;
	sockSize: FeedDate;
	sockStyle: FeedDate;
	sockRise: Locale;
	shoeSize: FeedDate;
	accentColor: FeedDate;
	fastenerType: FeedDate;
	swimsuitStyle: FeedDate;
	dressStyle: FeedDate;
	pajamaType: FeedDate;
	outerwearCoatJacketAnVestType: FeedDate;
	gotsCertification: Locale;
	theme: Athlete;
	occasion: Athlete;
	activity: Athlete;
	sport: Athlete;
	season: Athlete;
	weather: Athlete;
	isMaternity: Locale;
	academicInstitution: FeedDate;
	autographedBy: FeedDate;
	recycledMaterialContent: RecycledMaterialContent;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	character: Athlete;
	globalBrandLicense: Athlete;
	sportsLeague: Athlete;
	sportsTeam: Athlete;
	athlete: Athlete;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
	seasonYear: NumberOfHazardousComponents;
	seasonCode: Locale;
}

export interface ComputerComponents {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: ComputerComponentsProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface ComputerComponentsProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	msrp: NumberOfHazardousComponents;
	count: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	pieceCount: NumberOfHazardousComponents;
	hardDriveCapacity: AssembledProductHeight;
	ramMemory: AssembledProductHeight;
	RAMSpeed: FeedDate;
	maximumRamSupported: AssembledProductHeight;
	internalExternal: Locale;
	processorSpeed: AssembledProductHeight;
	processorType: Athlete;
	connections: Athlete;
	isCordless: Locale;
	memoryCardType: Athlete;
	cpuSocketType: Athlete;
	color: Athlete;
	motherboardFormFactor: Athlete;
	resolution: FeedDate;
	cableLength: AssembledProductHeight;
	screenSize: AssembledProductHeight;
	wirelessTechnologies: Athlete;
	dataIntegrityCheck: Locale;
	numberOfKeys: NumberOfHazardousComponents;
	numberOfSpeakers: NumberOfHazardousComponents;
	rackSize: FeedDate;
	RAIDlevel: Locale;
	mountType: Athlete;
	edition: FeedDate;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	features: Athlete;
	numberOfChannels: FeedDate;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface Computers {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: ComputersProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface ComputersProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	msrp: NumberOfHazardousComponents;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	screenSize: AssembledProductHeight;
	resolution: FeedDate;
	displayTechnology: FeedDate;
	hardDriveCapacity: AssembledProductHeight;
	ramMemory: AssembledProductHeight;
	RAMSpeed: FeedDate;
	maximumRamSupported: AssembledProductHeight;
	internalExternal: Locale;
	processorSpeed: AssembledProductHeight;
	processorType: Athlete;
	computerStyle: FeedDate;
	frontFacingCameraMegapixels: AssembledProductHeight;
	rearCameraMegapixels: AssembledProductHeight;
	operatingSystem: Athlete;
	hasTouchscreen: Locale;
	connections: Athlete;
	memoryCardType: Athlete;
	opticalDrive: FeedDate;
	graphicsInformation: FeedDate;
	formFactor: FeedDate;
	hasSignalBooster: Locale;
	wirelessTechnologies: Athlete;
	batteryLife: AssembledProductHeight;
	RAIDlevel: Locale;
	numberOfKeys: NumberOfHazardousComponents;
	mountType: Athlete;
	dataIntegrityCheck: Locale;
	isPortable: Locale;
	edition: FeedDate;
	features: Athlete;
	numberOfChannels: FeedDate;
	globalBrandLicense: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface Cycling {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: CyclingProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface CyclingProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	smallPartsWarnings: CountryOfOriginAssembly;
	countryOfOriginTextiles: Locale;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	gender: Locale;
	size: FeedDate;
	ageGroup: CountryOfOriginAssembly;
	minimumRecommendedAge: AssembledProductHeight;
	maximumRecommendedAge: AssembledProductHeight;
	sport: Athlete;
	bicycleFrameSize: AssembledProductHeight;
	bicycleWheelDiameter: AssembledProductHeight;
	bicycleTireSize: FeedDate;
	numberOfSpeeds: NumberOfHazardousComponents;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	clothingSize: FeedDate;
	fabricContent: FabricContent;
	fabricCareInstructions: Athlete;
	material: Athlete;
	pattern: Athlete;
	isWeatherResistant: Locale;
	isFoldable: Locale;
	season: Athlete;
	isWaterproof: Locale;
	isPowered: Locale;
	isAssemblyRequired: Locale;
	assemblyInstructions: FeedDate;
	dexterity: FeedDate;
	finish: FeedDate;
	shape: FeedDate;
	capacity: FeedDate;
	seatingCapacity: NumberOfHazardousComponents;
	maximumWeight: AssembledProductHeight;
	wirelessTechnologies: Athlete;
	isPortable: Locale;
	powerType: FeedDate;
	lightBulbType: FeedDate;
	horsepower: AssembledProductHeight;
	tireDiameter: AssembledProductHeight;
	cleaningCareAndMaintenance: FeedDate;
	recommendedUses: Athlete;
	recommendedLocations: Athlete;
	lockType: FeedDate;
	lockingMechanism: FeedDate;
	sportsLeague: Athlete;
	sportsTeam: Athlete;
	features: Athlete;
	character: Athlete;
	globalBrandLicense: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	athlete: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface DecorationsFavors {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: DecorationsFavorsProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface DecorationsFavorsProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	smallPartsWarnings: CountryOfOriginAssembly;
	compositeWoodCertificationCode: Locale;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	finish: FeedDate;
	pattern: Athlete;
	material: Athlete;
	diameter: AssembledProductHeight;
	size: FeedDate;
	shape: FeedDate;
	occasion: Athlete;
	holidayLightingStyle: Athlete;
	lightBulbType: FeedDate;
	lightBulbColor: FeedDate;
	numberOfLights: NumberOfHazardousComponents;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	isAssemblyRequired: Locale;
	assemblyInstructions: FeedDate;
	powerType: FeedDate;
	watts: AssembledProductHeight;
	isInflatable: Locale;
	isAnimated: Locale;
	isAdultProduct: Locale;
	theme: Athlete;
	character: Athlete;
	ageGroup: CountryOfOriginAssembly;
	gender: Locale;
	globalBrandLicense: Athlete;
	sportsLeague: Athlete;
	sportsTeam: Athlete;
	autographedBy: FeedDate;
	athlete: Athlete;
	recommendedUses: Athlete;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface Electrical {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: ElectricalProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface ElectricalProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	baseColor: FeedDate;
	baseFinish: FeedDate;
	finish: FeedDate;
	pattern: Athlete;
	size: FeedDate;
	material: Athlete;
	shape: FeedDate;
	homeDecorStyle: FeedDate;
	isEnergyStarCertified: Locale;
	maximumEnergySurgeRating: FeedDate;
	estimatedEnergyCostPerYear: AssembledProductHeight;
	maximumRange: FeedDate;
	lightBulbColor: FeedDate;
	powerType: FeedDate;
	volts: CompatibleConduitSizes;
	amps: AssembledProductHeight;
	watts: AssembledProductHeight;
	compatibleConduitSizes: CompatibleConduitSizes;
	electricalBallastFactor: NumberOfHazardousComponents;
	numberOfLights: NumberOfHazardousComponents;
	shadeMaterial: FeedDate;
	shadeStyle: FeedDate;
	beamAngle: AssembledProductHeight;
	beamSpread: AssembledProductHeight;
	conductorMaterial: FeedDate;
	impedance: FocalLength;
	isDarkSkyCompliant: Locale;
	colorTemperature: AssembledProductHeight;
	numberOfGangs: NumberOfHazardousComponents;
	numberOfPoles: NumberOfHazardousComponents;
	responseTime: AssembledProductHeight;
	americanWireGauge: NumberOfHazardousComponents;
	mountType: Athlete;
	isRatedForOutdoorUse: Locale;
	lifespan: FeedDate;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	brightness: AssembledProductHeight;
	lightBulbType: FeedDate;
	lightBulbShape: Locale;
	lightBulbBaseType: Locale;
	isFireResistant: Locale;
	isWaterproof: Locale;
	decibelRating: AssembledProductHeight;
	accessoriesIncluded: Athlete;
	horsepower: AssembledProductHeight;
	character: Athlete;
	globalBrandLicense: Athlete;
	sportsLeague: Athlete;
	sportsTeam: Athlete;
	athlete: Athlete;
	cleaningCareAndMaintenance: FeedDate;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	recommendedUses: Athlete;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface CompatibleConduitSizes {
	$schema: string;
	type: SafetyDataSheetType;
	title: string;
	items: AssembledProductHeight;
	minItems: number;
}

export interface ElectronicsAccessories {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: ElectronicsAccessoriesProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface ElectronicsAccessoriesProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	msrp: NumberOfHazardousComponents;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	size: FeedDate;
	screenSize: AssembledProductHeight;
	compatibleBrands: Athlete;
	compatibleDevices: Athlete;
	compatibleModels: Athlete;
	connections: Athlete;
	hardDriveCapacity: AssembledProductHeight;
	memoryCardType: Athlete;
	opticalDrive: FeedDate;
	tvAndMonitorMountType: FeedDate;
	maximumLoadWeight: AssembledProductHeight;
	minimumScreenSize: AssembledProductHeight;
	maximumScreenSize: AssembledProductHeight;
	recordableMediaFormats: Athlete;
	headphoneFeatures: Athlete;
	wirelessTechnologies: Athlete;
	audioFeatures: Athlete;
	peakAudioPowerCapacity: AssembledProductHeight;
	audioPowerOutput: FeedDate;
	dataTransferRate: FeedDate;
	microphoneTechnology: FeedDate;
	numberOfKeys: NumberOfHazardousComponents;
	numberOfSpeakers: NumberOfHazardousComponents;
	resolution: FeedDate;
	mountingPattern: FeedDate;
	cableLength: AssembledProductHeight;
	movementDetection: FeedDate;
	headphoneStyle: Locale;
	edition: FeedDate;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface ElectronicsCables {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: ElectronicsCablesProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface ElectronicsCablesProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	cableLength: AssembledProductHeight;
	color: Athlete;
	msrp: NumberOfHazardousComponents;
	compatibleDevices: Athlete;
	numberOfTwistedPairsPerCable: NumberOfHazardousComponents;
	connectorFinish: FeedDate;
	connections: Athlete;
	dataTransferRate: FeedDate;
	numberOfChannels: FeedDate;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	features: Athlete;
	globalBrandLicense: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface ElectronicsOther {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: ElectronicsOtherProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface ElectronicsOtherProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	inflexKitComponent: Locale;
	keyFeatures: Athlete;
	modelNumber: FeedDate;
	manufacturerPartNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	msrp: NumberOfHazardousComponents;
	pieceCount: NumberOfHazardousComponents;
	size: FeedDate;
	platform: FeedDate;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	ageGroup: CountryOfOriginAssembly;
	isSmart: Locale;
	isCordless: Locale;
	connections: Athlete;
	hardDriveCapacity: AssembledProductHeight;
	memoryCardType: Athlete;
	wirelessTechnologies: Athlete;
	audioFeatures: Athlete;
	peakAudioPowerCapacity: AssembledProductHeight;
	audioPowerOutput: FeedDate;
	resolution: FeedDate;
	dataTransferRate: FeedDate;
	streamingServices: FeedDate;
	speakerDriver: FeedDate;
	numberOfSpeakers: NumberOfHazardousComponents;
	impedance: FocalLength;
	microphoneTechnology: FeedDate;
	digitalAudioFileFormat: Athlete;
	babyMonitorType: Athlete;
	isPortable: Locale;
	numberOfChannels: FeedDate;
	supportedMediaFormats: FeedDate;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface Footwear {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: FootwearProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface FootwearProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	shoeSize: FeedDate;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	countryOfOriginTextiles: Locale;
	smallPartsWarnings: CountryOfOriginAssembly;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	gender: Locale;
	ageGroup: CountryOfOriginAssembly;
	shoeCategory: Locale;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	shoeWidth: FeedDate;
	shoeSizeSystem: Locale;
	pattern: Athlete;
	material: Athlete;
	activity: Athlete;
	heelHeight: AssembledProductHeight;
	shoeStyle: FeedDate;
	casualAndDressShoeType: FeedDate;
	shoeClosure: FeedDate;
	collection: FeedDate;
	secondaryMaterial: Athlete;
	shoeSoleMaterial: FeedDate;
	insoleFeature: Athlete;
	fabricContent: FabricContent;
	fabricCareInstructions: Athlete;
	heelDrop: AssembledProductHeight;
	footwearHeelStyle: FeedDate;
	toeStyle: FeedDate;
	embellishmentType: Athlete;
	bootShaftHeight: CompatibleConduitSizes;
	bootShaftCircumference: CompatibleConduitSizes;
	bootShaftStyle: Athlete;
	bootShaftWidthStyle: Athlete;
	season: Athlete;
	occasion: Athlete;
	recommendedLocations: Athlete;
	isWaterResistant: Locale;
	isOrthopedic: Locale;
	healthConcerns: Athlete;
	size: FeedDate;
	character: Athlete;
	sportsTeam: Athlete;
	sportsLeague: Athlete;
	athlete: Athlete;
	autographedBy: FeedDate;
	globalBrandLicense: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
	seasonYear: NumberOfHazardousComponents;
	seasonCode: Locale;
}

export interface FuelsLubricants {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: FuelsLubricantsProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface FuelsLubricantsProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	size: FeedDate;
	fuelType: FeedDate;
	fluidOunces: AssembledProductHeight;
	recommendedUses: Athlete;
	shelfLife: AssembledProductHeight;
	instructions: FeedDate;
	form: FeedDate;
	isFlammable: Locale;
	isCombustible: Locale;
	isBiodegradable: Locale;
	isEnergyStarCertified: Locale;
	isRefillable: Locale;
	features: Athlete;
	systemOfMeasurement: FeedDate;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface Furniture {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: FurnitureProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface FurnitureProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	countryOfOriginTextiles: Locale;
	compositeWoodCertificationCode: Locale;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	inflexKitComponent: Locale;
	msrp: NumberOfHazardousComponents;
	keyFeatures: Athlete;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	finish: FeedDate;
	material: Athlete;
	pattern: Athlete;
	lightingFactsLabel: FeedDate;
	gender: Locale;
	ageGroup: CountryOfOriginAssembly;
	size: FeedDate;
	bedSize: FeedDate;
	homeDecorStyle: FeedDate;
	seatingCapacity: NumberOfHazardousComponents;
	numberOfDrawers: NumberOfHazardousComponents;
	numberOfShelves: NumberOfHazardousComponents;
	collection: FeedDate;
	theme: Athlete;
	shape: FeedDate;
	diameter: AssembledProductHeight;
	bedStyle: FeedDate;
	mountType: Athlete;
	isAssemblyRequired: Locale;
	assemblyInstructions: FeedDate;
	fabricContent: FabricContent;
	fabricCareInstructions: Athlete;
	configuration: FeedDate;
	fabricColor: FeedDate;
	accentColor: FeedDate;
	cushionColor: FeedDate;
	numberOfPanels: NumberOfHazardousComponents;
	seatBackStyle: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	powerType: FeedDate;
	isPowered: Locale;
	autographedBy: FeedDate;
	recommendedUses: Athlete;
	recommendedRooms: Athlete;
	recommendedLocations: Athlete;
	mattressFirmness: FeedDate;
	mattressThickness: AssembledProductHeight;
	pumpIncluded: Locale;
	fillMaterial: Athlete;
	frameMaterial: Athlete;
	seatMaterial: FeedDate;
	seatHeight: AssembledProductHeight;
	seatBackHeight: AssembledProductHeight;
	tableHeight: AssembledProductHeight;
	topMaterial: FeedDate;
	topDimensions: FeedDate;
	topFinish: FeedDate;
	hardwareFinish: FeedDate;
	baseMaterial: FeedDate;
	baseColor: FeedDate;
	baseFinish: FeedDate;
	doorOpeningStyle: FeedDate;
	doorStyle: FeedDate;
	slatWidth: AssembledProductHeight;
	numberOfHooks: NumberOfHazardousComponents;
	headboardStyle: FeedDate;
	frameColor: FeedDate;
	isAntique: Locale;
	isFoldable: Locale;
	isInflatable: Locale;
	isWheeled: Locale;
	isIndustrial: Locale;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	sportsTeam: Athlete;
	character: Athlete;
	globalBrandLicense: Athlete;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantAttributeNames: CountryOfOriginAssembly;
	variantGroupId: FeedDate;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface GardenPatio {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: GardenPatioProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface GardenPatioProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	countryOfOriginTextiles: Locale;
	compositeWoodCertificationCode: Locale;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	inflexKitComponent: Locale;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	homeDecorStyle: FeedDate;
	plantCategory: FeedDate;
	minimumTemperature: AssembledProductHeight;
	season: Athlete;
	occasion: Athlete;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	size: FeedDate;
	pattern: Athlete;
	finish: FeedDate;
	shape: FeedDate;
	theme: Athlete;
	fabricContent: FabricContent;
	material: Athlete;
	frameMaterial: Athlete;
	baseMaterial: FeedDate;
	isAntique: Locale;
	isFoldable: Locale;
	isWheeled: Locale;
	isWeatherResistant: Locale;
	isWaterproof: Locale;
	isTearResistant: Locale;
	powerType: FeedDate;
	lightBulbType: FeedDate;
	lightBulbColor: FeedDate;
	volts: CompatibleConduitSizes;
	watts: AssembledProductHeight;
	cuttingWidth: FeedDate;
	clearingWidth: AssembledProductHeight;
	sprayPatterns: FeedDate;
	fuelType: FeedDate;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	recommendedUses: Athlete;
	recommendedLocations: Athlete;
	isBulk: Locale;
	diameter: AssembledProductHeight;
	capacity: FeedDate;
	productVolume: FeedDate;
	maximumWeight: AssembledProductHeight;
	hasRadiantHeat: Locale;
	coverageArea: AssembledProductHeight;
	minimumClearance: AssembledProductHeight;
	isIndustrial: Locale;
	flowRate: AssembledProductHeight;
	isEnergyStarCertified: Locale;
	hasAutomaticShutoff: Locale;
	installationType: FeedDate;
	vaseIncluded: Locale;
	flooringMaterial: FeedDate;
	cleaningCareAndMaintenance: FeedDate;
	isAssemblyRequired: Locale;
	assemblyInstructions: FeedDate;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	sportsTeam: Athlete;
	character: Athlete;
	ageGroup: CountryOfOriginAssembly;
	features: Athlete;
	globalBrandLicense: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface GrillsOutdoorCooking {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: GrillsOutdoorCookingProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface GrillsOutdoorCookingProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	homeDecorStyle: FeedDate;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	size: FeedDate;
	finish: FeedDate;
	numberOfBurners: NumberOfHazardousComponents;
	sideBurnerSize: AssembledProductHeight;
	hasSideShelf: Locale;
	hasCharcoalBasket: Locale;
	hasTankTray: Locale;
	totalCookingArea: AssembledProductHeight;
	fuelType: FeedDate;
	btu: NumberOfHazardousComponents;
	frameMaterial: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	lifespan: FeedDate;
	isBulk: Locale;
	capacity: FeedDate;
	productVolume: FeedDate;
	maximumWeight: AssembledProductHeight;
	hasRadiantHeat: Locale;
	isIndustrial: Locale;
	isFoldable: Locale;
	isWheeled: Locale;
	isWaterproof: Locale;
	isWeatherResistant: Locale;
	isEnergyStarCertified: Locale;
	powerType: FeedDate;
	installationType: FeedDate;
	flavor: FeedDate;
	hasAutomaticShutoff: Locale;
	minimumTemperature: AssembledProductHeight;
	maximumTemperature: AssembledProductHeight;
	flowRate: AssembledProductHeight;
	cleaningCareAndMaintenance: FeedDate;
	isAssemblyRequired: Locale;
	recommendedUses: Athlete;
	recommendedLocations: Athlete;
	assemblyInstructions: FeedDate;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	ageGroup: CountryOfOriginAssembly;
	sportsTeam: Athlete;
	sportsLeague: Athlete;
	globalBrandLicense: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	features: Athlete;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface Hardware {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: HardwareProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface HardwareProperties {
	shortDescription: AnimalBreed;
	prop65WarningText: AnimalBreed;
	manufacturer: AnimalBreed;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: AnimalBreed;
	modelNumber: AnimalBreed;
	countPerPack: NumberOfHazardousComponents;
	count: AnimalBreed;
	pieceCount: NumberOfHazardousComponents;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	material: Athlete;
	shape: AnimalBreed;
	finish: AnimalBreed;
	size: AnimalBreed;
	homeDecorStyle?: FeedDate;
	isLockable?: Locale;
	lockType?: FeedDate;
	lockingMechanism?: FeedDate;
	alphanumericCharacter?: FeedDate;
	mountType?: Athlete;
	grade?: FeedDate;
	workingLoadLimit?: NumberOfHazardousComponents;
	maximumWeight?: AssembledProductHeight;
	threadStandard?: FeedDate;
	backsetSize?: AssembledProductHeight;
	volts?: CompatibleConduitSizes;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	accessoriesIncluded: Athlete;
	isWaterproof: Locale;
	isFireResistant: Locale;
	cleaningCareAndMaintenance: AnimalBreed;
	recommendedUses: Athlete;
	globalBrandLicense: Athlete;
	warrantyText: AnimalBreed;
	warrantyURL: WarrantyURL;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantAttributeNames: CountryOfOriginAssembly;
	variantGroupId: AnimalBreed;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface HealthBeautyElectronics {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: HealthBeautyElectronicsProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface HealthBeautyElectronicsProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	msrp: NumberOfHazardousComponents;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	color: Athlete;
	size: FeedDate;
	bodyParts: Athlete;
	isPowered: Locale;
	powerType: FeedDate;
	hasAutomaticShutoff: Locale;
	isTravelSize: Locale;
	isPortable: Locale;
	isReusable: Locale;
	isDisposable: Locale;
	isCordless: Locale;
	ageGroup: CountryOfOriginAssembly;
	hairType: FeedDate;
	hairProductForm: Locale;
	hairCareKeyBenefit: CountryOfOriginAssembly;
	skinType: FeedDate;
	skinTone: FeedDate;
	skinCareConcern: Athlete;
	makeupForm: CountryOfOriginAssembly;
	ingredientPreference: CountryOfOriginAssembly;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	instructions: FeedDate;
	features: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface HomeDecorKitchenOther {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: HomeDecorKitchenOtherProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface HomeDecorKitchenOtherProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	smallPartsWarnings: CountryOfOriginAssembly;
	countryOfOriginTextiles: Locale;
	compositeWoodCertificationCode: Locale;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	accentColor: FeedDate;
	pattern: Athlete;
	material: Athlete;
	finish: FeedDate;
	size: FeedDate;
	homeDecorStyle: FeedDate;
	curtainPanelStyle: FeedDate;
	curtainLength: AssembledProductHeight;
	slatWidth: AssembledProductHeight;
	windowTreatmentSheerness: CountryOfOriginAssembly;
	rugStyle: Athlete;
	rugSize: FeedDate;
	clockNumberType: FeedDate;
	shadeStyle: FeedDate;
	shadeMaterial: FeedDate;
	shape: FeedDate;
	bedStyle: FeedDate;
	threadCount: NumberOfHazardousComponents;
	gramsSquareMeter: NumberOfHazardousComponents;
	mealStyle: FeedDate;
	meal: FeedDate;
	isNonStick: Locale;
	lightingFactsLabel: FeedDate;
	lampType: Athlete;
	scent: FeedDate;
	isPetFriendly: Locale;
	fabricColor: FeedDate;
	fabricContent: FabricContent;
	fabricCareInstructions: Athlete;
	fillMaterial: Athlete;
	framed: Locale;
	frameMaterial: Athlete;
	frameColor: FeedDate;
	artist: Athlete;
	orientation: Locale;
	baseColor: FeedDate;
	baseFinish: FeedDate;
	academicInstitution: FeedDate;
	recommendedRooms: Athlete;
	recommendedUses: Athlete;
	cleaningCareAndMaintenance: FeedDate;
	powerType: FeedDate;
	inductionSafe: Locale;
	serviceCount: NumberOfHazardousComponents;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	isAssemblyRequired: Locale;
	assemblyInstructions: FeedDate;
	bedSize: FeedDate;
	collection: FeedDate;
	occasion: Athlete;
	contaminantsRemoved: FeedDate;
	theme: Athlete;
	capacity: FeedDate;
	diameter: AssembledProductHeight;
	isSet: Locale;
	character: Athlete;
	ageGroup: CountryOfOriginAssembly;
	gender: Locale;
	volumeCapacity: AssembledProductHeight;
	globalBrandLicense: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	sportsLeague: Athlete;
	sportsTeam: Athlete;
	athlete: Athlete;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface HouseholdCleaningProductsSupplies {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: HouseholdCleaningProductsSuppliesProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface HouseholdCleaningProductsSuppliesProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	labelImage: LabelImage;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	ingredients: FeedDate;
	recommendedSurfaces: Athlete;
	recommendedRooms: Athlete;
	recommendedLocations: Athlete;
	size: FeedDate;
	material: Athlete;
	finish: FeedDate;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	pattern: Athlete;
	shape: FeedDate;
	numberOfSheets: NumberOfHazardousComponents;
	isAssemblyRequired: Locale;
	assemblyInstructions: FeedDate;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	shelfLife: AssembledProductHeight;
	fabricContent: FabricContent;
	isPowered: Locale;
	powerType: FeedDate;
	volts: CompatibleConduitSizes;
	connections: Athlete;
	activeIngredients: ActiveIngredients;
	inactiveIngredients: Athlete;
	instructions: FeedDate;
	form: FeedDate;
	scent: FeedDate;
	fluidOunces: AssembledProductHeight;
	isRecyclable: Locale;
	isFlammable: Locale;
	isCombustible: Locale;
	isBiodegradable: Locale;
	isEnergyStarCertified: Locale;
	handleLength: AssembledProductHeight;
	bladeWidth: AssembledProductHeight;
	bristleMaterial: FeedDate;
	cleaningPath: AssembledProductHeight;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface InstrumentAccessories {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: InstrumentAccessoriesProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface InstrumentAccessoriesProperties {
	shortDescription: AnimalBreed;
	prop65WarningText: AnimalBreed;
	smallPartsWarnings: CountryOfOriginAssembly;
	compositeWoodCertificationCode?: Locale;
	manufacturer: AnimalBreed;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: AnimalBreed;
	modelNumber: AnimalBreed;
	countPerPack: NumberOfHazardousComponents;
	count: AnimalBreed;
	pieceCount: NumberOfHazardousComponents;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	size?: FeedDate;
	instrument?: Athlete;
	inputsAndOutputs: InputsAndOutputs;
	displayTechnology?: FeedDate;
	wirelessTechnologies: Athlete;
	hasBluetooth: Locale;
	batteryLife: AssembledProductHeight;
	isRemoteControlIncluded: Locale;
	autographedBy?: FeedDate;
	isPortable: Locale;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	recommendedUses: Athlete;
	recommendedLocations: Athlete;
	ingredients?: FeedDate;
	pattern?: Athlete;
	material: Athlete;
	sportsLeague?: Athlete;
	sportsTeam?: Athlete;
	athlete?: Athlete;
	warrantyText: AnimalBreed;
	warrantyURL: WarrantyURL;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: AnimalBreed;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
	audioPowerOutput?: FeedDate;
	equalizerControl?: FeedDate;
	hasIntegratedSpeakers?: Locale;
	isPowered?: Locale;
	microphoneTechnology?: FeedDate;
	impedance?: FocalLength;
	powerType?: FeedDate;
}

export interface InputsAndOutputs {
	$schema: string;
	type: SafetyDataSheetType;
	title: string;
	items: InputsAndOutputsItems;
	minItems: number;
}

export interface InputsAndOutputsItems {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: MagentaProperties;
	additionalProperties: boolean;
}

export interface MagentaProperties {
	inputOutputType: AnimalBreed;
	inputOutputQuantity: NumberOfHazardousComponents;
}

export interface Jewelry {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: JewelryProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface JewelryProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	smallPartsWarnings: CountryOfOriginAssembly;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	gender: Locale;
	size: FeedDate;
	ageGroup: CountryOfOriginAssembly;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	ringStyle: Athlete;
	ringSize: NumberOfHazardousComponents;
	gemstone: Locale;
	secondaryStoneType: Locale;
	accentStone: CountryOfOriginAssembly;
	numberOfGemstones: NumberOfHazardousComponents;
	chainPattern: CountryOfOriginAssembly;
	chainLength: AssembledProductHeight;
	claspType: CountryOfOriginAssembly;
	earringStyle: Locale;
	earGaugeSize: AssembledProductHeight;
	backFinding: Locale;
	braceletStyle: Locale;
	necklaceStyle: Locale;
	bodyJewelryStyle: FeedDate;
	braceletCharmStyle: FeedDate;
	jewelrySetting: CountryOfOriginAssembly;
	certifyingAgent: FeedDate;
	diamondClarity: Locale;
	diamondColor: Locale;
	diamondCut: Locale;
	carats: AssembledProductHeight;
	totalDiamondWeight: AssembledProductHeight;
	stoneTreatment: FeedDate;
	stoneCreationMethod: FeedDate;
	gemstoneShape: Locale;
	pearlType: Athlete;
	sizePerPearl: AssembledProductHeight;
	isResizable: Locale;
	personalRelationship: Athlete;
	metal: Locale;
	metalPurity: FeedDate;
	material: Athlete;
	religion: Locale;
	birthstone: Locale;
	style: FeedDate;
	shape: FeedDate;
	occasion: Athlete;
	bodyParts: Athlete;
	isMadeFromRecycledMaterial: Locale;
	recycledMaterialContent: RecycledMaterialContent;
	theme: Athlete;
	diameter: AssembledProductHeight;
	character: Athlete;
	sportsTeam: Athlete;
	sportsLeague: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
	seasonYear: NumberOfHazardousComponents;
	seasonCode: Locale;
}

export interface LandVehicles {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: LandVehiclesProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface LandVehiclesProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	countryOfOriginTextiles: Locale;
	compositeWoodCertificationCode: Locale;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	color: Athlete;
	vehicleType: FeedDate;
	vehicleYear: NumberOfHazardousComponents;
	vehicleMake: FeedDate;
	vehicleModel: FeedDate;
	submodel: FeedDate;
	powertrain: FeedDate;
	drivetrain: FeedDate;
	transmissionDesignation: FeedDate;
	engineModel: FeedDate;
	engineDisplacement: AssembledProductHeight;
	boreStroke: FeedDate;
	inductionSystem: FeedDate;
	compressionRatio: FeedDate;
	maximumEnginePower: AssembledProductHeight;
	torque: FeedDate;
	acceleration: FeedDate;
	topSpeed: AssembledProductHeight;
	coolingSystem: FeedDate;
	fuelRequirement: FeedDate;
	fuelSystem: FeedDate;
	fuelCapacity: AssembledProductHeight;
	averageFuelConsumption: AssembledProductHeight;
	frontSuspension: FeedDate;
	rearSuspension: FeedDate;
	frontBrakes: FeedDate;
	rearBrakes: FeedDate;
	frontWheels: FeedDate;
	rearWheels: FeedDate;
	frontTires: FeedDate;
	rearTires: FeedDate;
	seatingCapacity: NumberOfHazardousComponents;
	seatHeight: AssembledProductHeight;
	wheelbase: AssembledProductHeight;
	curbWeight: AssembledProductHeight;
	towingCapacity: AssembledProductHeight;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	fabricContent: FabricContent;
	features: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface LargeAppliances {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: LargeAppliancesProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface LargeAppliancesProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	pattern: Athlete;
	finish: FeedDate;
	material: Athlete;
	size: FeedDate;
	capacity: FeedDate;
	homeDecorStyle: FeedDate;
	hasCfl: Locale;
	isEnergyStarCertified: Locale;
	energyGuideLabel: FeedDate;
	lightingFactsLabel: FeedDate;
	fuelType: FeedDate;
	powerType: FeedDate;
	volts: CompatibleConduitSizes;
	btu: NumberOfHazardousComponents;
	watts: AssembledProductHeight;
	isSet: Locale;
	isRemoteControlIncluded: Locale;
	cordLength: AssembledProductHeight;
	isSmart: Locale;
	hasAutomaticShutoff: Locale;
	loadPosition: FeedDate;
	runTime: AssembledProductHeight;
	recommendedRooms: Athlete;
	maximumRoomSize: AssembledProductHeight;
	recommendedUses: Athlete;
	cleaningCareAndMaintenance: FeedDate;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	isAssemblyRequired: Locale;
	assemblyInstructions: FeedDate;
	collection: FeedDate;
	shape: FeedDate;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface MedicalAidsEquipment {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: MedicalAidsEquipmentProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface MedicalAidsEquipmentProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	size: FeedDate;
	healthConcerns: Athlete;
	collection: FeedDate;
	bodyParts: Athlete;
	shape: FeedDate;
	isLatexFree: Locale;
	isWaterproof: Locale;
	isPowered: Locale;
	powerType: FeedDate;
	isFoldable: Locale;
	isInflatable: Locale;
	isWheeled: Locale;
	isIndustrial: Locale;
	isSet: Locale;
	isTravelSize: Locale;
	isPortable: Locale;
	isReusable: Locale;
	isDisposable: Locale;
	cleaningCareAndMaintenance: FeedDate;
	driveSystem: FeedDate;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	minimumWeight: AssembledProductHeight;
	maximumWeight: AssembledProductHeight;
	material: Athlete;
	diameter: AssembledProductHeight;
	gender: Locale;
	ageGroup: CountryOfOriginAssembly;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	fabricContent: FabricContent;
	fabricCareInstructions: Athlete;
	recommendedUses: Athlete;
	features: Athlete;
	compatibleBrands: Athlete;
	medicineStrength: FeedDate;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface MedicineSupplements {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: MedicineSupplementsProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface MedicineSupplementsProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	labelImage: LabelImage;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	countPerPack: NumberOfHazardousComponents;
	shelfLife: AssembledProductHeight;
	flavor: FeedDate;
	ageGroup: CountryOfOriginAssembly;
	size: FeedDate;
	color: Athlete;
	healthConcerns: Athlete;
	isControlledSubstance: Locale;
	ingredients: FeedDate;
	drugDosageInstructionsImage: FeedDate;
	drugActiveInactiveIngredientsImage: FeedDate;
	supplementDosageInstructionsImage: FeedDate;
	supplementActiveInactiveIngredientsImage: FeedDate;
	activeIngredients: ActiveIngredients;
	inactiveIngredients: Athlete;
	form: FeedDate;
	instructions: FeedDate;
	dosage: FeedDate;
	stopUseIndications: Athlete;
	medicineStrength: FeedDate;
	nationalDrugCode: FeedDate;
	nutrients: Nutrients;
	servingSize: FeedDate;
	sugarPerServing: NumberOfHazardousComponents;
	nutrientContentClaims: Athlete;
	totalFat: AssembledProductHeight;
	totalCarbohydrate: AssembledProductHeight;
	totalProtein: AssembledProductHeight;
	activityStage: CountryOfOriginAssembly;
	calories: AssembledProductHeight;
	primaryIngredient: Athlete;
	symptoms: FeedDate;
	dietaryMethod: Athlete;
	servingsPerContainer: NumberOfHazardousComponents;
	bodyParts: Athlete;
	gender: Locale;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface Movies {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: MoviesProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface MoviesProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	movieGenre: FeedDate;
	mpaaRating: Locale;
	physicalMediaFormat: CountryOfOriginAssembly;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	title: FeedDate;
	ratingReason: FeedDate;
	movieSubgenre: FeedDate;
	seriesTitle: FeedDate;
	numberInSeries: FeedDate;
	director: FeedDate;
	actors: Athlete;
	screenwriter: FeedDate;
	studioProductionCompany: FeedDate;
	awardsWon: Athlete;
	duration: AssembledProductHeight;
	theatricalReleaseDate: FeedDate;
	originalLanguages: Athlete;
	isDubbed: Locale;
	dubbedLanguages: Athlete;
	hasSubtitles: Locale;
	subtitledLanguages: Athlete;
	aspectRatio: FeedDate;
	edition: FeedDate;
	numberOfDiscs: NumberOfHazardousComponents;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	additionalVariantAttributeNames: Athlete;
	isPrimaryVariant: Locale;
	swatchImages: FluffySwatchImages;
}

export interface FluffySwatchImages {
	$schema: string;
	type: SafetyDataSheetType;
	title: SwatchImagesTitle;
	items: FluffyItems;
	minItems: number;
}

export interface FluffyItems {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: FriskyProperties;
	additionalProperties: boolean;
}

export interface FriskyProperties {
	swatchVariantAttribute: AnimalBreed;
	swatchImageUrl: FeedDate;
}

export interface Music {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: MusicProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface MusicProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	physicalMediaFormat: CountryOfOriginAssembly;
	musicGenre: FeedDate;
	hasParentalAdvisoryLabel: Locale;
	parentalAdvisoryLabelURL: Athlete;
	keyFeatures: Athlete;
	title: FeedDate;
	performer: Athlete;
	songwriter: FeedDate;
	musicSubGenre: FeedDate;
	awardsWon: Athlete;
	digitalAudioFileFormat: Athlete;
	musicReleaseType: FeedDate;
	recordLabel: FeedDate;
	releaseDate: FeedDate;
	trackListings: TrackListings;
	numberOfTracks: NumberOfHazardousComponents;
	musicProducer: FeedDate;
	seriesTitle: FeedDate;
	numberInSeries: FeedDate;
	isEdited: Locale;
	isEnhanced: Locale;
	edition: FeedDate;
	numberOfDiscs: NumberOfHazardousComponents;
	originalLanguages: Athlete;
	autographedBy: FeedDate;
	character: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: FluffySwatchImages;
	ratingReason: FeedDate;
	movieSubgenre: FeedDate;
}

export interface TrackListings {
	$schema: string;
	type: SafetyDataSheetType;
	title: string;
	items: TrackListingsItems;
	minItems: number;
}

export interface TrackListingsItems {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: MischievousProperties;
	additionalProperties: boolean;
}

export interface MischievousProperties {
	trackNumber: NumberOfHazardousComponents;
	trackName: FeedDate;
	trackDuration: FeedDate;
}

export interface MusicalInstruments {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: MusicalInstrumentsProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface MusicalInstrumentsProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	smallPartsWarnings: CountryOfOriginAssembly;
	compositeWoodCertificationCode: Locale;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	count: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	color: Athlete;
	pattern: Athlete;
	finish: FeedDate;
	material: Athlete;
	instrument: Athlete;
	musicalInstrumentFamily: FeedDate;
	saxophoneType: Locale;
	soundKey: CountryOfOriginAssembly;
	guitarType: Locale;
	numberOfStrings: NumberOfHazardousComponents;
	karaokeMachineType: Locale;
	drumSetCymbalType: CountryOfOriginAssembly;
	percussionInstrumentType: Athlete;
	numberOfKeys: NumberOfHazardousComponents;
	powerType: FeedDate;
	audioPowerOutput: FeedDate;
	isPowered: Locale;
	isPortable: Locale;
	isCollectible: Locale;
	isSet: Locale;
	isElectric: Locale;
	inputsAndOutputs: InputsAndOutputs;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	hasIntegratedSpeakers: Locale;
	microphoneIncluded: Locale;
	hasBluetooth: Locale;
	batteryLife: AssembledProductHeight;
	displayTechnology: FeedDate;
	orientation: Locale;
	skillLevel: FeedDate;
	ageGroup: CountryOfOriginAssembly;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	recommendedUses: Athlete;
	features: Athlete;
	sportsTeam: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface Office {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: OfficeProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface OfficeProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	smallPartsWarnings: CountryOfOriginAssembly;
	compositeWoodCertificationCode: Locale;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	msrp: NumberOfHazardousComponents;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	size: FeedDate;
	ageGroup: CountryOfOriginAssembly;
	material: Athlete;
	paperSize: Athlete;
	capacity: FeedDate;
	occasion: Athlete;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	lightingFactsLabel: FeedDate;
	pattern: Athlete;
	shape: FeedDate;
	finish: FeedDate;
	compatibleDevices: Athlete;
	brightness: AssembledProductHeight;
	dexterity: FeedDate;
	systemOfMeasurement: FeedDate;
	holeSize: AssembledProductHeight;
	year: NumberOfHazardousComponents;
	calendarFormat: FeedDate;
	calendarTerm: AssembledProductHeight;
	numberOfSheets: NumberOfHazardousComponents;
	isLined: Locale;
	envelopeSize: FeedDate;
	penPointSize: AssembledProductHeight;
	inkColor: Athlete;
	pencilLeadDiameter: Locale;
	isRefillable: Locale;
	isRetractable: Locale;
	isIndustrial: Locale;
	isAntiglare: Locale;
	isMagnetic: Locale;
	isTearResistant: Locale;
	isPowered: Locale;
	powerType: FeedDate;
	hpprintercartridgeNumber: Athlete;
	tabCut: Locale;
	tabColor: FeedDate;
	shredderCutStyles: FeedDate;
	overallExpansion: AssembledProductHeight;
	paperClipSize: Locale;
	theme: Athlete;
	recommendedUses: Athlete;
	globalBrandLicense: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface Optical {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: OpticalProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface OpticalProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	sunglassesStyle: FeedDate;
	eyewearFrameStyle: FeedDate;
	eyewearFrameSize: FeedDate;
	eyewearLensFeature: Athlete;
	lensType: Athlete;
	eyewearRimStyle: Locale;
	hasAdaptiveLenses: Locale;
	lensMaterial: FeedDate;
	lensTint: FeedDate;
	isScratchResistant: Locale;
	isPolarized: Locale;
	uvRating: NumberOfHazardousComponents;
	collection: FeedDate;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	shape: FeedDate;
	material: Athlete;
	gender: Locale;
	isSet: Locale;
	ageGroup: CountryOfOriginAssembly;
	size: FeedDate;
	character: Athlete;
	sportsLeague: Athlete;
	sportsTeam: Athlete;
	athlete: Athlete;
	globalBrandLicense: Athlete;
	compatibleBrands: Athlete;
	features: Athlete;
	cleaningCareAndMaintenance: FeedDate;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface Optics {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: OpticsProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface OpticsProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	material: Athlete;
	pattern: Athlete;
	size: FeedDate;
	gender: Locale;
	ageGroup: CountryOfOriginAssembly;
	minimumRecommendedAge: AssembledProductHeight;
	maximumRecommendedAge: AssembledProductHeight;
	digitalZoom: FeedDate;
	opticalZoom: FeedDate;
	lensDiameter: AssembledProductHeight;
	lensCoating: FeedDate;
	sensorResolution: FeedDate;
	magnification: FeedDate;
	focusType: Athlete;
	fieldOfView: FeedDate;
	isParfocal: Locale;
	focalRatio: FeedDate;
	displayTechnology: FeedDate;
	displayResolution: Athlete;
	hasLcdScreen: Locale;
	screenSize: AssembledProductHeight;
	hasNightVision: Locale;
	attachmentStyle: FeedDate;
	wirelessTechnologies: Athlete;
	hasDovetailBarSystem: Locale;
	sport: Athlete;
	isFogResistant: Locale;
	isWeatherResistant: Locale;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	isAssemblyRequired: Locale;
	assemblyInstructions: FeedDate;
	lockType: FeedDate;
	operatingTemperature: AssembledProductHeight;
	hasMemoryCardSlot: Locale;
	dexterity: FeedDate;
	powerType: FeedDate;
	isMulticoated: Locale;
	isLockable: Locale;
	isPortable: Locale;
	isFoldable: Locale;
	isWaterproof: Locale;
	isPowered: Locale;
	recommendedUses: Athlete;
	recommendedLocations: Athlete;
	cleaningCareAndMaintenance: FeedDate;
	features: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	globalBrandLicense: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface PhotoAccessories {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: PhotoAccessoriesProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface PhotoAccessoriesProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	compatibleBrands: Athlete;
	compatibleDevices: Athlete;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	material: Athlete;
	memoryCardType: Athlete;
	recordableMediaFormats: Athlete;
	connections: Athlete;
	size: FeedDate;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	isAssemblyRequired: Locale;
	assemblyInstructions: FeedDate;
	wirelessTechnologies: Athlete;
	displayTechnology: FeedDate;
	accessoriesIncluded: Athlete;
	isWaterproof: Locale;
	recommendedUses: Athlete;
	cleaningCareAndMaintenance: FeedDate;
	shape: FeedDate;
	pattern: Athlete;
	capacity: FeedDate;
	inputsAndOutputs: InputsAndOutputs;
	lightOutput: AssembledProductHeight;
	lightBulbType: FeedDate;
	volts: CompatibleConduitSizes;
	watts: AssembledProductHeight;
	features: Athlete;
	globalBrandLicense: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface PlumbingHVAC {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: PlumbingHVACProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface PlumbingHVACProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	material: Athlete;
	finish: FeedDate;
	hardwareFinish: FeedDate;
	size: FeedDate;
	shape: FeedDate;
	homeDecorStyle: FeedDate;
	hasCeeCertification: Locale;
	ceeTier: Locale;
	volts: CompatibleConduitSizes;
	watts: AssembledProductHeight;
	volumeCapacity: AssembledProductHeight;
	faucetHandleDesign: FeedDate;
	faucetDrillings: FeedDate;
	contaminantsRemoved: FeedDate;
	roughInDistance: FocalLength;
	humidificationOutputPerDay: FeedDate;
	pintsOfMoistureRemovedPerDay: NumberOfHazardousComponents;
	gallonsPerFlush: AssembledProductHeight;
	mervRating: FeedDate;
	gallonsPerMinute: AssembledProductHeight;
	sprayPatterns: FeedDate;
	numberOfBlades: NumberOfHazardousComponents;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	accessoriesIncluded: Athlete;
	fuelType: FeedDate;
	isWaterproof: Locale;
	isIndustrial: Locale;
	isFireResistant: Locale;
	coverageArea: AssembledProductHeight;
	horsepower: AssembledProductHeight;
	globalBrandLicense: Athlete;
	recommendedUses: Athlete;
	cleaningCareAndMaintenance: FeedDate;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	isPrimaryVariant: Locale;
	variantAttributeNames: CountryOfOriginAssembly;
	swatchImages: PurpleSwatchImages;
}

export interface PrintersScannersImaging {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: PrintersScannersImagingProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface PrintersScannersImagingProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	modelNumber: FeedDate;
	manufacturerPartNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	msrp: NumberOfHazardousComponents;
	monochromeColor: Locale;
	printingTechnology: FeedDate;
	has3dCapabilities: Locale;
	resolution: FeedDate;
	color: Athlete;
	connections: Athlete;
	memoryCardType: Athlete;
	hasAutomaticDocumentFeeder: Locale;
	hasAutomaticTwoSidedPrinting: Locale;
	colorPagesPerMinute: NumberOfHazardousComponents;
	monochromePagesPerMinute: NumberOfHazardousComponents;
	maximumDocumentSize: FeedDate;
	maximumPrintResolution: AssembledProductHeight;
	maximumScannerResolution: AssembledProductHeight;
	wirelessTechnologies: Athlete;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	features: Athlete;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
	additionalProductAttributes: AdditionalProductAttributes;
}

export interface SafetyEmergency {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: SafetyEmergencyProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface SafetyEmergencyProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	recommendedSurfaces: Athlete;
	recommendedLocations: Athlete;
	size: FeedDate;
	color: Athlete;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	isAssemblyRequired: Locale;
	assemblyInstructions: FeedDate;
	instructions: FeedDate;
	form: FeedDate;
	ingredients: FeedDate;
	fluidOunces: AssembledProductHeight;
	handleLength: AssembledProductHeight;
	isRefillable: Locale;
	fireExtinguisherClasses: CountryOfOriginAssembly;
	workingPressure: AssembledProductHeight;
	recommendedUses: Athlete;
	isPowered: Locale;
	powerType: FeedDate;
	features: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface Software {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: SoftwareProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface SoftwareProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	msrp: NumberOfHazardousComponents;
	softwareCategory: Athlete;
	operatingSystem: Athlete;
	systemRequirements: Athlete;
	version: FeedDate;
	releaseDate: FeedDate;
	numberOfUsers: NumberOfHazardousComponents;
	requiredPeripherals: FeedDate;
	educationalFocus: Athlete;
	digitalFileFormat: Athlete;
	physicalMediaFormat: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	features: Athlete;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
	additionalProductAttributes: AdditionalProductAttributes;
}

export interface SportRecreationOther {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: SportRecreationOtherProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface SportRecreationOtherProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	smallPartsWarnings: CountryOfOriginAssembly;
	countryOfOriginTextiles: Locale;
	compositeWoodCertificationCode: Locale;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	inflexKitComponent: Locale;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	sport: Athlete;
	gender: Locale;
	size: FeedDate;
	ageGroup: CountryOfOriginAssembly;
	minimumRecommendedAge: AssembledProductHeight;
	maximumRecommendedAge: AssembledProductHeight;
	clothingSize: FeedDate;
	fabricContent: FabricContent;
	fabricCareInstructions: Athlete;
	material: Athlete;
	pattern: Athlete;
	season: Athlete;
	isFoldable: Locale;
	isTearResistant: Locale;
	isWeatherResistant: Locale;
	isWaterproof: Locale;
	shoeSize: FeedDate;
	AirGunPowerType: Locale;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	isAssemblyRequired: Locale;
	assemblyInstructions: FeedDate;
	driveSystem: FeedDate;
	strideLength: NumberOfHazardousComponents;
	dexterity: FeedDate;
	autographedBy: FeedDate;
	finish: FeedDate;
	shape: FeedDate;
	capacity: FeedDate;
	seatingCapacity: NumberOfHazardousComponents;
	maximumWeight: AssembledProductHeight;
	maximumIncline: NumberOfHazardousComponents;
	batDrop: FeedDate;
	fitnessGoal: FeedDate;
	footballSize: FeedDate;
	basketballSize: FeedDate;
	soccerBallSize: FeedDate;
	ballCoreMaterial: Athlete;
	bladeType: FeedDate;
	animalType: FeedDate;
	tentType: FeedDate;
	fishingLocation: FeedDate;
	fishingLinePoundTest: NumberOfHazardousComponents;
	wirelessTechnologies: Athlete;
	hasAutomaticShutoff: Locale;
	minimumTemperature: AssembledProductHeight;
	isMemorabilia: Locale;
	isCollectible: Locale;
	isPortable: Locale;
	isSpaceSaving: Locale;
	isWheeled: Locale;
	isPowered: Locale;
	powerType: FeedDate;
	horsepower: AssembledProductHeight;
	velocity: AssembledProductHeight;
	shaftMaterial: Athlete;
	golfClubShaftFlex: FeedDate;
	loft: FeedDate;
	golfClubShaftType: FeedDate;
	shaftLength: FeedDate;
	tireDiameter: AssembledProductHeight;
	cleaningCareAndMaintenance: FeedDate;
	compatibleDevices: Athlete;
	insulationType: Locale;
	rValue: NumberOfHazardousComponents;
	sleepingBagSize: FeedDate;
	recommendedLocations: Athlete;
	recommendedUses: Athlete;
	sportsTeam: Athlete;
	sportsLeague: Athlete;
	athlete: Athlete;
	character: Athlete;
	globalBrandLicense: Athlete;
	features: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface Storage {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: StorageProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface StorageProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	compositeWoodCertificationCode: Locale;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	inflexKitComponent: Locale;
	keyFeatures: Athlete;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	msrp: NumberOfHazardousComponents;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	material: Athlete;
	finish: FeedDate;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	pattern: Athlete;
	shape: FeedDate;
	size: FeedDate;
	recommendedRooms: Athlete;
	recommendedLocations: Athlete;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	isAssemblyRequired: Locale;
	assemblyInstructions: FeedDate;
	fabricContent: FabricContent;
	fabricCareInstructions: Athlete;
	collection: FeedDate;
	numberOfShelves: NumberOfHazardousComponents;
	shelfStyle: FeedDate;
	shelfDepth: AssembledProductHeight;
	numberOfDrawers: NumberOfHazardousComponents;
	drawerPosition: FeedDate;
	drawerDimensions: FeedDate;
	capacity: FeedDate;
	minimumWeight: AssembledProductHeight;
	maximumWeight: AssembledProductHeight;
	recommendedUses: Athlete;
	isFoldable: Locale;
	isRetractable: Locale;
	isPortable: Locale;
	isIndustrial: Locale;
	systemOfMeasurement: FeedDate;
	features: Athlete;
	globalBrandLicense: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface TVsVideoDisplays {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: TVsVideoDisplaysProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface TVsVideoDisplaysProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	televisionType: Athlete;
	screenSize: AssembledProductHeight;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	msrp: NumberOfHazardousComponents;
	resolution: FeedDate;
	displayTechnology: FeedDate;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	connections: Athlete;
	memoryCardType: Athlete;
	hasTouchscreen: Locale;
	inputsAndOutputs: InputsAndOutputs;
	isEnergyStarCertified: Locale;
	energyGuideLabel: FeedDate;
	isSmart: Locale;
	aspectRatio: FeedDate;
	nativeResolution: FeedDate;
	maximumContrastRatio: FeedDate;
	refreshRate: AssembledProductHeight;
	responseTime: AssembledProductHeight;
	backlightType: FeedDate;
	wirelessTechnologies: Athlete;
	hasIntegratedSpeakers: Locale;
	audioFeatures: Athlete;
	peakAudioPowerCapacity: AssembledProductHeight;
	audioPowerOutput: FeedDate;
	streamingServices: FeedDate;
	mountingPattern: FeedDate;
	configuration: FeedDate;
	size: FeedDate;
	assembledProductHeight: AssembledProductHeight;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	features: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface Tools {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: ToolsProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface ToolsProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	inflexKitComponent: Locale;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	material: Athlete;
	shape: FeedDate;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	finish: FeedDate;
	size: FeedDate;
	bladeDiameter: AssembledProductHeight;
	bladeLength: AssembledProductHeight;
	bladeWidth: AssembledProductHeight;
	bladeShank: FeedDate;
	numberOfBlades: NumberOfHazardousComponents;
	shankSize: AssembledProductHeight;
	discSize: AssembledProductHeight;
	chuckType: FeedDate;
	chuckSize: FocalLength;
	colletSize: FocalLength;
	sandingBeltSize: FeedDate;
	arborDiameter: FocalLength;
	spindleThread: FeedDate;
	airInlet: AssembledProductHeight;
	averageAirConsumptionAt90PSI: AssembledProductHeight;
	cfmAt40Psi: AssembledProductHeight;
	cfmAt90Psi: AssembledProductHeight;
	volts: CompatibleConduitSizes;
	amps: AssembledProductHeight;
	loadCapacity: AssembledProductHeight;
	volumeCapacity: AssembledProductHeight;
	gritSize: FeedDate;
	squareDriveSize: FeedDate;
	socketDepth: FeedDate;
	cordLength: AssembledProductHeight;
	torque: FeedDate;
	engineDisplacement: AssembledProductHeight;
	numberOfSteps: NumberOfHazardousComponents;
	numberOfPoints: NumberOfHazardousComponents;
	lightBulbType: FeedDate;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	powerType: FeedDate;
	fuelType: FeedDate;
	maximumJawOpening: AssembledProductHeight;
	handing: FeedDate;
	horsepower: AssembledProductHeight;
	batteryCapacity: AssembledProductHeight;
	accessoriesIncluded: Athlete;
	isWaterproof: Locale;
	isIndustrial: Locale;
	isFireResistant: Locale;
	decibelRating: AssembledProductHeight;
	maximumAirPressure: AssembledProductHeight;
	maximumWattsOut: AssembledProductHeight;
	sandingSpeed: AssembledProductHeight;
	noLoadSpeed: AssembledProductHeight;
	strokeLength: AssembledProductHeight;
	strokesPerMinute: FeedDate;
	blowsPerMinute: FeedDate;
	impactEnergy: AssembledProductHeight;
	teethPerInch: NumberOfHazardousComponents;
	tankConfiguration: FeedDate;
	globalBrandLicense: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	recommendedUses: Athlete;
	cleaningCareAndMaintenance: FeedDate;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface Toys {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: ToysProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface ToysProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	smallPartsWarnings: CountryOfOriginAssembly;
	countryOfOriginTextiles: Locale;
	compositeWoodCertificationCode: Locale;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	inflexKitComponent: Locale;
	keyFeatures: Athlete;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	msrp: NumberOfHazardousComponents;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	gender: Locale;
	size: FeedDate;
	ageGroup: CountryOfOriginAssembly;
	minimumRecommendedAge: AssembledProductHeight;
	maximumRecommendedAge: AssembledProductHeight;
	targetAudience: Athlete;
	educationalFocus: Athlete;
	skillLevel: FeedDate;
	awardsWon: Athlete;
	theme: Athlete;
	character: Athlete;
	activity: Athlete;
	numberOfPlayers: NumberOfPlayers;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	ingredients: FeedDate;
	fabricContent: FabricContent;
	fabricCareInstructions: Athlete;
	isAssemblyRequired: Locale;
	assemblyInstructions: FeedDate;
	material: Athlete;
	finish: FeedDate;
	shape: FeedDate;
	occasion: Athlete;
	sport: Athlete;
	hairColorCategory: Locale;
	skinTone: FeedDate;
	flavor: FeedDate;
	animalType: FeedDate;
	vehicleType: FeedDate;
	displayTechnology: FeedDate;
	screenSize: AssembledProductHeight;
	isPowered: Locale;
	powerType: FeedDate;
	capacity: FeedDate;
	seatingCapacity: NumberOfHazardousComponents;
	minimumWeight: AssembledProductHeight;
	maximumWeight: AssembledProductHeight;
	maximumSpeed: AssembledProductHeight;
	isTravelSize: Locale;
	isInflatable: Locale;
	fillMaterial: Athlete;
	makesNoise: Locale;
	sportsLeague: Athlete;
	sportsTeam: Athlete;
	athlete: Athlete;
	features: Athlete;
	globalBrandLicense: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface NumberOfPlayers {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: NumberOfPlayersProperties;
	additionalProperties: boolean;
}

export interface NumberOfPlayersProperties {
	minimumNumberOfPlayers: NumberOfHazardousComponents;
	maximumNumberOfPlayers: NumberOfHazardousComponents;
}

export interface VehicleOther {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: VehicleOtherProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface VehicleOtherProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	countryOfOriginTextiles: Locale;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	inflexKitComponent: Locale;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	finish: FeedDate;
	color: Athlete;
	size: FeedDate;
	shape: FeedDate;
	vehicleType: FeedDate;
	partTerminologyID: Athlete;
	aaiaBrandID: Athlete;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	fabricContent: FabricContent;
	sportsLeague: Athlete;
	sportsTeam: Athlete;
	athlete: Athlete;
	autographedBy: FeedDate;
	features: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface VehiclePartsAccessories {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: VehiclePartsAccessoriesProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface VehiclePartsAccessoriesProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	compositeWoodCertificationCode: Locale;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	unitsPerConsumerUnit: NumberOfHazardousComponents;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	pieceCount: NumberOfHazardousComponents;
	color: Athlete;
	size: FeedDate;
	compatibleCars: FeedDate;
	vehicleYear: NumberOfHazardousComponents;
	vehicleMake: FeedDate;
	vehicleModel: FeedDate;
	vehicleType: FeedDate;
	audioPowerOutput: FeedDate;
	numberOfChannels: FeedDate;
	compatibleDevices: Athlete;
	isPowered: Locale;
	powerType: FeedDate;
	amps: AssembledProductHeight;
	impedance: FocalLength;
	coldCrankAmp: NumberOfHazardousComponents;
	beamSpread: AssembledProductHeight;
	beamAngle: AssembledProductHeight;
	displayTechnology: FeedDate;
	inDashSystem: Locale;
	interfaceType: Athlete;
	displayResolution: Athlete;
	fastenerHeadType: FeedDate;
	connections: Athlete;
	cableLength: AssembledProductHeight;
	chainLength: AssembledProductHeight;
	candlePower: FeedDate;
	flashPoint: FeedDate;
	filterLife: FeedDate;
	lightBulbType: FeedDate;
	isLockable: Locale;
	isReusable: Locale;
	breakingStrength: AssembledProductHeight;
	maximumMotorSpeed: AssembledProductHeight;
	numberOfOutlets: NumberOfHazardousComponents;
	receiverCompatibility: AssembledProductHeight;
	reserveCapacity: AssembledProductHeight;
	loadCapacity: AssembledProductHeight;
	saeDotCompliant: Locale;
	hitchClass: FeedDate;
	shackleClearance: AssembledProductHeight;
	shackleDiameter: AssembledProductHeight;
	shackleLength: AssembledProductHeight;
	shankLength: AssembledProductHeight;
	shearStrength: AssembledProductHeight;
	dropDistance: FeedDate;
	fluidOunces: AssembledProductHeight;
	motorOilViscosity: FeedDate;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	form: FeedDate;
	carSpeakerType: Athlete;
	carSpeakerSizeClass: Athlete;
	automotivePartsDivision: CountryOfOriginAssembly;
	partTerminologyID: Athlete;
	aaiaBrandID: Athlete;
	dinSize: Athlete;
	fuelType: FeedDate;
	horsepower: AssembledProductHeight;
	maximumTemperature: AssembledProductHeight;
	fillMaterial: Athlete;
	finish: FeedDate;
	shape: FeedDate;
	compatibleBrands: Athlete;
	sportsLeague: Athlete;
	sportsTeam: Athlete;
	athlete: Athlete;
	autographedBy: FeedDate;
	fabricContent: FabricContent;
	fabricCareInstructions: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface VideoGames {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: VideoGamesProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface VideoGamesProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	esrbRating: Locale;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	msrp: NumberOfHazardousComponents;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	platform: FeedDate;
	videoGameGenre: CountryOfOriginAssembly;
	ratingReason: FeedDate;
	sport: Athlete;
	edition: FeedDate;
	releaseDate: FeedDate;
	ageGroup: CountryOfOriginAssembly;
	videoGameCollection: FeedDate;
	targetAudience: Athlete;
	isOnlineMultiplayerAvailable: Locale;
	isDownloadableContentAvailable: Locale;
	mountType: Athlete;
	requiredPeripherals: FeedDate;
	physicalMediaFormat: CountryOfOriginAssembly;
	sportsLeague: Athlete;
	sportsTeam: Athlete;
	numberOfChannels: FeedDate;
	globalBrandLicense: Athlete;
	athlete: Athlete;
	autographedBy: FeedDate;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface VideoProjectors {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: VideoProjectorsProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface VideoProjectorsProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	msrp: NumberOfHazardousComponents;
	throwRatio: FeedDate;
	lampLife: AssembledProductHeight;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	resolution: FeedDate;
	displayTechnology: FeedDate;
	screenSize: AssembledProductHeight;
	brightness: AssembledProductHeight;
	aspectRatio: FeedDate;
	mountType: Athlete;
	has3dCapabilities: Locale;
	color: Athlete;
	size: FeedDate;
	assembledProductHeight: AssembledProductHeight;
	assembledProductLength: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	inputsAndOutputs: InputsAndOutputs;
	maximumContrastRatio: FeedDate;
	hasIntegratedSpeakers: Locale;
	wirelessTechnologies: Athlete;
	nativeResolution: FeedDate;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface Watches {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: WatchesProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface WatchesProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	smallPartsWarnings: CountryOfOriginAssembly;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	gender: Locale;
	ageGroup: CountryOfOriginAssembly;
	size: FeedDate;
	color: Athlete;
	colorCategory: CountryOfOriginAssembly;
	material: Athlete;
	metal: Locale;
	metalPurity: FeedDate;
	plating: FeedDate;
	watchStyle: Athlete;
	watchMovement: Locale;
	watchMovementType: CountryOfOriginAssembly;
	watchComplication: FeedDate;
	clockWatchFaceColor: FeedDate;
	watchCaseShape: Locale;
	watchBandColor: FeedDate;
	watchBandLength: AssembledProductHeight;
	bandWidth: AssembledProductHeight;
	watchBandMaterial: CountryOfOriginAssembly;
	claspType: CountryOfOriginAssembly;
	watchCrystalMaterial: CountryOfOriginAssembly;
	watchCaseMaterial: Locale;
	watchCaseSize: AssembledProductHeight;
	watchCaseThickness: FocalLength;
	watchBezelMaterial: Athlete;
	clockNumberType: FeedDate;
	isWaterResistant: Locale;
	gemstoneShape: Locale;
	gemstone: Locale;
	carats: AssembledProductHeight;
	accentStone: CountryOfOriginAssembly;
	totalDiamondWeight: AssembledProductHeight;
	batteryLife: AssembledProductHeight;
	activity: Athlete;
	theme: Athlete;
	occasion: Athlete;
	character: Athlete;
	sportsLeague: Athlete;
	sportsTeam: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: FluffySwatchImages;
	seasonYear: NumberOfHazardousComponents;
	seasonCode: Locale;
}

export interface Watercraft {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: WatercraftProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface WatercraftProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	color: Athlete;
	size: FeedDate;
	vehicleType: FeedDate;
	vehicleYear: NumberOfHazardousComponents;
	vehicleMake: FeedDate;
	vehicleModel: FeedDate;
	submodel: FeedDate;
	engineLocation: FeedDate;
	engineModel: FeedDate;
	engineDisplacement: AssembledProductHeight;
	boreStroke: FeedDate;
	inductionSystem: FeedDate;
	compressionRatio: FeedDate;
	maximumEnginePower: AssembledProductHeight;
	propulsionSystem: FeedDate;
	coolingSystem: FeedDate;
	thrust: AssembledProductHeight;
	impellerPropeller: FeedDate;
	topSpeed: AssembledProductHeight;
	fuelRequirement: FeedDate;
	fuelSystem: FeedDate;
	fuelCapacity: AssembledProductHeight;
	averageFuelConsumption: AssembledProductHeight;
	hullLength: AssembledProductHeight;
	beam: AssembledProductHeight;
	airDraft: AssembledProductHeight;
	draft: AssembledProductHeight;
	dryWeight: AssembledProductHeight;
	waterCapacity: AssembledProductHeight;
	seatingCapacity: NumberOfHazardousComponents;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	sportsLeague: Athlete;
	athlete: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface WheelsWheelComponents {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: WheelsWheelComponentsProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface WheelsWheelComponentsProperties {
	shortDescription: FeedDate;
	prop65WarningText: FeedDate;
	manufacturer: FeedDate;
	mainImageUrl: FeedDate;
	productSecondaryImageURL: ProductSecondaryImageURL;
	keyFeatures: Athlete;
	msrp: NumberOfHazardousComponents;
	manufacturerPartNumber: FeedDate;
	modelNumber: FeedDate;
	countPerPack: NumberOfHazardousComponents;
	count: FeedDate;
	color: Athlete;
	finish: FeedDate;
	material: Athlete;
	vehicleRimSize: FeedDate;
	diameter: AssembledProductHeight;
	compatibleTireSize: FeedDate;
	numberOfSpokes: NumberOfHazardousComponents;
	assembledProductLength: AssembledProductHeight;
	assembledProductWidth: AssembledProductHeight;
	assembledProductHeight: AssembledProductHeight;
	assembledProductWeight: AssembledProductHeight;
	aaiaBrandID: Athlete;
	partTerminologyID: Athlete;
	warrantyText: FeedDate;
	warrantyURL: FeedDate;
	features: Athlete;
	additionalProductAttributes: AdditionalProductAttributes;
	variantGroupId: FeedDate;
	variantAttributeNames: CountryOfOriginAssembly;
	isPrimaryVariant: Locale;
	swatchImages: PurpleSwatchImages;
}

export interface MPItemFeedHeader {
	$schema: string;
	type: LithiumIonBatteriesType;
	properties: MPItemFeedHeaderProperties;
	required: string[];
	additionalProperties: boolean;
}

export interface MPItemFeedHeaderProperties {
	requestId: FeedDate;
	requestBatchId: FeedDate;
	feedDate: FeedDate;
	processMode: Locale;
	subset: Locale;
	mart: Locale;
	sellingChannel: Locale;
	version: Locale;
	subCategory: Locale;
	locale: Locale;
}

// Converts JSON strings to/from your types
// and asserts the results of JSON.parse at runtime
export class Convert {
	public static toMpMaintenanceSpec(json: string): MpMaintenanceSpec {
		return cast(JSON.parse(json), r('MpMaintenanceSpec'));
	}

	public static mpMaintenanceSpecToJson(value: MpMaintenanceSpec): string {
		return JSON.stringify(uncast(value, r('MpMaintenanceSpec')), null, 2);
	}
}

function invalidValue(typ: any, val: any, key: any = ''): never {
	if (key) {
		throw Error(
			`Invalid value for key "${key}". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`
		);
	}
	throw Error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`);
}

function jsonToJSProps(typ: any): any {
	if (typ.jsonToJS === undefined) {
		const map: any = {};
		typ.props.forEach((p: any) => (map[p.json] = { key: p.js, typ: p.typ }));
		typ.jsonToJS = map;
	}
	return typ.jsonToJS;
}

function jsToJSONProps(typ: any): any {
	if (typ.jsToJSON === undefined) {
		const map: any = {};
		typ.props.forEach((p: any) => (map[p.js] = { key: p.json, typ: p.typ }));
		typ.jsToJSON = map;
	}
	return typ.jsToJSON;
}

function transform(val: any, typ: any, getProps: any, key: any = ''): any {
	function transformPrimitive(typ: string, val: any): any {
		if (typeof typ === typeof val) return val;
		return invalidValue(typ, val, key);
	}

	function transformUnion(typs: any[], val: any): any {
		// val must validate against one typ in typs
		const l = typs.length;
		for (let i = 0; i < l; i++) {
			const typ = typs[i];
			try {
				return transform(val, typ, getProps);
			} catch (_) {}
		}
		return invalidValue(typs, val);
	}

	function transformEnum(cases: string[], val: any): any {
		if (cases.indexOf(val) !== -1) return val;
		return invalidValue(cases, val);
	}

	function transformArray(typ: any, val: any): any {
		// val must be an array with no invalid elements
		if (!Array.isArray(val)) return invalidValue('array', val);
		return val.map((el) => transform(el, typ, getProps));
	}

	function transformDate(val: any): any {
		if (val === null) {
			return null;
		}
		const d = new Date(val);
		if (isNaN(d.valueOf())) {
			return invalidValue('Date', val);
		}
		return d;
	}

	function transformObject(props: { [k: string]: any }, additional: any, val: any): any {
		if (val === null || typeof val !== 'object' || Array.isArray(val)) {
			return invalidValue('object', val);
		}
		const result: any = {};
		Object.getOwnPropertyNames(props).forEach((key) => {
			const prop = props[key];
			const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;
			result[prop.key] = transform(v, prop.typ, getProps, prop.key);
		});
		Object.getOwnPropertyNames(val).forEach((key) => {
			if (!Object.prototype.hasOwnProperty.call(props, key)) {
				result[key] = transform(val[key], additional, getProps, key);
			}
		});
		return result;
	}

	if (typ === 'any') return val;
	if (typ === null) {
		if (val === null) return val;
		return invalidValue(typ, val);
	}
	if (typ === false) return invalidValue(typ, val);
	while (typeof typ === 'object' && typ.ref !== undefined) {
		typ = typeMap[typ.ref];
	}
	if (Array.isArray(typ)) return transformEnum(typ, val);
	if (typeof typ === 'object') {
		return typ.hasOwnProperty('unionMembers')
			? transformUnion(typ.unionMembers, val)
			: typ.hasOwnProperty('arrayItems')
			? transformArray(typ.arrayItems, val)
			: typ.hasOwnProperty('props')
			? transformObject(getProps(typ), typ.additional, val)
			: invalidValue(typ, val);
	}
	// Numbers can be parsed by Date but shouldn't be.
	if (typ === Date && typeof val !== 'number') return transformDate(val);
	return transformPrimitive(typ, val);
}

function cast<T>(val: any, typ: any): T {
	return transform(val, typ, jsonToJSProps);
}

function uncast<T>(val: T, typ: any): any {
	return transform(val, typ, jsToJSONProps);
}

function a(typ: any) {
	return { arrayItems: typ };
}

function u(...typs: any[]) {
	return { unionMembers: typs };
}

function o(props: any[], additional: any) {
	return { props, additional };
}

function m(additional: any) {
	return { props: [], additional };
}

function r(name: string) {
	return { ref: name };
}

const typeMap: any = {
	MpMaintenanceSpec: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'title', js: 'title', typ: '' },
			{ json: 'properties', js: 'properties', typ: r('MpMaintenanceSpecProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	MpMaintenanceSpecProperties: o(
		[
			{ json: 'MPItemFeedHeader', js: 'MPItemFeedHeader', typ: r('MPItemFeedHeader') },
			{ json: 'MPItem', js: 'MPItem', typ: r('MPItem') },
		],
		false
	),
	MPItem: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('SafetyDataSheetType') },
			{ json: 'title', js: 'title', typ: '' },
			{ json: 'items', js: 'items', typ: r('MPItemItems') },
			{ json: 'minItems', js: 'minItems', typ: 0 },
		],
		false
	),
	MPItemItems: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('PurpleProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	PurpleProperties: o(
		[
			{ json: 'Orderable', js: 'Orderable', typ: r('Orderable') },
			{ json: 'Visible', js: 'Visible', typ: r('Visible') },
			{ json: 'TradeItem', js: 'TradeItem', typ: r('TradeItem') },
		],
		false
	),
	Orderable: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('OrderableProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	OrderableProperties: o(
		[
			{ json: 'sku', js: 'sku', typ: r('FeedDate') },
			{ json: 'productIdentifiers', js: 'productIdentifiers', typ: r('ProductIdentifiers') },
			{ json: 'productName', js: 'productName', typ: r('FeedDate') },
			{ json: 'brand', js: 'brand', typ: r('FeedDate') },
			{ json: 'price', js: 'price', typ: r('NumberOfHazardousComponents') },
			{ json: 'electronicsIndicator', js: 'electronicsIndicator', typ: r('Locale') },
			{ json: 'batteryTechnologyType', js: 'batteryTechnologyType', typ: r('Locale') },
			{ json: 'chemicalAerosolPesticide', js: 'chemicalAerosolPesticide', typ: r('Locale') },
			{ json: 'netContent', js: 'netContent', typ: r('NetContent') },
			{ json: 'safetyDataSheet', js: 'safetyDataSheet', typ: r('SafetyDataSheet') },
			{
				json: 'numberOfHazardousComponents',
				js: 'numberOfHazardousComponents',
				typ: r('NumberOfHazardousComponents'),
			},
			{ json: 'hasBatteries', js: 'hasBatteries', typ: r('Locale') },
			{ json: 'batterySize', js: 'batterySize', typ: r('FeedDate') },
			{ json: 'lithiumIonBatteries', js: 'lithiumIonBatteries', typ: r('LithiumBatteries') },
			{ json: 'lithiumMetalBatteries', js: 'lithiumMetalBatteries', typ: r('LithiumBatteries') },
			{ json: 'shipsInOriginalPackaging', js: 'shipsInOriginalPackaging', typ: r('Locale') },
			{ json: 'startDate', js: 'startDate', typ: r('FeedDate') },
			{ json: 'endDate', js: 'endDate', typ: r('FeedDate') },
			{ json: 'MustShipAlone', js: 'MustShipAlone', typ: r('Locale') },
			{ json: 'SkuUpdate', js: 'SkuUpdate', typ: r('Locale') },
			{ json: 'stateRestrictions', js: 'stateRestrictions', typ: r('StateRestrictions') },
		],
		false
	),
	Locale: o(
		[
			{ json: 'type', js: 'type', typ: r('PurpleType') },
			{ json: 'title', js: 'title', typ: '' },
			{ json: 'enum', js: 'enum', typ: a('') },
		],
		false
	),
	FeedDate: o(
		[
			{ json: 'type', js: 'type', typ: r('PurpleType') },
			{ json: 'title', js: 'title', typ: u(undefined, '') },
			{ json: 'minLength', js: 'minLength', typ: u(undefined, 0) },
			{ json: 'maxLength', js: 'maxLength', typ: u(undefined, 0) },
			{ json: 'format', js: 'format', typ: u(undefined, r('Format')) },
		],
		false
	),
	LithiumBatteries: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('LithiumIonBatteriesProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	LithiumIonBatteriesProperties: o(
		[
			{ json: 'batteryModel', js: 'batteryModel', typ: r('FeedDate') },
			{ json: 'batteryFormFactor', js: 'batteryFormFactor', typ: r('Locale') },
			{ json: 'numberOfBatteries', js: 'numberOfBatteries', typ: r('NumberOfHazardousComponents') },
			{ json: 'numberOfBatteryCells', js: 'numberOfBatteryCells', typ: r('NumberOfHazardousComponents') },
			{ json: 'includedBatteryPackaging', js: 'includedBatteryPackaging', typ: r('Locale') },
			{ json: 'batteryWeight', js: 'batteryWeight', typ: r('NumberOfHazardousComponents') },
			{ json: 'batteryWattHour', js: 'batteryWattHour', typ: u(undefined, r('NumberOfHazardousComponents')) },
			{
				json: 'lithiumMetalContentWeight',
				js: 'lithiumMetalContentWeight',
				typ: u(undefined, r('NumberOfHazardousComponents')),
			},
		],
		false
	),
	NumberOfHazardousComponents: o(
		[
			{ json: 'type', js: 'type', typ: r('NumberOfHazardousComponentsType') },
			{ json: 'title', js: 'title', typ: '' },
			{ json: 'minimum', js: 'minimum', typ: 0 },
			{ json: 'maximum', js: 'maximum', typ: 0 },
			{ json: 'exclusiveMaximum', js: 'exclusiveMaximum', typ: true },
			{ json: 'multipleOf', js: 'multipleOf', typ: u(undefined, 3.14) },
		],
		false
	),
	NetContent: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('NetContentProperties') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	NetContentProperties: o(
		[
			{ json: 'productNetContentMeasure', js: 'productNetContentMeasure', typ: r('NumberOfHazardousComponents') },
			{ json: 'productNetContentUnit', js: 'productNetContentUnit', typ: r('Locale') },
		],
		false
	),
	ProductIdentifiers: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('ProductIdentifiersProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	ProductIdentifiersProperties: o(
		[
			{ json: 'productIdType', js: 'productIdType', typ: r('Locale') },
			{ json: 'productId', js: 'productId', typ: r('FeedDate') },
		],
		false
	),
	SafetyDataSheet: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('SafetyDataSheetType') },
			{ json: 'title', js: 'title', typ: '' },
			{ json: 'items', js: 'items', typ: r('FeedDate') },
			{ json: 'minItems', js: 'minItems', typ: 0 },
		],
		false
	),
	StateRestrictions: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('SafetyDataSheetType') },
			{ json: 'title', js: 'title', typ: '' },
			{ json: 'items', js: 'items', typ: r('StateRestrictionsItems') },
			{ json: 'minItems', js: 'minItems', typ: 0 },
		],
		false
	),
	StateRestrictionsItems: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('FluffyProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	FluffyProperties: o(
		[
			{ json: 'stateRestrictionsText', js: 'stateRestrictionsText', typ: r('Locale') },
			{ json: 'states', js: 'states', typ: r('FeedDate') },
			{ json: 'zipCodes', js: 'zipCodes', typ: r('FeedDate') },
		],
		false
	),
	TradeItem: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('TradeItemProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	TradeItemProperties: o(
		[
			{ json: 'sku', js: 'sku', typ: r('FeedDate') },
			{ json: 'countryOfOriginAssembly', js: 'countryOfOriginAssembly', typ: r('CountryOfOriginAssembly') },
			{ json: 'orderableGTIN', js: 'orderableGTIN', typ: r('FeedDate') },
			{ json: 'each', js: 'each', typ: r('Each') },
			{ json: 'innerPack', js: 'innerPack', typ: r('InnerPack') },
			{ json: 'case', js: 'case', typ: r('Case') },
			{ json: 'pallet', js: 'pallet', typ: r('Pallet') },
		],
		false
	),
	Case: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('CaseProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	CaseProperties: o(
		[
			{ json: 'caseGTIN', js: 'caseGTIN', typ: r('FeedDate') },
			{ json: 'caseDepth', js: 'caseDepth', typ: r('NumberOfHazardousComponents') },
			{ json: 'caseWidth', js: 'caseWidth', typ: r('NumberOfHazardousComponents') },
			{ json: 'caseHeight', js: 'caseHeight', typ: r('NumberOfHazardousComponents') },
			{ json: 'caseWeight', js: 'caseWeight', typ: r('NumberOfHazardousComponents') },
			{ json: 'qtySellableItemsCase', js: 'qtySellableItemsCase', typ: r('NumberOfHazardousComponents') },
		],
		false
	),
	CountryOfOriginAssembly: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('SafetyDataSheetType') },
			{ json: 'title', js: 'title', typ: '' },
			{ json: 'items', js: 'items', typ: r('CountryOfOriginAssemblyItems') },
			{ json: 'minItems', js: 'minItems', typ: 0 },
		],
		false
	),
	CountryOfOriginAssemblyItems: o(
		[
			{ json: 'type', js: 'type', typ: r('PurpleType') },
			{ json: 'enum', js: 'enum', typ: a('') },
		],
		false
	),
	Each: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('EachProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	EachProperties: o(
		[
			{ json: 'eachGTIN', js: 'eachGTIN', typ: r('FeedDate') },
			{ json: 'eachDepth', js: 'eachDepth', typ: r('NumberOfHazardousComponents') },
			{ json: 'eachWidth', js: 'eachWidth', typ: r('NumberOfHazardousComponents') },
			{ json: 'eachHeight', js: 'eachHeight', typ: r('NumberOfHazardousComponents') },
			{ json: 'eachWeight', js: 'eachWeight', typ: r('NumberOfHazardousComponents') },
		],
		false
	),
	InnerPack: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('InnerPackProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	InnerPackProperties: o(
		[
			{ json: 'innerPackGTIN', js: 'innerPackGTIN', typ: r('FeedDate') },
			{ json: 'innerPackDepth', js: 'innerPackDepth', typ: r('NumberOfHazardousComponents') },
			{ json: 'innerPackWidth', js: 'innerPackWidth', typ: r('NumberOfHazardousComponents') },
			{ json: 'innerPackHeight', js: 'innerPackHeight', typ: r('NumberOfHazardousComponents') },
			{ json: 'innerPackWeight', js: 'innerPackWeight', typ: r('NumberOfHazardousComponents') },
			{
				json: 'qtySellableItemsInnerPack',
				js: 'qtySellableItemsInnerPack',
				typ: r('NumberOfHazardousComponents'),
			},
		],
		false
	),
	Pallet: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('PalletProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	PalletProperties: o(
		[
			{ json: 'palletGTIN', js: 'palletGTIN', typ: r('FeedDate') },
			{ json: 'palletDepth', js: 'palletDepth', typ: r('NumberOfHazardousComponents') },
			{ json: 'palletWidth', js: 'palletWidth', typ: r('NumberOfHazardousComponents') },
			{ json: 'palletHeight', js: 'palletHeight', typ: r('NumberOfHazardousComponents') },
			{ json: 'palletWeight', js: 'palletWeight', typ: r('NumberOfHazardousComponents') },
			{ json: 'qtySellableItemsPallet', js: 'qtySellableItemsPallet', typ: r('NumberOfHazardousComponents') },
		],
		false
	),
	Visible: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('VisibleProperties') },
			{ json: 'oneOf', js: 'oneOf', typ: a(r('OneOf')) },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	OneOf: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'required', js: 'required', typ: a('') },
		],
		false
	),
	VisibleProperties: o(
		[
			{ json: 'Animal Accessories', js: 'Animal Accessories', typ: r('Animal') },
			{ json: 'Animal Food', js: 'Animal Food', typ: r('AnimalFood') },
			{ json: 'Animal Health & Grooming', js: 'Animal Health & Grooming', typ: r('AnimalHealthGrooming') },
			{ json: 'Animal Other', js: 'Animal Other', typ: r('Animal') },
			{ json: 'Art & Craft', js: 'Art & Craft', typ: r('ArtCraft') },
			{ json: 'Baby Clothing', js: 'Baby Clothing', typ: r('Baby') },
			{
				json: 'Baby Diapering, Care, & Other',
				js: 'Baby Diapering, Care, & Other',
				typ: r('BabyDiaperingCareOther'),
			},
			{ json: 'Baby Food', js: 'Baby Food', typ: r('BabyFood') },
			{ json: 'Baby Furniture', js: 'Baby Furniture', typ: r('BabyDiaperingCareOther') },
			{ json: 'Baby Toys', js: 'Baby Toys', typ: r('Baby') },
			{ json: 'Baby Transport', js: 'Baby Transport', typ: r('BabyTransport') },
			{
				json: 'Beauty, Personal Care, & Hygiene',
				js: 'Beauty, Personal Care, & Hygiene',
				typ: r('BeautyPersonalCareHygiene'),
			},
			{ json: 'Bedding', js: 'Bedding', typ: r('BabyDiaperingCareOther') },
			{ json: 'Building Supply', js: 'Building Supply', typ: r('BuildingSupply') },
			{ json: 'Cameras & Lenses', js: 'Cameras & Lenses', typ: r('CamerasLenses') },
			{ json: 'Carriers & Accessories', js: 'Carriers & Accessories', typ: r('CarriersAccessories') },
			{ json: 'Cases & Bags', js: 'Cases & Bags', typ: r('CarriersAccessories') },
			{ json: 'Cell Phones', js: 'Cell Phones', typ: r('CellPhones') },
			{
				json: 'Ceremonial Clothing & Accessories',
				js: 'Ceremonial Clothing & Accessories',
				typ: r('CeremonialClothingAccessories'),
			},
			{ json: 'Clothing', js: 'Clothing', typ: r('Clothing') },
			{ json: 'Computer Components', js: 'Computer Components', typ: r('ComputerComponents') },
			{ json: 'Computers', js: 'Computers', typ: r('Computers') },
			{ json: 'Costumes', js: 'Costumes', typ: r('CeremonialClothingAccessories') },
			{ json: 'Cycling', js: 'Cycling', typ: r('Cycling') },
			{ json: 'Decorations & Favors', js: 'Decorations & Favors', typ: r('DecorationsFavors') },
			{ json: 'Electrical', js: 'Electrical', typ: r('Electrical') },
			{ json: 'Electronics Accessories', js: 'Electronics Accessories', typ: r('ElectronicsAccessories') },
			{ json: 'Electronics Cables', js: 'Electronics Cables', typ: r('ElectronicsCables') },
			{ json: 'Electronics Other', js: 'Electronics Other', typ: r('ElectronicsOther') },
			{ json: 'Food & Beverage', js: 'Food & Beverage', typ: r('BabyFood') },
			{ json: 'Footwear', js: 'Footwear', typ: r('Footwear') },
			{ json: 'Fuels & Lubricants', js: 'Fuels & Lubricants', typ: r('FuelsLubricants') },
			{ json: 'Funeral', js: 'Funeral', typ: r('CeremonialClothingAccessories') },
			{ json: 'Furniture', js: 'Furniture', typ: r('Furniture') },
			{ json: 'Garden & Patio', js: 'Garden & Patio', typ: r('GardenPatio') },
			{ json: 'Gift Supply & Awards', js: 'Gift Supply & Awards', typ: r('CeremonialClothingAccessories') },
			{ json: 'Grills & Outdoor Cooking', js: 'Grills & Outdoor Cooking', typ: r('GrillsOutdoorCooking') },
			{ json: 'Hardware', js: 'Hardware', typ: r('Hardware') },
			{
				json: 'Health & Beauty Electronics',
				js: 'Health & Beauty Electronics',
				typ: r('HealthBeautyElectronics'),
			},
			{
				json: 'Home Decor, Kitchen, & Other',
				js: 'Home Decor, Kitchen, & Other',
				typ: r('HomeDecorKitchenOther'),
			},
			{
				json: 'Household Cleaning Products & Supplies',
				js: 'Household Cleaning Products & Supplies',
				typ: r('HouseholdCleaningProductsSupplies'),
			},
			{ json: 'Instrument Accessories', js: 'Instrument Accessories', typ: r('InstrumentAccessories') },
			{ json: 'Jewelry', js: 'Jewelry', typ: r('Jewelry') },
			{ json: 'Land Vehicles', js: 'Land Vehicles', typ: r('LandVehicles') },
			{ json: 'Large Appliances', js: 'Large Appliances', typ: r('LargeAppliances') },
			{ json: 'Medical Aids & Equipment', js: 'Medical Aids & Equipment', typ: r('MedicalAidsEquipment') },
			{ json: 'Medicine & Supplements', js: 'Medicine & Supplements', typ: r('MedicineSupplements') },
			{ json: 'Music Cases & Bags', js: 'Music Cases & Bags', typ: r('CeremonialClothingAccessories') },
			{ json: 'Musical Instruments', js: 'Musical Instruments', typ: r('MusicalInstruments') },
			{ json: 'Office', js: 'Office', typ: r('Office') },
			{ json: 'Optical', js: 'Optical', typ: r('Optical') },
			{ json: 'Optics', js: 'Optics', typ: r('Optics') },
			{ json: 'Other', js: 'Other', typ: r('CeremonialClothingAccessories') },
			{ json: 'Photo Accessories', js: 'Photo Accessories', typ: r('PhotoAccessories') },
			{ json: 'Plumbing & HVAC', js: 'Plumbing & HVAC', typ: r('PlumbingHVAC') },
			{
				json: 'Printers, Scanners, & Imaging',
				js: 'Printers, Scanners, & Imaging',
				typ: r('PrintersScannersImaging'),
			},
			{ json: 'Safety & Emergency', js: 'Safety & Emergency', typ: r('SafetyEmergency') },
			{ json: 'Software', js: 'Software', typ: r('Software') },
			{ json: 'Sound & Recording', js: 'Sound & Recording', typ: r('InstrumentAccessories') },
			{ json: 'Sport & Recreation Other', js: 'Sport & Recreation Other', typ: r('SportRecreationOther') },
			{ json: 'Storage', js: 'Storage', typ: r('Storage') },
			{ json: 'TVs & Video Displays', js: 'TVs & Video Displays', typ: r('TVsVideoDisplays') },
			{ json: 'Tools & Hardware Other', js: 'Tools & Hardware Other', typ: r('Hardware') },
			{ json: 'Tools', js: 'Tools', typ: r('Tools') },
			{ json: 'Toys', js: 'Toys', typ: r('Toys') },
			{ json: 'Vehicle Other', js: 'Vehicle Other', typ: r('VehicleOther') },
			{
				json: 'Vehicle Parts & Accessories',
				js: 'Vehicle Parts & Accessories',
				typ: r('VehiclePartsAccessories'),
			},
			{ json: 'Video Games', js: 'Video Games', typ: r('VideoGames') },
			{ json: 'Video Projectors', js: 'Video Projectors', typ: r('VideoProjectors') },
			{ json: 'Watches', js: 'Watches', typ: r('Watches') },
			{ json: 'Watercraft', js: 'Watercraft', typ: r('Watercraft') },
			{ json: 'Wheels & Wheel Components', js: 'Wheels & Wheel Components', typ: r('WheelsWheelComponents') },
			{ json: 'Music', js: 'Music', typ: r('Music') },
			{ json: 'Movies', js: 'Movies', typ: r('Movies') },
		],
		false
	),
	Animal: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('AnimalAccessoriesProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	AnimalAccessoriesProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'countryOfOriginTextiles', js: 'countryOfOriginTextiles', typ: r('Locale') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('AnimalBreed') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('AnimalBreed') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('AnimalBreed') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('AnimalBreed') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'animalType', js: 'animalType', typ: r('AnimalBreed') },
			{ json: 'animalBreed', js: 'animalBreed', typ: r('AnimalBreed') },
			{ json: 'petSize', js: 'petSize', typ: r('AnimalBreed') },
			{ json: 'animalLifestage', js: 'animalLifestage', typ: r('AnimalBreed') },
			{ json: 'minimumWeight', js: 'minimumWeight', typ: r('AssembledProductHeight') },
			{ json: 'maximumWeight', js: 'maximumWeight', typ: r('AssembledProductHeight') },
			{ json: 'capacity', js: 'capacity', typ: u(undefined, r('FeedDate')) },
			{ json: 'shape', js: 'shape', typ: u(undefined, r('FeedDate')) },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'fabricContent', js: 'fabricContent', typ: r('FabricContent') },
			{ json: 'fabricCareInstructions', js: 'fabricCareInstructions', typ: r('Athlete') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'instructions', js: 'instructions', typ: r('AnimalBreed') },
			{ json: 'batteriesRequired', js: 'batteriesRequired', typ: u(undefined, r('Locale')) },
			{ json: 'isFoldable', js: 'isFoldable', typ: r('Locale') },
			{ json: 'isReflective', js: 'isReflective', typ: u(undefined, r('Locale')) },
			{ json: 'isRetractable', js: 'isRetractable', typ: u(undefined, r('Locale')) },
			{ json: 'maximumTemperature', js: 'maximumTemperature', typ: u(undefined, r('AssembledProductHeight')) },
			{ json: 'minimumTemperature', js: 'minimumTemperature', typ: u(undefined, r('AssembledProductHeight')) },
			{ json: 'numberOfSteps', js: 'numberOfSteps', typ: u(undefined, r('NumberOfHazardousComponents')) },
			{ json: 'pattern', js: 'pattern', typ: r('Athlete') },
			{ json: 'character', js: 'character', typ: u(undefined, r('Athlete')) },
			{ json: 'sportsLeague', js: 'sportsLeague', typ: r('Athlete') },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: r('Athlete') },
			{ json: 'features', js: 'features', typ: u(undefined, r('Athlete')) },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('AnimalBreed') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('WarrantyURL') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('AnimalBreed') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
			{ json: 'inflexKitComponent', js: 'inflexKitComponent', typ: u(undefined, r('Locale')) },
			{ json: 'isPortable', js: 'isPortable', typ: u(undefined, r('Locale')) },
			{ json: 'autographedBy', js: 'autographedBy', typ: u(undefined, r('FeedDate')) },
			{ json: 'athlete', js: 'athlete', typ: u(undefined, r('Athlete')) },
		],
		false
	),
	AdditionalProductAttributes: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('SafetyDataSheetType') },
			{ json: 'title', js: 'title', typ: r('AdditionalProductAttributesTitle') },
			{ json: 'items', js: 'items', typ: r('AdditionalProductAttributesItems') },
			{ json: 'minItems', js: 'minItems', typ: 0 },
		],
		false
	),
	AdditionalProductAttributesItems: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('TentacledProperties') },
			{ json: 'required', js: 'required', typ: a(r('PurpleRequired')) },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	TentacledProperties: o(
		[
			{ json: 'productAttributeName', js: 'productAttributeName', typ: r('AnimalBreed') },
			{ json: 'productAttributeValue', js: 'productAttributeValue', typ: r('AnimalBreed') },
		],
		false
	),
	AnimalBreed: o(
		[
			{ json: 'type', js: 'type', typ: r('PurpleType') },
			{ json: 'title', js: 'title', typ: '' },
			{ json: 'minLength', js: 'minLength', typ: 0 },
			{ json: 'maxLength', js: 'maxLength', typ: 0 },
		],
		false
	),
	AssembledProductHeight: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('AssembledProductHeightProperties') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	AssembledProductHeightProperties: o(
		[
			{ json: 'measure', js: 'measure', typ: r('NumberOfHazardousComponents') },
			{ json: 'unit', js: 'unit', typ: r('Locale') },
		],
		false
	),
	Athlete: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('SafetyDataSheetType') },
			{ json: 'title', js: 'title', typ: '' },
			{ json: 'items', js: 'items', typ: r('AthleteItems') },
			{ json: 'minItems', js: 'minItems', typ: 0 },
		],
		false
	),
	AthleteItems: o(
		[
			{ json: 'type', js: 'type', typ: r('PurpleType') },
			{ json: 'minLength', js: 'minLength', typ: 0 },
			{ json: 'maxLength', js: 'maxLength', typ: 0 },
		],
		false
	),
	FabricContent: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('SafetyDataSheetType') },
			{ json: 'title', js: 'title', typ: r('FabricContentTitle') },
			{ json: 'items', js: 'items', typ: r('FabricContentItems') },
			{ json: 'minItems', js: 'minItems', typ: 0 },
		],
		false
	),
	FabricContentItems: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('StickyProperties') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	StickyProperties: o(
		[
			{ json: 'materialName', js: 'materialName', typ: r('AnimalBreed') },
			{ json: 'materialPercentage', js: 'materialPercentage', typ: r('NumberOfHazardousComponents') },
		],
		false
	),
	ProductSecondaryImageURL: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('SafetyDataSheetType') },
			{ json: 'title', js: 'title', typ: r('ProductSecondaryImageURLTitle') },
			{ json: 'items', js: 'items', typ: r('ProductSecondaryImageURLItems') },
			{ json: 'minItems', js: 'minItems', typ: 0 },
		],
		false
	),
	ProductSecondaryImageURLItems: o(
		[
			{ json: 'type', js: 'type', typ: r('PurpleType') },
			{ json: 'minLength', js: 'minLength', typ: 0 },
			{ json: 'maxLength', js: 'maxLength', typ: 0 },
			{ json: 'format', js: 'format', typ: r('Format') },
		],
		false
	),
	PurpleSwatchImages: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('SafetyDataSheetType') },
			{ json: 'title', js: 'title', typ: r('SwatchImagesTitle') },
			{ json: 'items', js: 'items', typ: r('PurpleItems') },
			{ json: 'minItems', js: 'minItems', typ: 0 },
		],
		false
	),
	PurpleItems: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('IndigoProperties') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	IndigoProperties: o(
		[
			{ json: 'swatchVariantAttribute', js: 'swatchVariantAttribute', typ: r('Locale') },
			{ json: 'swatchImageUrl', js: 'swatchImageUrl', typ: r('FeedDate') },
		],
		false
	),
	WarrantyURL: o(
		[
			{ json: 'type', js: 'type', typ: r('PurpleType') },
			{ json: 'title', js: 'title', typ: r('WarrantyURLTitle') },
			{ json: 'minLength', js: 'minLength', typ: 0 },
			{ json: 'format', js: 'format', typ: r('Format') },
		],
		false
	),
	AnimalFood: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('AnimalFoodProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	AnimalFoodProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'labelImage', js: 'labelImage', typ: r('LabelImage') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'ingredients', js: 'ingredients', typ: r('FeedDate') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'animalType', js: 'animalType', typ: r('FeedDate') },
			{ json: 'animalBreed', js: 'animalBreed', typ: r('FeedDate') },
			{ json: 'animalLifestage', js: 'animalLifestage', typ: r('FeedDate') },
			{ json: 'minimumWeight', js: 'minimumWeight', typ: r('AssembledProductHeight') },
			{ json: 'maximumWeight', js: 'maximumWeight', typ: r('AssembledProductHeight') },
			{ json: 'petSize', js: 'petSize', typ: r('FeedDate') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'petFoodForm', js: 'petFoodForm', typ: r('FeedDate') },
			{ json: 'flavor', js: 'flavor', typ: r('FeedDate') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'shelfLife', js: 'shelfLife', typ: r('AssembledProductHeight') },
			{ json: 'feedingInstructions', js: 'feedingInstructions', typ: r('FeedDate') },
			{ json: 'instructions', js: 'instructions', typ: r('FeedDate') },
			{ json: 'animalHealthConcern', js: 'animalHealthConcern', typ: r('Athlete') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	LabelImage: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('SafetyDataSheetType') },
			{ json: 'title', js: 'title', typ: '' },
			{ json: 'items', js: 'items', typ: r('LabelImageItems') },
			{ json: 'minItems', js: 'minItems', typ: 0 },
		],
		false
	),
	LabelImageItems: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('IndecentProperties') },
			{ json: 'required', js: 'required', typ: a(r('FluffyRequired')) },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	IndecentProperties: o(
		[
			{ json: 'labelImageContains', js: 'labelImageContains', typ: r('Locale') },
			{ json: 'labelImageURL', js: 'labelImageURL', typ: r('WarrantyURL') },
		],
		false
	),
	AnimalHealthGrooming: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('AnimalHealthGroomingProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	AnimalHealthGroomingProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'labelImage', js: 'labelImage', typ: r('LabelImage') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'ingredients', js: 'ingredients', typ: r('FeedDate') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'animalType', js: 'animalType', typ: r('FeedDate') },
			{ json: 'animalBreed', js: 'animalBreed', typ: r('FeedDate') },
			{ json: 'animalLifestage', js: 'animalLifestage', typ: r('FeedDate') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'minimumWeight', js: 'minimumWeight', typ: r('AssembledProductHeight') },
			{ json: 'maximumWeight', js: 'maximumWeight', typ: r('AssembledProductHeight') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'petSize', js: 'petSize', typ: r('FeedDate') },
			{ json: 'animalHealthConcern', js: 'animalHealthConcern', typ: r('Athlete') },
			{ json: 'dosage', js: 'dosage', typ: r('FeedDate') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'shelfLife', js: 'shelfLife', typ: r('AssembledProductHeight') },
			{ json: 'drugDosageInstructionsImage', js: 'drugDosageInstructionsImage', typ: r('FeedDate') },
			{
				json: 'drugActiveInactiveIngredientsImage',
				js: 'drugActiveInactiveIngredientsImage',
				typ: r('FeedDate'),
			},
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'flavor', js: 'flavor', typ: r('FeedDate') },
			{ json: 'activeIngredients', js: 'activeIngredients', typ: r('ActiveIngredients') },
			{ json: 'inactiveIngredients', js: 'inactiveIngredients', typ: r('Athlete') },
			{ json: 'stopUseIndications', js: 'stopUseIndications', typ: r('Athlete') },
			{ json: 'form', js: 'form', typ: r('FeedDate') },
			{ json: 'scent', js: 'scent', typ: r('FeedDate') },
			{ json: 'hairLength', js: 'hairLength', typ: r('Athlete') },
			{ json: 'powerType', js: 'powerType', typ: r('FeedDate') },
			{ json: 'isDisposable', js: 'isDisposable', typ: r('Locale') },
			{ json: 'instructions', js: 'instructions', typ: r('FeedDate') },
			{ json: 'isRetractable', js: 'isRetractable', typ: r('Locale') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	ActiveIngredients: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('SafetyDataSheetType') },
			{ json: 'title', js: 'title', typ: '' },
			{ json: 'items', js: 'items', typ: r('ActiveIngredientsItems') },
			{ json: 'minItems', js: 'minItems', typ: 0 },
		],
		false
	),
	ActiveIngredientsItems: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('HilariousProperties') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	HilariousProperties: o(
		[
			{ json: 'activeIngredientName', js: 'activeIngredientName', typ: r('AnimalBreed') },
			{
				json: 'activeIngredientPercentage',
				js: 'activeIngredientPercentage',
				typ: r('NumberOfHazardousComponents'),
			},
		],
		false
	),
	ArtCraft: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('ArtCraftProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	ArtCraftProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'smallPartsWarnings', js: 'smallPartsWarnings', typ: r('CountryOfOriginAssembly') },
			{ json: 'compositeWoodCertificationCode', js: 'compositeWoodCertificationCode', typ: r('Locale') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'inflexKitComponent', js: 'inflexKitComponent', typ: r('Locale') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'pattern', js: 'pattern', typ: r('Athlete') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'metal', js: 'metal', typ: r('Locale') },
			{ json: 'plating', js: 'plating', typ: r('FeedDate') },
			{ json: 'finish', js: 'finish', typ: r('FeedDate') },
			{ json: 'shape', js: 'shape', typ: r('FeedDate') },
			{ json: 'scent', js: 'scent', typ: r('FeedDate') },
			{ json: 'gender', js: 'gender', typ: r('Locale') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'minimumRecommendedAge', js: 'minimumRecommendedAge', typ: r('AssembledProductHeight') },
			{ json: 'maximumRecommendedAge', js: 'maximumRecommendedAge', typ: r('AssembledProductHeight') },
			{ json: 'artPaintType', js: 'artPaintType', typ: r('FeedDate') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'ingredients', js: 'ingredients', typ: r('FeedDate') },
			{ json: 'fabricContent', js: 'fabricContent', typ: r('FabricContent') },
			{ json: 'fabricCareInstructions', js: 'fabricCareInstructions', typ: r('Athlete') },
			{ json: 'diameter', js: 'diameter', typ: r('AssembledProductHeight') },
			{ json: 'theme', js: 'theme', typ: r('Athlete') },
			{ json: 'occasion', js: 'occasion', typ: r('Athlete') },
			{ json: 'isPowered', js: 'isPowered', typ: r('Locale') },
			{ json: 'powerType', js: 'powerType', typ: r('FeedDate') },
			{ json: 'isBulk', js: 'isBulk', typ: r('Locale') },
			{ json: 'isSelfAdhesive', js: 'isSelfAdhesive', typ: r('Locale') },
			{ json: 'isRefillable', js: 'isRefillable', typ: r('Locale') },
			{ json: 'isDisposable', js: 'isDisposable', typ: r('Locale') },
			{ json: 'isRecyclable', js: 'isRecyclable', typ: r('Locale') },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: r('Athlete') },
			{ json: 'recommendedSurfaces', js: 'recommendedSurfaces', typ: r('Athlete') },
			{ json: 'skillLevel', js: 'skillLevel', typ: r('FeedDate') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'sweingMachineType', js: 'sweingMachineType', typ: r('Locale') },
			{ json: 'sewingKitType', js: 'sewingKitType', typ: r('Locale') },
			{ json: 'boltLengthYardage', js: 'boltLengthYardage', typ: r('AssembledProductHeight') },
			{ json: 'maximumTemperature', js: 'maximumTemperature', typ: r('AssembledProductHeight') },
			{ json: 'productLine', js: 'productLine', typ: r('Athlete') },
			{ json: 'fabricPurchaseForm', js: 'fabricPurchaseForm', typ: r('Locale') },
			{ json: 'precutFabricSpecialtySize', js: 'precutFabricSpecialtySize', typ: r('Locale') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'character', js: 'character', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	Baby: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('BabyClothingProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	BabyClothingProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('AnimalBreed') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('AnimalBreed') },
			{ json: 'smallPartsWarnings', js: 'smallPartsWarnings', typ: r('CountryOfOriginAssembly') },
			{ json: 'countryOfOriginTextiles', js: 'countryOfOriginTextiles', typ: u(undefined, r('Locale')) },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('AnimalBreed') },
			{ json: 'clothingSize', js: 'clothingSize', typ: u(undefined, r('FeedDate')) },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'gender', js: 'gender', typ: r('Locale') },
			{ json: 'ageGroup', js: 'ageGroup', typ: u(undefined, r('CountryOfOriginAssembly')) },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'clothingSizeGroup', js: 'clothingSizeGroup', typ: u(undefined, r('Locale')) },
			{ json: 'size', js: 'size', typ: r('AnimalBreed') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('AnimalBreed') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('AnimalBreed') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('AnimalBreed') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'minimumRecommendedAge', js: 'minimumRecommendedAge', typ: r('AssembledProductHeight') },
			{ json: 'maximumRecommendedAge', js: 'maximumRecommendedAge', typ: r('AssembledProductHeight') },
			{ json: 'fabricContent', js: 'fabricContent', typ: r('FabricContent') },
			{ json: 'fabricCareInstructions', js: 'fabricCareInstructions', typ: r('Athlete') },
			{ json: 'minimumWeight', js: 'minimumWeight', typ: r('AssembledProductHeight') },
			{ json: 'maximumWeight', js: 'maximumWeight', typ: r('AssembledProductHeight') },
			{ json: 'season', js: 'season', typ: r('Athlete') },
			{ json: 'scent', js: 'scent', typ: r('AnimalBreed') },
			{ json: 'pajamaType', js: 'pajamaType', typ: u(undefined, r('FeedDate')) },
			{ json: 'tShirtType', js: 'tShirtType', typ: u(undefined, r('Athlete')) },
			{
				json: 'outerwearCoatJacketAnVestType',
				js: 'outerwearCoatJacketAnVestType',
				typ: u(undefined, r('FeedDate')),
			},
			{ json: 'pattern', js: 'pattern', typ: r('Athlete') },
			{ json: 'shoeCategory', js: 'shoeCategory', typ: u(undefined, r('Locale')) },
			{ json: 'shoeSize', js: 'shoeSize', typ: u(undefined, r('FeedDate')) },
			{ json: 'shoeStyle', js: 'shoeStyle', typ: u(undefined, r('FeedDate')) },
			{ json: 'shoeWidth', js: 'shoeWidth', typ: u(undefined, r('FeedDate')) },
			{ json: 'shoeClosure', js: 'shoeClosure', typ: u(undefined, r('FeedDate')) },
			{ json: 'theme', js: 'theme', typ: r('Athlete') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'character', js: 'character', typ: r('Athlete') },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: r('Athlete') },
			{ json: 'sportsLeague', js: 'sportsLeague', typ: r('Athlete') },
			{ json: 'athlete', js: 'athlete', typ: r('Athlete') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('AnimalBreed') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
			{ json: 'seasonYear', js: 'seasonYear', typ: u(undefined, r('NumberOfHazardousComponents')) },
			{ json: 'seasonCode', js: 'seasonCode', typ: u(undefined, r('Locale')) },
			{
				json: 'compositeWoodCertificationCode',
				js: 'compositeWoodCertificationCode',
				typ: u(undefined, r('Locale')),
			},
			{ json: 'material', js: 'material', typ: u(undefined, r('Athlete')) },
			{ json: 'educationalFocus', js: 'educationalFocus', typ: u(undefined, r('Athlete')) },
			{ json: 'makesNoise', js: 'makesNoise', typ: u(undefined, r('Locale')) },
			{ json: 'awardsWon', js: 'awardsWon', typ: u(undefined, r('Athlete')) },
			{ json: 'animalType', js: 'animalType', typ: u(undefined, r('FeedDate')) },
			{ json: 'isAssemblyRequired', js: 'isAssemblyRequired', typ: u(undefined, r('Locale')) },
			{ json: 'assemblyInstructions', js: 'assemblyInstructions', typ: u(undefined, r('FeedDate')) },
			{ json: 'isPowered', js: 'isPowered', typ: u(undefined, r('Locale')) },
			{ json: 'powerType', js: 'powerType', typ: u(undefined, r('FeedDate')) },
			{ json: 'screenSize', js: 'screenSize', typ: u(undefined, r('AssembledProductHeight')) },
			{ json: 'warrantyText', js: 'warrantyText', typ: u(undefined, r('FeedDate')) },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: u(undefined, r('FeedDate')) },
		],
		false
	),
	BabyDiaperingCareOther: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('BabyDiaperingCareOtherProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	BabyDiaperingCareOtherProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('AnimalBreed') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('AnimalBreed') },
			{ json: 'labelImage', js: 'labelImage', typ: u(undefined, r('LabelImage')) },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('AnimalBreed') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'ingredients', js: 'ingredients', typ: u(undefined, r('FeedDate')) },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('AnimalBreed') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('AnimalBreed') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'size', js: 'size', typ: r('AnimalBreed') },
			{ json: 'shelfLife', js: 'shelfLife', typ: u(undefined, r('AssembledProductHeight')) },
			{ json: 'bedSize', js: 'bedSize', typ: r('FeedDate') },
			{ json: 'diaperSize', js: 'diaperSize', typ: u(undefined, r('FeedDate')) },
			{ json: 'diaposableBabyDiaperType', js: 'diaposableBabyDiaperType', typ: u(undefined, r('Athlete')) },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'gender', js: 'gender', typ: r('Locale') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{
				json: 'minimumRecommendedAge',
				js: 'minimumRecommendedAge',
				typ: u(undefined, r('AssembledProductHeight')),
			},
			{
				json: 'maximumRecommendedAge',
				js: 'maximumRecommendedAge',
				typ: u(undefined, r('AssembledProductHeight')),
			},
			{ json: 'minimumWeight', js: 'minimumWeight', typ: u(undefined, r('AssembledProductHeight')) },
			{ json: 'maximumWeight', js: 'maximumWeight', typ: u(undefined, r('AssembledProductHeight')) },
			{ json: 'scent', js: 'scent', typ: u(undefined, r('FeedDate')) },
			{ json: 'character', js: 'character', typ: r('Athlete') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'pattern', js: 'pattern', typ: r('Athlete') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('WarrantyURL') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('AnimalBreed') },
			{ json: 'fabricContent', js: 'fabricContent', typ: r('FabricContent') },
			{ json: 'fabricCareInstructions', js: 'fabricCareInstructions', typ: r('Athlete') },
			{ json: 'sportsLeague', js: 'sportsLeague', typ: r('Athlete') },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: r('Athlete') },
			{ json: 'athlete', js: 'athlete', typ: r('Athlete') },
			{ json: 'babyMonitorType', js: 'babyMonitorType', typ: u(undefined, r('Athlete')) },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('AnimalBreed') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
			{ json: 'countryOfOriginTextiles', js: 'countryOfOriginTextiles', typ: u(undefined, r('Locale')) },
			{
				json: 'compositeWoodCertificationCode',
				js: 'compositeWoodCertificationCode',
				typ: u(undefined, r('Locale')),
			},
			{ json: 'pieceCount', js: 'pieceCount', typ: u(undefined, r('NumberOfHazardousComponents')) },
			{ json: 'babyCribType', js: 'babyCribType', typ: u(undefined, r('Locale')) },
			{ json: 'collection', js: 'collection', typ: u(undefined, r('FeedDate')) },
			{ json: 'mattressFirmness', js: 'mattressFirmness', typ: u(undefined, r('AnimalBreed')) },
			{ json: 'fillMaterial', js: 'fillMaterial', typ: u(undefined, r('Athlete')) },
			{ json: 'finish', js: 'finish', typ: u(undefined, r('FeedDate')) },
			{ json: 'shape', js: 'shape', typ: u(undefined, r('AnimalBreed')) },
			{ json: 'isFoldable', js: 'isFoldable', typ: u(undefined, r('Locale')) },
			{ json: 'isWheeled', js: 'isWheeled', typ: u(undefined, r('Locale')) },
			{ json: 'homeDecorStyle', js: 'homeDecorStyle', typ: u(undefined, r('AnimalBreed')) },
			{ json: 'isAssemblyRequired', js: 'isAssemblyRequired', typ: u(undefined, r('Locale')) },
			{ json: 'assemblyInstructions', js: 'assemblyInstructions', typ: u(undefined, r('FeedDate')) },
			{ json: 'smallPartsWarnings', js: 'smallPartsWarnings', typ: u(undefined, r('CountryOfOriginAssembly')) },
			{ json: 'bedPillowSize', js: 'bedPillowSize', typ: u(undefined, r('Athlete')) },
			{ json: 'bedStyle', js: 'bedStyle', typ: u(undefined, r('FeedDate')) },
			{ json: 'threadCount', js: 'threadCount', typ: u(undefined, r('NumberOfHazardousComponents')) },
			{ json: 'theme', js: 'theme', typ: u(undefined, r('Athlete')) },
			{ json: 'monogramLetter', js: 'monogramLetter', typ: u(undefined, r('FeedDate')) },
			{ json: 'occasion', js: 'occasion', typ: u(undefined, r('Athlete')) },
			{ json: 'isSet', js: 'isSet', typ: u(undefined, r('Locale')) },
		],
		false
	),
	BabyFood: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('BabyFoodProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	BabyFoodProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('AnimalBreed') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('AnimalBreed') },
			{ json: 'labelImage', js: 'labelImage', typ: r('LabelImage') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('AnimalBreed') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'ingredients', js: 'ingredients', typ: r('AnimalBreed') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('AnimalBreed') },
			{ json: 'flavor', js: 'flavor', typ: r('AnimalBreed') },
			{ json: 'meal', js: 'meal', typ: r('AnimalBreed') },
			{ json: 'size', js: 'size', typ: r('AnimalBreed') },
			{ json: 'ageGroup', js: 'ageGroup', typ: u(undefined, r('CountryOfOriginAssembly')) },
			{
				json: 'minimumRecommendedAge',
				js: 'minimumRecommendedAge',
				typ: u(undefined, r('AssembledProductHeight')),
			},
			{
				json: 'maximumRecommendedAge',
				js: 'maximumRecommendedAge',
				typ: u(undefined, r('AssembledProductHeight')),
			},
			{ json: 'shelfLife', js: 'shelfLife', typ: r('AssembledProductHeight') },
			{ json: 'character', js: 'character', typ: r('Athlete') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: u(undefined, r('Athlete')) },
			{ json: 'servingSize', js: 'servingSize', typ: r('AnimalBreed') },
			{ json: 'servingsPerContainer', js: 'servingsPerContainer', typ: r('NumberOfHazardousComponents') },
			{ json: 'calories', js: 'calories', typ: r('AssembledProductHeight') },
			{ json: 'caloriesFromFat', js: 'caloriesFromFat', typ: r('AssembledProductHeight') },
			{ json: 'totalFat', js: 'totalFat', typ: r('AssembledProductHeight') },
			{
				json: 'totalFatPercentageDailyValue',
				js: 'totalFatPercentageDailyValue',
				typ: r('NumberOfHazardousComponents'),
			},
			{ json: 'totalCarbohydrate', js: 'totalCarbohydrate', typ: r('AssembledProductHeight') },
			{
				json: 'totalCarbohydratePercentageDailyValue',
				js: 'totalCarbohydratePercentageDailyValue',
				typ: r('NumberOfHazardousComponents'),
			},
			{ json: 'nutrients', js: 'nutrients', typ: r('Nutrients') },
			{ json: 'nutrientFootnote', js: 'nutrientFootnote', typ: r('AnimalBreed') },
			{
				json: 'totalProteinPercentageDailyValue',
				js: 'totalProteinPercentageDailyValue',
				typ: r('NumberOfHazardousComponents'),
			},
			{ json: 'totalProtein', js: 'totalProtein', typ: r('AssembledProductHeight') },
			{ json: 'foodForm', js: 'foodForm', typ: r('AnimalBreed') },
			{ json: 'containerType', js: 'containerType', typ: r('Athlete') },
			{
				json: 'fluidOuncesSupplying100Calories',
				js: 'fluidOuncesSupplying100Calories',
				typ: u(undefined, r('AssembledProductHeight')),
			},
			{ json: 'foodAllergenStatements', js: 'foodAllergenStatements', typ: r('Athlete') },
			{ json: 'babyFoodPackaging', js: 'babyFoodPackaging', typ: u(undefined, r('FeedDate')) },
			{ json: 'babyFormulaStage', js: 'babyFormulaStage', typ: u(undefined, r('Athlete')) },
			{ json: 'babyFoodStage', js: 'babyFoodStage', typ: u(undefined, r('Athlete')) },
			{ json: 'instructions', js: 'instructions', typ: r('AnimalBreed') },
			{ json: 'features', js: 'features', typ: u(undefined, r('Athlete')) },
			{ json: 'safeHandlingInstructions', js: 'safeHandlingInstructions', typ: r('AnimalBreed') },
			{ json: 'cuisine', js: 'cuisine', typ: r('Athlete') },
			{ json: 'foodPreparationTips', js: 'foodPreparationTips', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('AnimalBreed') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
			{ json: 'mealStyle', js: 'mealStyle', typ: u(undefined, r('FeedDate')) },
			{ json: 'dietType', js: 'dietType', typ: u(undefined, r('Locale')) },
			{ json: 'caffeineDesignation', js: 'caffeineDesignation', typ: u(undefined, r('Locale')) },
			{ json: 'spiceLevel', js: 'spiceLevel', typ: u(undefined, r('FeedDate')) },
			{ json: 'beefCut', js: 'beefCut', typ: u(undefined, r('FeedDate')) },
			{ json: 'poultryCut', js: 'poultryCut', typ: u(undefined, r('FeedDate')) },
			{ json: 'releaseDate', js: 'releaseDate', typ: u(undefined, r('FeedDate')) },
			{ json: 'puffedSnackType', js: 'puffedSnackType', typ: u(undefined, r('Locale')) },
			{ json: 'nutrientContentClaims', js: 'nutrientContentClaims', typ: u(undefined, r('Athlete')) },
			{ json: 'dietaryMethod', js: 'dietaryMethod', typ: u(undefined, r('Athlete')) },
		],
		false
	),
	Nutrients: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('SafetyDataSheetType') },
			{ json: 'title', js: 'title', typ: '' },
			{ json: 'items', js: 'items', typ: r('NutrientsItems') },
			{ json: 'minItems', js: 'minItems', typ: 0 },
		],
		false
	),
	NutrientsItems: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('AmbitiousProperties') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	AmbitiousProperties: o(
		[
			{ json: 'nutrientName', js: 'nutrientName', typ: r('AnimalBreed') },
			{ json: 'nutrientAmount', js: 'nutrientAmount', typ: r('AnimalBreed') },
			{ json: 'nutrientPercentageDailyValue', js: 'nutrientPercentageDailyValue', typ: r('AnimalBreed') },
		],
		false
	),
	BabyTransport: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('BabyTransportProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	BabyTransportProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'countryOfOriginTextiles', js: 'countryOfOriginTextiles', typ: r('Locale') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'gender', js: 'gender', typ: r('Locale') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'pattern', js: 'pattern', typ: r('Athlete') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'minimumRecommendedAge', js: 'minimumRecommendedAge', typ: r('AssembledProductHeight') },
			{ json: 'maximumRecommendedAge', js: 'maximumRecommendedAge', typ: r('AssembledProductHeight') },
			{ json: 'minimumWeight', js: 'minimumWeight', typ: r('AssembledProductHeight') },
			{ json: 'maximumWeight', js: 'maximumWeight', typ: r('AssembledProductHeight') },
			{ json: 'isFoldable', js: 'isFoldable', typ: r('Locale') },
			{ json: 'isWheeled', js: 'isWheeled', typ: r('Locale') },
			{ json: 'strollerType', js: 'strollerType', typ: r('Athlete') },
			{ json: 'seatingCapacity', js: 'seatingCapacity', typ: r('NumberOfHazardousComponents') },
			{ json: 'babyCarrierStyle', js: 'babyCarrierStyle', typ: r('Athlete') },
			{ json: 'babyCarrierPosition', js: 'babyCarrierPosition', typ: r('Athlete') },
			{ json: 'safetyHarnessStyle', js: 'safetyHarnessStyle', typ: r('Locale') },
			{ json: 'childWalkingHarnessStyle', js: 'childWalkingHarnessStyle', typ: r('FeedDate') },
			{ json: 'travelSystemCompatibility', js: 'travelSystemCompatibility', typ: r('FeedDate') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'character', js: 'character', typ: r('Athlete') },
			{ json: 'isAssemblyRequired', js: 'isAssemblyRequired', typ: r('Locale') },
			{ json: 'assemblyInstructions', js: 'assemblyInstructions', typ: r('FeedDate') },
			{ json: 'fabricContent', js: 'fabricContent', typ: r('FabricContent') },
			{ json: 'fabricCareInstructions', js: 'fabricCareInstructions', typ: r('Athlete') },
			{ json: 'childCarSeatType', js: 'childCarSeatType', typ: r('Locale') },
			{ json: 'facingDirection', js: 'facingDirection', typ: r('FeedDate') },
			{ json: 'forwardFacingMinimumWeight', js: 'forwardFacingMinimumWeight', typ: r('AssembledProductHeight') },
			{ json: 'forwardFacingMaximumWeight', js: 'forwardFacingMaximumWeight', typ: r('AssembledProductHeight') },
			{ json: 'rearFacingMinimumWeight', js: 'rearFacingMinimumWeight', typ: r('AssembledProductHeight') },
			{ json: 'rearFacingMaximumWeight', js: 'rearFacingMaximumWeight', typ: r('AssembledProductHeight') },
			{ json: 'hasLatchSystem', js: 'hasLatchSystem', typ: r('Locale') },
			{ json: 'carSeatBaseDepth', js: 'carSeatBaseDepth', typ: r('AssembledProductHeight') },
			{ json: 'carSeatBaseWidth', js: 'carSeatBaseWidth', typ: r('AssembledProductHeight') },
			{ json: 'carSeatMaxChildHeight', js: 'carSeatMaxChildHeight', typ: r('AssembledProductHeight') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'sportsLeague', js: 'sportsLeague', typ: r('Athlete') },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: r('Athlete') },
			{ json: 'athlete', js: 'athlete', typ: r('Athlete') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	BeautyPersonalCareHygiene: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('BeautyPersonalCareHygieneProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	BeautyPersonalCareHygieneProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'labelImage', js: 'labelImage', typ: r('LabelImage') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'ingredients', js: 'ingredients', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'gender', js: 'gender', typ: r('Locale') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'collection', js: 'collection', typ: r('FeedDate') },
			{ json: 'scent', js: 'scent', typ: r('FeedDate') },
			{ json: 'flavor', js: 'flavor', typ: r('FeedDate') },
			{
				json: 'drugActiveInactiveIngredientsImage',
				js: 'drugActiveInactiveIngredientsImage',
				typ: r('FeedDate'),
			},
			{ json: 'drugDosageInstructionsImage', js: 'drugDosageInstructionsImage', typ: r('FeedDate') },
			{ json: 'isControlledSubstance', js: 'isControlledSubstance', typ: r('Locale') },
			{ json: 'bodyParts', js: 'bodyParts', typ: r('Athlete') },
			{ json: 'hairType', js: 'hairType', typ: r('FeedDate') },
			{ json: 'hairColorCategory', js: 'hairColorCategory', typ: r('Locale') },
			{ json: 'hairCareKeyBenefit', js: 'hairCareKeyBenefit', typ: r('CountryOfOriginAssembly') },
			{ json: 'hairProductForm', js: 'hairProductForm', typ: r('Locale') },
			{ json: 'wigCapStyle', js: 'wigCapStyle', typ: r('Locale') },
			{ json: 'skinType', js: 'skinType', typ: r('FeedDate') },
			{ json: 'skinTone', js: 'skinTone', typ: r('FeedDate') },
			{ json: 'skinCareConcern', js: 'skinCareConcern', typ: r('Athlete') },
			{ json: 'spfValue', js: 'spfValue', typ: r('NumberOfHazardousComponents') },
			{ json: 'absorbency', js: 'absorbency', typ: r('FeedDate') },
			{ json: 'activeIngredients', js: 'activeIngredients', typ: r('ActiveIngredients') },
			{ json: 'inactiveIngredients', js: 'inactiveIngredients', typ: r('Athlete') },
			{ json: 'resultTime', js: 'resultTime', typ: r('AssembledProductHeight') },
			{ json: 'stopUseIndications', js: 'stopUseIndications', typ: r('Athlete') },
			{ json: 'form', js: 'form', typ: r('FeedDate') },
			{ json: 'isNoncomodegenic', js: 'isNoncomodegenic', typ: r('Locale') },
			{ json: 'isUnscented', js: 'isUnscented', typ: r('Locale') },
			{ json: 'isAdultProduct', js: 'isAdultProduct', typ: r('Locale') },
			{ json: 'isTinted', js: 'isTinted', typ: r('Locale') },
			{ json: 'isSelfTanning', js: 'isSelfTanning', typ: r('Locale') },
			{ json: 'isReusable', js: 'isReusable', typ: r('Locale') },
			{ json: 'isSet', js: 'isSet', typ: r('Locale') },
			{ json: 'isTravelSize', js: 'isTravelSize', typ: r('Locale') },
			{ json: 'isPortable', js: 'isPortable', typ: r('Locale') },
			{ json: 'isDisposable', js: 'isDisposable', typ: r('Locale') },
			{ json: 'isPowered', js: 'isPowered', typ: r('Locale') },
			{ json: 'isWaterproof', js: 'isWaterproof', typ: r('Locale') },
			{ json: 'athlete', js: 'athlete', typ: r('Athlete') },
			{ json: 'makeupForm', js: 'makeupForm', typ: r('CountryOfOriginAssembly') },
			{ json: 'instructions', js: 'instructions', typ: r('FeedDate') },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: r('Athlete') },
			{ json: 'powerType', js: 'powerType', typ: r('FeedDate') },
			{ json: 'batteriesRequired', js: 'batteriesRequired', typ: r('Locale') },
			{ json: 'cleaningCareAndMaintenance', js: 'cleaningCareAndMaintenance', typ: r('FeedDate') },
			{ json: 'isHypoallergenic', js: 'isHypoallergenic', typ: r('Locale') },
			{ json: 'perfumeCologneType', js: 'perfumeCologneType', typ: r('Locale') },
			{ json: 'bodySprayType', js: 'bodySprayType', typ: r('Locale') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'compatibleBrands', js: 'compatibleBrands', typ: r('Athlete') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: r('Athlete') },
			{ json: 'sportsLeague', js: 'sportsLeague', typ: r('Athlete') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'medicineStrength', js: 'medicineStrength', typ: r('FeedDate') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	BuildingSupply: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('BuildingSupplyProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	BuildingSupplyProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'compositeWoodCertificationCode', js: 'compositeWoodCertificationCode', typ: r('Locale') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'shape', js: 'shape', typ: r('FeedDate') },
			{ json: 'pattern', js: 'pattern', typ: r('Athlete') },
			{ json: 'coverageArea', js: 'coverageArea', typ: r('AssembledProductHeight') },
			{ json: 'snowLoadRating', js: 'snowLoadRating', typ: r('AssembledProductHeight') },
			{ json: 'paintFinish', js: 'paintFinish', typ: r('FeedDate') },
			{ json: 'rollLength', js: 'rollLength', typ: r('AssembledProductHeight') },
			{ json: 'recommendedSurfaces', js: 'recommendedSurfaces', typ: r('Athlete') },
			{ json: 'dryTime', js: 'dryTime', typ: r('AssembledProductHeight') },
			{ json: 'doorStyle', js: 'doorStyle', typ: r('FeedDate') },
			{ json: 'doorOpeningStyle', js: 'doorOpeningStyle', typ: r('FeedDate') },
			{ json: 'carpetStyle', js: 'carpetStyle', typ: r('FeedDate') },
			{ json: 'ingredients', js: 'ingredients', typ: r('FeedDate') },
			{ json: 'vocLevel', js: 'vocLevel', typ: r('FeedDate') },
			{ json: 'peiRating', js: 'peiRating', typ: r('FeedDate') },
			{ json: 'acRating', js: 'acRating', typ: r('Locale') },
			{ json: 'pileHeight', js: 'pileHeight', typ: r('AssembledProductHeight') },
			{ json: 'hasLowEmissivity', js: 'hasLowEmissivity', typ: r('Locale') },
			{ json: 'grade', js: 'grade', typ: r('FeedDate') },
			{ json: 'form', js: 'form', typ: r('FeedDate') },
			{ json: 'fineness', js: 'fineness', typ: r('FeedDate') },
			{ json: 'isEnergyStarCertified', js: 'isEnergyStarCertified', typ: r('Locale') },
			{ json: 'isOdorless', js: 'isOdorless', typ: r('Locale') },
			{ json: 'isMadeFromSustainableMaterials', js: 'isMadeFromSustainableMaterials', typ: r('Locale') },
			{ json: 'isMadeFromRecycledMaterial', js: 'isMadeFromRecycledMaterial', typ: r('Locale') },
			{ json: 'isMadeFromReclaimedMaterials', js: 'isMadeFromReclaimedMaterials', typ: r('Locale') },
			{ json: 'isPrefinished', js: 'isPrefinished', typ: r('Locale') },
			{ json: 'isReadyToUse', js: 'isReadyToUse', typ: r('Locale') },
			{ json: 'isFastSetting', js: 'isFastSetting', typ: r('Locale') },
			{ json: 'isCombustible', js: 'isCombustible', typ: r('Locale') },
			{ json: 'isMoldResistant', js: 'isMoldResistant', typ: r('Locale') },
			{ json: 'isFlammable', js: 'isFlammable', typ: r('Locale') },
			{ json: 'isFireResistant', js: 'isFireResistant', typ: r('Locale') },
			{ json: 'isBiodegradable', js: 'isBiodegradable', typ: r('Locale') },
			{ json: 'isWaterSoluble', js: 'isWaterSoluble', typ: r('Locale') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'recycledMaterialContent', js: 'recycledMaterialContent', typ: r('RecycledMaterialContent') },
			{ json: 'isWaterproof', js: 'isWaterproof', typ: r('Locale') },
			{ json: 'powerType', js: 'powerType', typ: r('FeedDate') },
			{ json: 'accessoriesIncluded', js: 'accessoriesIncluded', typ: r('Athlete') },
			{ json: 'thickness', js: 'thickness', typ: r('AssembledProductHeight') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'cleaningCareAndMaintenance', js: 'cleaningCareAndMaintenance', typ: r('FeedDate') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: r('Athlete') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	RecycledMaterialContent: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('SafetyDataSheetType') },
			{ json: 'title', js: 'title', typ: '' },
			{ json: 'items', js: 'items', typ: r('RecycledMaterialContentItems') },
			{ json: 'minItems', js: 'minItems', typ: 0 },
		],
		false
	),
	RecycledMaterialContentItems: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('CunningProperties') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	CunningProperties: o(
		[
			{ json: 'recycledMaterial', js: 'recycledMaterial', typ: r('AnimalBreed') },
			{
				json: 'percentageOfRecycledMaterial',
				js: 'percentageOfRecycledMaterial',
				typ: r('NumberOfHazardousComponents'),
			},
		],
		false
	),
	CamerasLenses: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('CamerasLensesProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	CamerasLensesProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'numberOfMegapixels', js: 'numberOfMegapixels', typ: r('AssembledProductHeight') },
			{ json: 'digitalZoom', js: 'digitalZoom', typ: r('FeedDate') },
			{ json: 'opticalZoom', js: 'opticalZoom', typ: r('FeedDate') },
			{ json: 'magnification', js: 'magnification', typ: r('FeedDate') },
			{ json: 'sensorResolution', js: 'sensorResolution', typ: r('FeedDate') },
			{ json: 'lensDiameter', js: 'lensDiameter', typ: r('AssembledProductHeight') },
			{ json: 'lensCoating', js: 'lensCoating', typ: r('FeedDate') },
			{ json: 'lensFilterType', js: 'lensFilterType', typ: r('FeedDate') },
			{ json: 'cameraLensType', js: 'cameraLensType', typ: r('FeedDate') },
			{ json: 'hasFlash', js: 'hasFlash', typ: r('Locale') },
			{ json: 'flashType', js: 'flashType', typ: r('FeedDate') },
			{ json: 'minimumShutterSpeed', js: 'minimumShutterSpeed', typ: r('FocalLength') },
			{ json: 'maximumShutterSpeed', js: 'maximumShutterSpeed', typ: r('FocalLength') },
			{ json: 'focusType', js: 'focusType', typ: r('Athlete') },
			{ json: 'focalLength', js: 'focalLength', typ: r('FocalLength') },
			{ json: 'focalRatio', js: 'focalRatio', typ: r('FeedDate') },
			{ json: 'minimumAperture', js: 'minimumAperture', typ: r('FeedDate') },
			{ json: 'maximumAperture', js: 'maximumAperture', typ: r('FeedDate') },
			{ json: 'exposureModes', js: 'exposureModes', typ: r('Athlete') },
			{ json: 'displayTechnology', js: 'displayTechnology', typ: r('FeedDate') },
			{ json: 'displayResolution', js: 'displayResolution', typ: r('Athlete') },
			{ json: 'screenSize', js: 'screenSize', typ: r('AssembledProductHeight') },
			{ json: 'diameter', js: 'diameter', typ: r('AssembledProductHeight') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'isAssemblyRequired', js: 'isAssemblyRequired', typ: r('Locale') },
			{ json: 'assemblyInstructions', js: 'assemblyInstructions', typ: r('FeedDate') },
			{ json: 'accessoriesIncluded', js: 'accessoriesIncluded', typ: r('Athlete') },
			{ json: 'hasTouchscreen', js: 'hasTouchscreen', typ: r('Locale') },
			{ json: 'hasMemoryCardSlot', js: 'hasMemoryCardSlot', typ: r('Locale') },
			{ json: 'memoryCardType', js: 'memoryCardType', typ: r('Athlete') },
			{ json: 'recordableMediaFormats', js: 'recordableMediaFormats', typ: r('Athlete') },
			{ json: 'wirelessTechnologies', js: 'wirelessTechnologies', typ: r('Athlete') },
			{ json: 'connections', js: 'connections', typ: r('Athlete') },
			{ json: 'isPortable', js: 'isPortable', typ: r('Locale') },
			{ json: 'isWaterproof', js: 'isWaterproof', typ: r('Locale') },
			{ json: 'hasSelfTimer', js: 'hasSelfTimer', typ: r('Locale') },
			{ json: 'selfTimerDelay', js: 'selfTimerDelay', typ: r('Athlete') },
			{ json: 'standbyTime', js: 'standbyTime', typ: r('AssembledProductHeight') },
			{ json: 'fieldOfView', js: 'fieldOfView', typ: r('FeedDate') },
			{ json: 'isParfocal', js: 'isParfocal', typ: r('Locale') },
			{ json: 'shootingMode', js: 'shootingMode', typ: r('FeedDate') },
			{ json: 'microphoneIncluded', js: 'microphoneIncluded', typ: r('Locale') },
			{ json: 'hasHandle', js: 'hasHandle', typ: r('Locale') },
			{ json: 'isMulticoated', js: 'isMulticoated', typ: r('Locale') },
			{ json: 'hasRedEyeReduction', js: 'hasRedEyeReduction', typ: r('Locale') },
			{ json: 'hasNightVision', js: 'hasNightVision', typ: r('Locale') },
			{ json: 'isFogResistant', js: 'isFogResistant', typ: r('Locale') },
			{ json: 'attachmentStyle', js: 'attachmentStyle', typ: r('FeedDate') },
			{ json: 'hasShoulderStrap', js: 'hasShoulderStrap', typ: r('Locale') },
			{ json: 'compatibleBrands', js: 'compatibleBrands', typ: r('Athlete') },
			{ json: 'compatibleDevices', js: 'compatibleDevices', typ: r('Athlete') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'capacity', js: 'capacity', typ: r('FeedDate') },
			{ json: 'cleaningCareAndMaintenance', js: 'cleaningCareAndMaintenance', typ: r('FeedDate') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	FocalLength: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('FocalLengthProperties') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	FocalLengthProperties: o(
		[
			{ json: 'measure', js: 'measure', typ: r('AnimalBreed') },
			{ json: 'unit', js: 'unit', typ: r('Locale') },
		],
		false
	),
	CarriersAccessories: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('CarriersAccessoriesProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	CarriersAccessoriesProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('AnimalBreed') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('AnimalBreed') },
			{ json: 'countryOfOriginTextiles', js: 'countryOfOriginTextiles', typ: r('Locale') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('AnimalBreed') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'gender', js: 'gender', typ: r('Locale') },
			{ json: 'size', js: 'size', typ: r('AnimalBreed') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('AnimalBreed') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('AnimalBreed') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('AnimalBreed') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'bagStyle', js: 'bagStyle', typ: u(undefined, r('CountryOfOriginAssembly')) },
			{ json: 'pattern', js: 'pattern', typ: r('Athlete') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'dimensions', js: 'dimensions', typ: u(undefined, r('FeedDate')) },
			{ json: 'capacity', js: 'capacity', typ: r('AnimalBreed') },
			{ json: 'isWheeled', js: 'isWheeled', typ: r('Locale') },
			{ json: 'numberOfWheels', js: 'numberOfWheels', typ: r('NumberOfHazardousComponents') },
			{ json: 'fabricContent', js: 'fabricContent', typ: r('FabricContent') },
			{ json: 'fabricCareInstructions', js: 'fabricCareInstructions', typ: r('Athlete') },
			{ json: 'handleMaterial', js: 'handleMaterial', typ: r('Athlete') },
			{ json: 'shape', js: 'shape', typ: r('AnimalBreed') },
			{ json: 'handleType', js: 'handleType', typ: r('AnimalBreed') },
			{ json: 'zipperMaterial', js: 'zipperMaterial', typ: r('AnimalBreed') },
			{ json: 'lockingMechanism', js: 'lockingMechanism', typ: r('AnimalBreed') },
			{ json: 'leatherGrade', js: 'leatherGrade', typ: r('AnimalBreed') },
			{ json: 'bagCaseFeature', js: 'bagCaseFeature', typ: u(undefined, r('FeedDate')) },
			{ json: 'isWeatherResistant', js: 'isWeatherResistant', typ: r('Locale') },
			{ json: 'isWaterproof', js: 'isWaterproof', typ: r('Locale') },
			{ json: 'autographedBy', js: 'autographedBy', typ: r('AnimalBreed') },
			{ json: 'monogramLetter', js: 'monogramLetter', typ: r('AnimalBreed') },
			{ json: 'isMadeFromRecycledMaterial', js: 'isMadeFromRecycledMaterial', typ: r('Locale') },
			{ json: 'recycledMaterialContent', js: 'recycledMaterialContent', typ: r('RecycledMaterialContent') },
			{ json: 'isFairTrade', js: 'isFairTrade', typ: u(undefined, r('Locale')) },
			{ json: 'luggageType', js: 'luggageType', typ: u(undefined, r('FeedDate')) },
			{ json: 'scarfStyle', js: 'scarfStyle', typ: u(undefined, r('Athlete')) },
			{ json: 'designer', js: 'designer', typ: r('AnimalBreed') },
			{ json: 'luggageStyle', js: 'luggageStyle', typ: u(undefined, r('FeedDate')) },
			{ json: 'isLined', js: 'isLined', typ: r('Locale') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('AnimalBreed') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('WarrantyURL') },
			{ json: 'character', js: 'character', typ: r('Athlete') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'sportsLeague', js: 'sportsLeague', typ: r('Athlete') },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: r('Athlete') },
			{ json: 'athlete', js: 'athlete', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('AnimalBreed') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
			{ json: 'seasonYear', js: 'seasonYear', typ: r('NumberOfHazardousComponents') },
			{ json: 'seasonCode', js: 'seasonCode', typ: r('Locale') },
			{ json: 'hardOrSoftCase', js: 'hardOrSoftCase', typ: u(undefined, r('Locale')) },
			{ json: 'compatibleBrands', js: 'compatibleBrands', typ: u(undefined, r('Athlete')) },
			{ json: 'compatibleDevices', js: 'compatibleDevices', typ: u(undefined, r('Athlete')) },
			{ json: 'screenSize', js: 'screenSize', typ: u(undefined, r('AssembledProductHeight')) },
			{ json: 'maximumWeight', js: 'maximumWeight', typ: u(undefined, r('AssembledProductHeight')) },
			{ json: 'finish', js: 'finish', typ: u(undefined, r('FeedDate')) },
			{
				json: 'numberOfCompartments',
				js: 'numberOfCompartments',
				typ: u(undefined, r('NumberOfHazardousComponents')),
			},
			{ json: 'hasRemovableStrap', js: 'hasRemovableStrap', typ: u(undefined, r('Locale')) },
			{ json: 'fastenerType', js: 'fastenerType', typ: u(undefined, r('FeedDate')) },
			{ json: 'sport', js: 'sport', typ: u(undefined, r('Athlete')) },
			{ json: 'isReusable', js: 'isReusable', typ: u(undefined, r('Locale')) },
			{ json: 'isFoldable', js: 'isFoldable', typ: u(undefined, r('Locale')) },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: u(undefined, r('Athlete')) },
			{ json: 'occasion', js: 'occasion', typ: u(undefined, r('Athlete')) },
		],
		false
	),
	CellPhones: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('CellPhonesProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	CellPhonesProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'mobileOperatingSystem', js: 'mobileOperatingSystem', typ: r('Athlete') },
			{ json: 'cellPhoneServiceProvider', js: 'cellPhoneServiceProvider', typ: r('FeedDate') },
			{ json: 'cellPhoneType', js: 'cellPhoneType', typ: r('FeedDate') },
			{ json: 'modelName', js: 'modelName', typ: r('FeedDate') },
			{ json: 'screenSize', js: 'screenSize', typ: r('AssembledProductHeight') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'edition', js: 'edition', typ: r('FeedDate') },
			{ json: 'cellularNetworkTechnology', js: 'cellularNetworkTechnology', typ: r('FeedDate') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'hardDriveCapacity', js: 'hardDriveCapacity', typ: r('AssembledProductHeight') },
			{
				json: 'frontFacingCameraMegapixels',
				js: 'frontFacingCameraMegapixels',
				typ: r('AssembledProductHeight'),
			},
			{ json: 'rearCameraMegapixels', js: 'rearCameraMegapixels', typ: r('AssembledProductHeight') },
			{ json: 'hasSignalBooster', js: 'hasSignalBooster', typ: r('Locale') },
			{ json: 'connections', js: 'connections', typ: r('Athlete') },
			{ json: 'memoryCardType', js: 'memoryCardType', typ: r('Athlete') },
			{ json: 'hasFlash', js: 'hasFlash', typ: r('Locale') },
			{ json: 'batteryLife', js: 'batteryLife', typ: r('AssembledProductHeight') },
			{ json: 'resolution', js: 'resolution', typ: r('FeedDate') },
			{ json: 'ramMemory', js: 'ramMemory', typ: r('AssembledProductHeight') },
			{ json: 'talkTime', js: 'talkTime', typ: r('AssembledProductHeight') },
			{ json: 'standbyTime', js: 'standbyTime', typ: r('AssembledProductHeight') },
			{ json: 'wirelessTechnologies', js: 'wirelessTechnologies', typ: r('Athlete') },
			{ json: 'compatibleModels', js: 'compatibleModels', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	CeremonialClothingAccessories: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('CeremonialClothingAccessoriesProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	CeremonialClothingAccessoriesProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('AnimalBreed') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: u(undefined, r('AnimalBreed')) },
			{ json: 'smallPartsWarnings', js: 'smallPartsWarnings', typ: u(undefined, r('CountryOfOriginAssembly')) },
			{ json: 'countryOfOriginTextiles', js: 'countryOfOriginTextiles', typ: u(undefined, r('Locale')) },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('AnimalBreed') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('AnimalBreed') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('AnimalBreed') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('AnimalBreed') },
			{ json: 'pieceCount', js: 'pieceCount', typ: u(undefined, r('NumberOfHazardousComponents')) },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'pattern', js: 'pattern', typ: u(undefined, r('Athlete')) },
			{ json: 'size', js: 'size', typ: r('AnimalBreed') },
			{ json: 'clothingSize', js: 'clothingSize', typ: u(undefined, r('AnimalBreed')) },
			{ json: 'clothingSizeGroup', js: 'clothingSizeGroup', typ: u(undefined, r('Locale')) },
			{ json: 'occasion', js: 'occasion', typ: u(undefined, r('Athlete')) },
			{ json: 'gender', js: 'gender', typ: u(undefined, r('Locale')) },
			{ json: 'theme', js: 'theme', typ: u(undefined, r('Athlete')) },
			{ json: 'fabricContent', js: 'fabricContent', typ: u(undefined, r('FabricContent')) },
			{ json: 'fabricCareInstructions', js: 'fabricCareInstructions', typ: u(undefined, r('Athlete')) },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: u(undefined, r('Athlete')) },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: u(undefined, r('Athlete')) },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('AnimalBreed') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
			{ json: 'targetAudience', js: 'targetAudience', typ: u(undefined, r('Athlete')) },
			{ json: 'animalType', js: 'animalType', typ: u(undefined, r('FeedDate')) },
			{ json: 'wigStyles', js: 'wigStyles', typ: u(undefined, r('Athlete')) },
			{ json: 'character', js: 'character', typ: u(undefined, r('Athlete')) },
			{
				json: 'compositeWoodCertificationCode',
				js: 'compositeWoodCertificationCode',
				typ: u(undefined, r('Locale')),
			},
			{ json: 'shape', js: 'shape', typ: u(undefined, r('AnimalBreed')) },
			{ json: 'finish', js: 'finish', typ: u(undefined, r('AnimalBreed')) },
			{ json: 'isAssemblyRequired', js: 'isAssemblyRequired', typ: u(undefined, r('Locale')) },
			{ json: 'assemblyInstructions', js: 'assemblyInstructions', typ: u(undefined, r('WarrantyURL')) },
			{ json: 'sportsLeague', js: 'sportsLeague', typ: u(undefined, r('Athlete')) },
			{ json: 'instrument', js: 'instrument', typ: u(undefined, r('Athlete')) },
			{ json: 'hardOrSoftCase', js: 'hardOrSoftCase', typ: u(undefined, r('Locale')) },
			{ json: 'isWheeled', js: 'isWheeled', typ: u(undefined, r('Locale')) },
			{ json: 'isPortable', js: 'isPortable', typ: u(undefined, r('Locale')) },
			{ json: 'recommendedLocations', js: 'recommendedLocations', typ: u(undefined, r('Athlete')) },
			{ json: 'warrantyText', js: 'warrantyText', typ: u(undefined, r('FeedDate')) },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: u(undefined, r('FeedDate')) },
			{ json: 'ingredients', js: 'ingredients', typ: u(undefined, r('FeedDate')) },
			{ json: 'isFoldable', js: 'isFoldable', typ: u(undefined, r('Locale')) },
			{ json: 'isRetractable', js: 'isRetractable', typ: u(undefined, r('Locale')) },
			{ json: 'isIndustrial', js: 'isIndustrial', typ: u(undefined, r('Locale')) },
			{ json: 'systemOfMeasurement', js: 'systemOfMeasurement', typ: u(undefined, r('FeedDate')) },
		],
		false
	),
	Clothing: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('ClothingProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	ClothingProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'gender', js: 'gender', typ: r('Locale') },
			{ json: 'clothingSize', js: 'clothingSize', typ: r('FeedDate') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'smallPartsWarnings', js: 'smallPartsWarnings', typ: r('CountryOfOriginAssembly') },
			{ json: 'countryOfOriginTextiles', js: 'countryOfOriginTextiles', typ: r('Locale') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'clothingSizeGroup', js: 'clothingSizeGroup', typ: r('Locale') },
			{ json: 'clothingStyle', js: 'clothingStyle', typ: r('Athlete') },
			{ json: 'fabricContent', js: 'fabricContent', typ: r('FabricContent') },
			{ json: 'fabricCareInstructions', js: 'fabricCareInstructions', typ: r('Athlete') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'pattern', js: 'pattern', typ: r('Athlete') },
			{ json: 'clothingCut', js: 'clothingCut', typ: r('Athlete') },
			{ json: 'clothingFit', js: 'clothingFit', typ: r('FeedDate') },
			{ json: 'clothingWeight', js: 'clothingWeight', typ: r('Locale') },
			{ json: 'clothingTopStyle', js: 'clothingTopStyle', typ: r('Athlete') },
			{ json: 'clothingLengthStyle', js: 'clothingLengthStyle', typ: r('FeedDate') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'isSet', js: 'isSet', typ: r('Locale') },
			{ json: 'dressShirtSize', js: 'dressShirtSize', typ: r('FeedDate') },
			{ json: 'neckSize', js: 'neckSize', typ: r('AssembledProductHeight') },
			{ json: 'shirtNeckStyle', js: 'shirtNeckStyle', typ: r('FeedDate') },
			{ json: 'sleeveLength', js: 'sleeveLength', typ: r('AssembledProductHeight') },
			{ json: 'sleeveLengthStyle', js: 'sleeveLengthStyle', typ: r('Locale') },
			{ json: 'sleeveStyle', js: 'sleeveStyle', typ: r('FeedDate') },
			{ json: 'collarType', js: 'collarType', typ: r('FeedDate') },
			{ json: 'tShirtType', js: 'tShirtType', typ: r('Athlete') },
			{ json: 'jacketStyle', js: 'jacketStyle', typ: r('Athlete') },
			{ json: 'suitBreastingStyle', js: 'suitBreastingStyle', typ: r('Locale') },
			{ json: 'sweaterStyle', js: 'sweaterStyle', typ: r('Athlete') },
			{ json: 'scarfStyle', js: 'scarfStyle', typ: r('Athlete') },
			{ json: 'hatStyle', js: 'hatStyle', typ: r('Athlete') },
			{ json: 'hatSize', js: 'hatSize', typ: r('Locale') },
			{ json: 'braStyle', js: 'braStyle', typ: r('Athlete') },
			{ json: 'braSize', js: 'braSize', typ: r('FeedDate') },
			{ json: 'braBandSize', js: 'braBandSize', typ: r('AssembledProductHeight') },
			{ json: 'braCupSize', js: 'braCupSize', typ: r('FeedDate') },
			{ json: 'upperBodyStrapConfiguration', js: 'upperBodyStrapConfiguration', typ: r('Athlete') },
			{ json: 'chestSize', js: 'chestSize', typ: r('AssembledProductHeight') },
			{ json: 'pantySize', js: 'pantySize', typ: r('Locale') },
			{ json: 'pantRise', js: 'pantRise', typ: r('FeedDate') },
			{ json: 'waistStyle', js: 'waistStyle', typ: r('CountryOfOriginAssembly') },
			{ json: 'waistSize', js: 'waistSize', typ: r('AssembledProductHeight') },
			{ json: 'skirtLength', js: 'skirtLength', typ: r('AssembledProductHeight') },
			{ json: 'legOpeningCut', js: 'legOpeningCut', typ: r('Locale') },
			{ json: 'pantLegCut', js: 'pantLegCut', typ: r('Locale') },
			{ json: 'inseam', js: 'inseam', typ: r('AssembledProductHeight') },
			{ json: 'jeanStyle', js: 'jeanStyle', typ: r('Athlete') },
			{ json: 'jeanWash', js: 'jeanWash', typ: r('FeedDate') },
			{ json: 'jeanFinish', js: 'jeanFinish', typ: r('Athlete') },
			{ json: 'pantSize', js: 'pantSize', typ: r('FeedDate') },
			{ json: 'pantFit', js: 'pantFit', typ: r('Athlete') },
			{ json: 'pantStyle', js: 'pantStyle', typ: r('FeedDate') },
			{ json: 'beltStyle', js: 'beltStyle', typ: r('Athlete') },
			{ json: 'beltBuckleStyle', js: 'beltBuckleStyle', typ: r('FeedDate') },
			{ json: 'shortsStyle', js: 'shortsStyle', typ: r('Athlete') },
			{ json: 'skirtAndDressCut', js: 'skirtAndDressCut', typ: r('Athlete') },
			{ json: 'skirtLengthStyle', js: 'skirtLengthStyle', typ: r('FeedDate') },
			{ json: 'hosieryStyle', js: 'hosieryStyle', typ: r('Athlete') },
			{ json: 'tightsSheerness', js: 'tightsSheerness', typ: r('Locale') },
			{ json: 'pantyStyle', js: 'pantyStyle', typ: r('FeedDate') },
			{ json: 'underwearStyle', js: 'underwearStyle', typ: r('Athlete') },
			{ json: 'underpantsType', js: 'underpantsType', typ: r('FeedDate') },
			{ json: 'sockSize', js: 'sockSize', typ: r('FeedDate') },
			{ json: 'sockStyle', js: 'sockStyle', typ: r('FeedDate') },
			{ json: 'sockRise', js: 'sockRise', typ: r('Locale') },
			{ json: 'shoeSize', js: 'shoeSize', typ: r('FeedDate') },
			{ json: 'accentColor', js: 'accentColor', typ: r('FeedDate') },
			{ json: 'fastenerType', js: 'fastenerType', typ: r('FeedDate') },
			{ json: 'swimsuitStyle', js: 'swimsuitStyle', typ: r('FeedDate') },
			{ json: 'dressStyle', js: 'dressStyle', typ: r('FeedDate') },
			{ json: 'pajamaType', js: 'pajamaType', typ: r('FeedDate') },
			{ json: 'outerwearCoatJacketAnVestType', js: 'outerwearCoatJacketAnVestType', typ: r('FeedDate') },
			{ json: 'gotsCertification', js: 'gotsCertification', typ: r('Locale') },
			{ json: 'theme', js: 'theme', typ: r('Athlete') },
			{ json: 'occasion', js: 'occasion', typ: r('Athlete') },
			{ json: 'activity', js: 'activity', typ: r('Athlete') },
			{ json: 'sport', js: 'sport', typ: r('Athlete') },
			{ json: 'season', js: 'season', typ: r('Athlete') },
			{ json: 'weather', js: 'weather', typ: r('Athlete') },
			{ json: 'isMaternity', js: 'isMaternity', typ: r('Locale') },
			{ json: 'academicInstitution', js: 'academicInstitution', typ: r('FeedDate') },
			{ json: 'autographedBy', js: 'autographedBy', typ: r('FeedDate') },
			{ json: 'recycledMaterialContent', js: 'recycledMaterialContent', typ: r('RecycledMaterialContent') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'character', js: 'character', typ: r('Athlete') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'sportsLeague', js: 'sportsLeague', typ: r('Athlete') },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: r('Athlete') },
			{ json: 'athlete', js: 'athlete', typ: r('Athlete') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
			{ json: 'seasonYear', js: 'seasonYear', typ: r('NumberOfHazardousComponents') },
			{ json: 'seasonCode', js: 'seasonCode', typ: r('Locale') },
		],
		false
	),
	ComputerComponents: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('ComputerComponentsProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	ComputerComponentsProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'hardDriveCapacity', js: 'hardDriveCapacity', typ: r('AssembledProductHeight') },
			{ json: 'ramMemory', js: 'ramMemory', typ: r('AssembledProductHeight') },
			{ json: 'RAMSpeed', js: 'RAMSpeed', typ: r('FeedDate') },
			{ json: 'maximumRamSupported', js: 'maximumRamSupported', typ: r('AssembledProductHeight') },
			{ json: 'internalExternal', js: 'internalExternal', typ: r('Locale') },
			{ json: 'processorSpeed', js: 'processorSpeed', typ: r('AssembledProductHeight') },
			{ json: 'processorType', js: 'processorType', typ: r('Athlete') },
			{ json: 'connections', js: 'connections', typ: r('Athlete') },
			{ json: 'isCordless', js: 'isCordless', typ: r('Locale') },
			{ json: 'memoryCardType', js: 'memoryCardType', typ: r('Athlete') },
			{ json: 'cpuSocketType', js: 'cpuSocketType', typ: r('Athlete') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'motherboardFormFactor', js: 'motherboardFormFactor', typ: r('Athlete') },
			{ json: 'resolution', js: 'resolution', typ: r('FeedDate') },
			{ json: 'cableLength', js: 'cableLength', typ: r('AssembledProductHeight') },
			{ json: 'screenSize', js: 'screenSize', typ: r('AssembledProductHeight') },
			{ json: 'wirelessTechnologies', js: 'wirelessTechnologies', typ: r('Athlete') },
			{ json: 'dataIntegrityCheck', js: 'dataIntegrityCheck', typ: r('Locale') },
			{ json: 'numberOfKeys', js: 'numberOfKeys', typ: r('NumberOfHazardousComponents') },
			{ json: 'numberOfSpeakers', js: 'numberOfSpeakers', typ: r('NumberOfHazardousComponents') },
			{ json: 'rackSize', js: 'rackSize', typ: r('FeedDate') },
			{ json: 'RAIDlevel', js: 'RAIDlevel', typ: r('Locale') },
			{ json: 'mountType', js: 'mountType', typ: r('Athlete') },
			{ json: 'edition', js: 'edition', typ: r('FeedDate') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'numberOfChannels', js: 'numberOfChannels', typ: r('FeedDate') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	Computers: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('ComputersProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	ComputersProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'screenSize', js: 'screenSize', typ: r('AssembledProductHeight') },
			{ json: 'resolution', js: 'resolution', typ: r('FeedDate') },
			{ json: 'displayTechnology', js: 'displayTechnology', typ: r('FeedDate') },
			{ json: 'hardDriveCapacity', js: 'hardDriveCapacity', typ: r('AssembledProductHeight') },
			{ json: 'ramMemory', js: 'ramMemory', typ: r('AssembledProductHeight') },
			{ json: 'RAMSpeed', js: 'RAMSpeed', typ: r('FeedDate') },
			{ json: 'maximumRamSupported', js: 'maximumRamSupported', typ: r('AssembledProductHeight') },
			{ json: 'internalExternal', js: 'internalExternal', typ: r('Locale') },
			{ json: 'processorSpeed', js: 'processorSpeed', typ: r('AssembledProductHeight') },
			{ json: 'processorType', js: 'processorType', typ: r('Athlete') },
			{ json: 'computerStyle', js: 'computerStyle', typ: r('FeedDate') },
			{
				json: 'frontFacingCameraMegapixels',
				js: 'frontFacingCameraMegapixels',
				typ: r('AssembledProductHeight'),
			},
			{ json: 'rearCameraMegapixels', js: 'rearCameraMegapixels', typ: r('AssembledProductHeight') },
			{ json: 'operatingSystem', js: 'operatingSystem', typ: r('Athlete') },
			{ json: 'hasTouchscreen', js: 'hasTouchscreen', typ: r('Locale') },
			{ json: 'connections', js: 'connections', typ: r('Athlete') },
			{ json: 'memoryCardType', js: 'memoryCardType', typ: r('Athlete') },
			{ json: 'opticalDrive', js: 'opticalDrive', typ: r('FeedDate') },
			{ json: 'graphicsInformation', js: 'graphicsInformation', typ: r('FeedDate') },
			{ json: 'formFactor', js: 'formFactor', typ: r('FeedDate') },
			{ json: 'hasSignalBooster', js: 'hasSignalBooster', typ: r('Locale') },
			{ json: 'wirelessTechnologies', js: 'wirelessTechnologies', typ: r('Athlete') },
			{ json: 'batteryLife', js: 'batteryLife', typ: r('AssembledProductHeight') },
			{ json: 'RAIDlevel', js: 'RAIDlevel', typ: r('Locale') },
			{ json: 'numberOfKeys', js: 'numberOfKeys', typ: r('NumberOfHazardousComponents') },
			{ json: 'mountType', js: 'mountType', typ: r('Athlete') },
			{ json: 'dataIntegrityCheck', js: 'dataIntegrityCheck', typ: r('Locale') },
			{ json: 'isPortable', js: 'isPortable', typ: r('Locale') },
			{ json: 'edition', js: 'edition', typ: r('FeedDate') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'numberOfChannels', js: 'numberOfChannels', typ: r('FeedDate') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	Cycling: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('CyclingProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	CyclingProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'smallPartsWarnings', js: 'smallPartsWarnings', typ: r('CountryOfOriginAssembly') },
			{ json: 'countryOfOriginTextiles', js: 'countryOfOriginTextiles', typ: r('Locale') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'gender', js: 'gender', typ: r('Locale') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'minimumRecommendedAge', js: 'minimumRecommendedAge', typ: r('AssembledProductHeight') },
			{ json: 'maximumRecommendedAge', js: 'maximumRecommendedAge', typ: r('AssembledProductHeight') },
			{ json: 'sport', js: 'sport', typ: r('Athlete') },
			{ json: 'bicycleFrameSize', js: 'bicycleFrameSize', typ: r('AssembledProductHeight') },
			{ json: 'bicycleWheelDiameter', js: 'bicycleWheelDiameter', typ: r('AssembledProductHeight') },
			{ json: 'bicycleTireSize', js: 'bicycleTireSize', typ: r('FeedDate') },
			{ json: 'numberOfSpeeds', js: 'numberOfSpeeds', typ: r('NumberOfHazardousComponents') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'clothingSize', js: 'clothingSize', typ: r('FeedDate') },
			{ json: 'fabricContent', js: 'fabricContent', typ: r('FabricContent') },
			{ json: 'fabricCareInstructions', js: 'fabricCareInstructions', typ: r('Athlete') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'pattern', js: 'pattern', typ: r('Athlete') },
			{ json: 'isWeatherResistant', js: 'isWeatherResistant', typ: r('Locale') },
			{ json: 'isFoldable', js: 'isFoldable', typ: r('Locale') },
			{ json: 'season', js: 'season', typ: r('Athlete') },
			{ json: 'isWaterproof', js: 'isWaterproof', typ: r('Locale') },
			{ json: 'isPowered', js: 'isPowered', typ: r('Locale') },
			{ json: 'isAssemblyRequired', js: 'isAssemblyRequired', typ: r('Locale') },
			{ json: 'assemblyInstructions', js: 'assemblyInstructions', typ: r('FeedDate') },
			{ json: 'dexterity', js: 'dexterity', typ: r('FeedDate') },
			{ json: 'finish', js: 'finish', typ: r('FeedDate') },
			{ json: 'shape', js: 'shape', typ: r('FeedDate') },
			{ json: 'capacity', js: 'capacity', typ: r('FeedDate') },
			{ json: 'seatingCapacity', js: 'seatingCapacity', typ: r('NumberOfHazardousComponents') },
			{ json: 'maximumWeight', js: 'maximumWeight', typ: r('AssembledProductHeight') },
			{ json: 'wirelessTechnologies', js: 'wirelessTechnologies', typ: r('Athlete') },
			{ json: 'isPortable', js: 'isPortable', typ: r('Locale') },
			{ json: 'powerType', js: 'powerType', typ: r('FeedDate') },
			{ json: 'lightBulbType', js: 'lightBulbType', typ: r('FeedDate') },
			{ json: 'horsepower', js: 'horsepower', typ: r('AssembledProductHeight') },
			{ json: 'tireDiameter', js: 'tireDiameter', typ: r('AssembledProductHeight') },
			{ json: 'cleaningCareAndMaintenance', js: 'cleaningCareAndMaintenance', typ: r('FeedDate') },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: r('Athlete') },
			{ json: 'recommendedLocations', js: 'recommendedLocations', typ: r('Athlete') },
			{ json: 'lockType', js: 'lockType', typ: r('FeedDate') },
			{ json: 'lockingMechanism', js: 'lockingMechanism', typ: r('FeedDate') },
			{ json: 'sportsLeague', js: 'sportsLeague', typ: r('Athlete') },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: r('Athlete') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'character', js: 'character', typ: r('Athlete') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'athlete', js: 'athlete', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	DecorationsFavors: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('DecorationsFavorsProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	DecorationsFavorsProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'smallPartsWarnings', js: 'smallPartsWarnings', typ: r('CountryOfOriginAssembly') },
			{ json: 'compositeWoodCertificationCode', js: 'compositeWoodCertificationCode', typ: r('Locale') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'finish', js: 'finish', typ: r('FeedDate') },
			{ json: 'pattern', js: 'pattern', typ: r('Athlete') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'diameter', js: 'diameter', typ: r('AssembledProductHeight') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'shape', js: 'shape', typ: r('FeedDate') },
			{ json: 'occasion', js: 'occasion', typ: r('Athlete') },
			{ json: 'holidayLightingStyle', js: 'holidayLightingStyle', typ: r('Athlete') },
			{ json: 'lightBulbType', js: 'lightBulbType', typ: r('FeedDate') },
			{ json: 'lightBulbColor', js: 'lightBulbColor', typ: r('FeedDate') },
			{ json: 'numberOfLights', js: 'numberOfLights', typ: r('NumberOfHazardousComponents') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'isAssemblyRequired', js: 'isAssemblyRequired', typ: r('Locale') },
			{ json: 'assemblyInstructions', js: 'assemblyInstructions', typ: r('FeedDate') },
			{ json: 'powerType', js: 'powerType', typ: r('FeedDate') },
			{ json: 'watts', js: 'watts', typ: r('AssembledProductHeight') },
			{ json: 'isInflatable', js: 'isInflatable', typ: r('Locale') },
			{ json: 'isAnimated', js: 'isAnimated', typ: r('Locale') },
			{ json: 'isAdultProduct', js: 'isAdultProduct', typ: r('Locale') },
			{ json: 'theme', js: 'theme', typ: r('Athlete') },
			{ json: 'character', js: 'character', typ: r('Athlete') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'gender', js: 'gender', typ: r('Locale') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'sportsLeague', js: 'sportsLeague', typ: r('Athlete') },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: r('Athlete') },
			{ json: 'autographedBy', js: 'autographedBy', typ: r('FeedDate') },
			{ json: 'athlete', js: 'athlete', typ: r('Athlete') },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: r('Athlete') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	Electrical: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('ElectricalProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	ElectricalProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'baseColor', js: 'baseColor', typ: r('FeedDate') },
			{ json: 'baseFinish', js: 'baseFinish', typ: r('FeedDate') },
			{ json: 'finish', js: 'finish', typ: r('FeedDate') },
			{ json: 'pattern', js: 'pattern', typ: r('Athlete') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'shape', js: 'shape', typ: r('FeedDate') },
			{ json: 'homeDecorStyle', js: 'homeDecorStyle', typ: r('FeedDate') },
			{ json: 'isEnergyStarCertified', js: 'isEnergyStarCertified', typ: r('Locale') },
			{ json: 'maximumEnergySurgeRating', js: 'maximumEnergySurgeRating', typ: r('FeedDate') },
			{ json: 'estimatedEnergyCostPerYear', js: 'estimatedEnergyCostPerYear', typ: r('AssembledProductHeight') },
			{ json: 'maximumRange', js: 'maximumRange', typ: r('FeedDate') },
			{ json: 'lightBulbColor', js: 'lightBulbColor', typ: r('FeedDate') },
			{ json: 'powerType', js: 'powerType', typ: r('FeedDate') },
			{ json: 'volts', js: 'volts', typ: r('CompatibleConduitSizes') },
			{ json: 'amps', js: 'amps', typ: r('AssembledProductHeight') },
			{ json: 'watts', js: 'watts', typ: r('AssembledProductHeight') },
			{ json: 'compatibleConduitSizes', js: 'compatibleConduitSizes', typ: r('CompatibleConduitSizes') },
			{ json: 'electricalBallastFactor', js: 'electricalBallastFactor', typ: r('NumberOfHazardousComponents') },
			{ json: 'numberOfLights', js: 'numberOfLights', typ: r('NumberOfHazardousComponents') },
			{ json: 'shadeMaterial', js: 'shadeMaterial', typ: r('FeedDate') },
			{ json: 'shadeStyle', js: 'shadeStyle', typ: r('FeedDate') },
			{ json: 'beamAngle', js: 'beamAngle', typ: r('AssembledProductHeight') },
			{ json: 'beamSpread', js: 'beamSpread', typ: r('AssembledProductHeight') },
			{ json: 'conductorMaterial', js: 'conductorMaterial', typ: r('FeedDate') },
			{ json: 'impedance', js: 'impedance', typ: r('FocalLength') },
			{ json: 'isDarkSkyCompliant', js: 'isDarkSkyCompliant', typ: r('Locale') },
			{ json: 'colorTemperature', js: 'colorTemperature', typ: r('AssembledProductHeight') },
			{ json: 'numberOfGangs', js: 'numberOfGangs', typ: r('NumberOfHazardousComponents') },
			{ json: 'numberOfPoles', js: 'numberOfPoles', typ: r('NumberOfHazardousComponents') },
			{ json: 'responseTime', js: 'responseTime', typ: r('AssembledProductHeight') },
			{ json: 'americanWireGauge', js: 'americanWireGauge', typ: r('NumberOfHazardousComponents') },
			{ json: 'mountType', js: 'mountType', typ: r('Athlete') },
			{ json: 'isRatedForOutdoorUse', js: 'isRatedForOutdoorUse', typ: r('Locale') },
			{ json: 'lifespan', js: 'lifespan', typ: r('FeedDate') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'brightness', js: 'brightness', typ: r('AssembledProductHeight') },
			{ json: 'lightBulbType', js: 'lightBulbType', typ: r('FeedDate') },
			{ json: 'lightBulbShape', js: 'lightBulbShape', typ: r('Locale') },
			{ json: 'lightBulbBaseType', js: 'lightBulbBaseType', typ: r('Locale') },
			{ json: 'isFireResistant', js: 'isFireResistant', typ: r('Locale') },
			{ json: 'isWaterproof', js: 'isWaterproof', typ: r('Locale') },
			{ json: 'decibelRating', js: 'decibelRating', typ: r('AssembledProductHeight') },
			{ json: 'accessoriesIncluded', js: 'accessoriesIncluded', typ: r('Athlete') },
			{ json: 'horsepower', js: 'horsepower', typ: r('AssembledProductHeight') },
			{ json: 'character', js: 'character', typ: r('Athlete') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'sportsLeague', js: 'sportsLeague', typ: r('Athlete') },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: r('Athlete') },
			{ json: 'athlete', js: 'athlete', typ: r('Athlete') },
			{ json: 'cleaningCareAndMaintenance', js: 'cleaningCareAndMaintenance', typ: r('FeedDate') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: r('Athlete') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	CompatibleConduitSizes: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('SafetyDataSheetType') },
			{ json: 'title', js: 'title', typ: '' },
			{ json: 'items', js: 'items', typ: r('AssembledProductHeight') },
			{ json: 'minItems', js: 'minItems', typ: 0 },
		],
		false
	),
	ElectronicsAccessories: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('ElectronicsAccessoriesProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	ElectronicsAccessoriesProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'screenSize', js: 'screenSize', typ: r('AssembledProductHeight') },
			{ json: 'compatibleBrands', js: 'compatibleBrands', typ: r('Athlete') },
			{ json: 'compatibleDevices', js: 'compatibleDevices', typ: r('Athlete') },
			{ json: 'compatibleModels', js: 'compatibleModels', typ: r('Athlete') },
			{ json: 'connections', js: 'connections', typ: r('Athlete') },
			{ json: 'hardDriveCapacity', js: 'hardDriveCapacity', typ: r('AssembledProductHeight') },
			{ json: 'memoryCardType', js: 'memoryCardType', typ: r('Athlete') },
			{ json: 'opticalDrive', js: 'opticalDrive', typ: r('FeedDate') },
			{ json: 'tvAndMonitorMountType', js: 'tvAndMonitorMountType', typ: r('FeedDate') },
			{ json: 'maximumLoadWeight', js: 'maximumLoadWeight', typ: r('AssembledProductHeight') },
			{ json: 'minimumScreenSize', js: 'minimumScreenSize', typ: r('AssembledProductHeight') },
			{ json: 'maximumScreenSize', js: 'maximumScreenSize', typ: r('AssembledProductHeight') },
			{ json: 'recordableMediaFormats', js: 'recordableMediaFormats', typ: r('Athlete') },
			{ json: 'headphoneFeatures', js: 'headphoneFeatures', typ: r('Athlete') },
			{ json: 'wirelessTechnologies', js: 'wirelessTechnologies', typ: r('Athlete') },
			{ json: 'audioFeatures', js: 'audioFeatures', typ: r('Athlete') },
			{ json: 'peakAudioPowerCapacity', js: 'peakAudioPowerCapacity', typ: r('AssembledProductHeight') },
			{ json: 'audioPowerOutput', js: 'audioPowerOutput', typ: r('FeedDate') },
			{ json: 'dataTransferRate', js: 'dataTransferRate', typ: r('FeedDate') },
			{ json: 'microphoneTechnology', js: 'microphoneTechnology', typ: r('FeedDate') },
			{ json: 'numberOfKeys', js: 'numberOfKeys', typ: r('NumberOfHazardousComponents') },
			{ json: 'numberOfSpeakers', js: 'numberOfSpeakers', typ: r('NumberOfHazardousComponents') },
			{ json: 'resolution', js: 'resolution', typ: r('FeedDate') },
			{ json: 'mountingPattern', js: 'mountingPattern', typ: r('FeedDate') },
			{ json: 'cableLength', js: 'cableLength', typ: r('AssembledProductHeight') },
			{ json: 'movementDetection', js: 'movementDetection', typ: r('FeedDate') },
			{ json: 'headphoneStyle', js: 'headphoneStyle', typ: r('Locale') },
			{ json: 'edition', js: 'edition', typ: r('FeedDate') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	ElectronicsCables: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('ElectronicsCablesProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	ElectronicsCablesProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'cableLength', js: 'cableLength', typ: r('AssembledProductHeight') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'compatibleDevices', js: 'compatibleDevices', typ: r('Athlete') },
			{
				json: 'numberOfTwistedPairsPerCable',
				js: 'numberOfTwistedPairsPerCable',
				typ: r('NumberOfHazardousComponents'),
			},
			{ json: 'connectorFinish', js: 'connectorFinish', typ: r('FeedDate') },
			{ json: 'connections', js: 'connections', typ: r('Athlete') },
			{ json: 'dataTransferRate', js: 'dataTransferRate', typ: r('FeedDate') },
			{ json: 'numberOfChannels', js: 'numberOfChannels', typ: r('FeedDate') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	ElectronicsOther: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('ElectronicsOtherProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	ElectronicsOtherProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'inflexKitComponent', js: 'inflexKitComponent', typ: r('Locale') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'platform', js: 'platform', typ: r('FeedDate') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'isSmart', js: 'isSmart', typ: r('Locale') },
			{ json: 'isCordless', js: 'isCordless', typ: r('Locale') },
			{ json: 'connections', js: 'connections', typ: r('Athlete') },
			{ json: 'hardDriveCapacity', js: 'hardDriveCapacity', typ: r('AssembledProductHeight') },
			{ json: 'memoryCardType', js: 'memoryCardType', typ: r('Athlete') },
			{ json: 'wirelessTechnologies', js: 'wirelessTechnologies', typ: r('Athlete') },
			{ json: 'audioFeatures', js: 'audioFeatures', typ: r('Athlete') },
			{ json: 'peakAudioPowerCapacity', js: 'peakAudioPowerCapacity', typ: r('AssembledProductHeight') },
			{ json: 'audioPowerOutput', js: 'audioPowerOutput', typ: r('FeedDate') },
			{ json: 'resolution', js: 'resolution', typ: r('FeedDate') },
			{ json: 'dataTransferRate', js: 'dataTransferRate', typ: r('FeedDate') },
			{ json: 'streamingServices', js: 'streamingServices', typ: r('FeedDate') },
			{ json: 'speakerDriver', js: 'speakerDriver', typ: r('FeedDate') },
			{ json: 'numberOfSpeakers', js: 'numberOfSpeakers', typ: r('NumberOfHazardousComponents') },
			{ json: 'impedance', js: 'impedance', typ: r('FocalLength') },
			{ json: 'microphoneTechnology', js: 'microphoneTechnology', typ: r('FeedDate') },
			{ json: 'digitalAudioFileFormat', js: 'digitalAudioFileFormat', typ: r('Athlete') },
			{ json: 'babyMonitorType', js: 'babyMonitorType', typ: r('Athlete') },
			{ json: 'isPortable', js: 'isPortable', typ: r('Locale') },
			{ json: 'numberOfChannels', js: 'numberOfChannels', typ: r('FeedDate') },
			{ json: 'supportedMediaFormats', js: 'supportedMediaFormats', typ: r('FeedDate') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	Footwear: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('FootwearProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	FootwearProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'shoeSize', js: 'shoeSize', typ: r('FeedDate') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'countryOfOriginTextiles', js: 'countryOfOriginTextiles', typ: r('Locale') },
			{ json: 'smallPartsWarnings', js: 'smallPartsWarnings', typ: r('CountryOfOriginAssembly') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'gender', js: 'gender', typ: r('Locale') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'shoeCategory', js: 'shoeCategory', typ: r('Locale') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'shoeWidth', js: 'shoeWidth', typ: r('FeedDate') },
			{ json: 'shoeSizeSystem', js: 'shoeSizeSystem', typ: r('Locale') },
			{ json: 'pattern', js: 'pattern', typ: r('Athlete') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'activity', js: 'activity', typ: r('Athlete') },
			{ json: 'heelHeight', js: 'heelHeight', typ: r('AssembledProductHeight') },
			{ json: 'shoeStyle', js: 'shoeStyle', typ: r('FeedDate') },
			{ json: 'casualAndDressShoeType', js: 'casualAndDressShoeType', typ: r('FeedDate') },
			{ json: 'shoeClosure', js: 'shoeClosure', typ: r('FeedDate') },
			{ json: 'collection', js: 'collection', typ: r('FeedDate') },
			{ json: 'secondaryMaterial', js: 'secondaryMaterial', typ: r('Athlete') },
			{ json: 'shoeSoleMaterial', js: 'shoeSoleMaterial', typ: r('FeedDate') },
			{ json: 'insoleFeature', js: 'insoleFeature', typ: r('Athlete') },
			{ json: 'fabricContent', js: 'fabricContent', typ: r('FabricContent') },
			{ json: 'fabricCareInstructions', js: 'fabricCareInstructions', typ: r('Athlete') },
			{ json: 'heelDrop', js: 'heelDrop', typ: r('AssembledProductHeight') },
			{ json: 'footwearHeelStyle', js: 'footwearHeelStyle', typ: r('FeedDate') },
			{ json: 'toeStyle', js: 'toeStyle', typ: r('FeedDate') },
			{ json: 'embellishmentType', js: 'embellishmentType', typ: r('Athlete') },
			{ json: 'bootShaftHeight', js: 'bootShaftHeight', typ: r('CompatibleConduitSizes') },
			{ json: 'bootShaftCircumference', js: 'bootShaftCircumference', typ: r('CompatibleConduitSizes') },
			{ json: 'bootShaftStyle', js: 'bootShaftStyle', typ: r('Athlete') },
			{ json: 'bootShaftWidthStyle', js: 'bootShaftWidthStyle', typ: r('Athlete') },
			{ json: 'season', js: 'season', typ: r('Athlete') },
			{ json: 'occasion', js: 'occasion', typ: r('Athlete') },
			{ json: 'recommendedLocations', js: 'recommendedLocations', typ: r('Athlete') },
			{ json: 'isWaterResistant', js: 'isWaterResistant', typ: r('Locale') },
			{ json: 'isOrthopedic', js: 'isOrthopedic', typ: r('Locale') },
			{ json: 'healthConcerns', js: 'healthConcerns', typ: r('Athlete') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'character', js: 'character', typ: r('Athlete') },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: r('Athlete') },
			{ json: 'sportsLeague', js: 'sportsLeague', typ: r('Athlete') },
			{ json: 'athlete', js: 'athlete', typ: r('Athlete') },
			{ json: 'autographedBy', js: 'autographedBy', typ: r('FeedDate') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
			{ json: 'seasonYear', js: 'seasonYear', typ: r('NumberOfHazardousComponents') },
			{ json: 'seasonCode', js: 'seasonCode', typ: r('Locale') },
		],
		false
	),
	FuelsLubricants: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('FuelsLubricantsProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	FuelsLubricantsProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'fuelType', js: 'fuelType', typ: r('FeedDate') },
			{ json: 'fluidOunces', js: 'fluidOunces', typ: r('AssembledProductHeight') },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: r('Athlete') },
			{ json: 'shelfLife', js: 'shelfLife', typ: r('AssembledProductHeight') },
			{ json: 'instructions', js: 'instructions', typ: r('FeedDate') },
			{ json: 'form', js: 'form', typ: r('FeedDate') },
			{ json: 'isFlammable', js: 'isFlammable', typ: r('Locale') },
			{ json: 'isCombustible', js: 'isCombustible', typ: r('Locale') },
			{ json: 'isBiodegradable', js: 'isBiodegradable', typ: r('Locale') },
			{ json: 'isEnergyStarCertified', js: 'isEnergyStarCertified', typ: r('Locale') },
			{ json: 'isRefillable', js: 'isRefillable', typ: r('Locale') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'systemOfMeasurement', js: 'systemOfMeasurement', typ: r('FeedDate') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	Furniture: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('FurnitureProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	FurnitureProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'countryOfOriginTextiles', js: 'countryOfOriginTextiles', typ: r('Locale') },
			{ json: 'compositeWoodCertificationCode', js: 'compositeWoodCertificationCode', typ: r('Locale') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'inflexKitComponent', js: 'inflexKitComponent', typ: r('Locale') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'finish', js: 'finish', typ: r('FeedDate') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'pattern', js: 'pattern', typ: r('Athlete') },
			{ json: 'lightingFactsLabel', js: 'lightingFactsLabel', typ: r('FeedDate') },
			{ json: 'gender', js: 'gender', typ: r('Locale') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'bedSize', js: 'bedSize', typ: r('FeedDate') },
			{ json: 'homeDecorStyle', js: 'homeDecorStyle', typ: r('FeedDate') },
			{ json: 'seatingCapacity', js: 'seatingCapacity', typ: r('NumberOfHazardousComponents') },
			{ json: 'numberOfDrawers', js: 'numberOfDrawers', typ: r('NumberOfHazardousComponents') },
			{ json: 'numberOfShelves', js: 'numberOfShelves', typ: r('NumberOfHazardousComponents') },
			{ json: 'collection', js: 'collection', typ: r('FeedDate') },
			{ json: 'theme', js: 'theme', typ: r('Athlete') },
			{ json: 'shape', js: 'shape', typ: r('FeedDate') },
			{ json: 'diameter', js: 'diameter', typ: r('AssembledProductHeight') },
			{ json: 'bedStyle', js: 'bedStyle', typ: r('FeedDate') },
			{ json: 'mountType', js: 'mountType', typ: r('Athlete') },
			{ json: 'isAssemblyRequired', js: 'isAssemblyRequired', typ: r('Locale') },
			{ json: 'assemblyInstructions', js: 'assemblyInstructions', typ: r('FeedDate') },
			{ json: 'fabricContent', js: 'fabricContent', typ: r('FabricContent') },
			{ json: 'fabricCareInstructions', js: 'fabricCareInstructions', typ: r('Athlete') },
			{ json: 'configuration', js: 'configuration', typ: r('FeedDate') },
			{ json: 'fabricColor', js: 'fabricColor', typ: r('FeedDate') },
			{ json: 'accentColor', js: 'accentColor', typ: r('FeedDate') },
			{ json: 'cushionColor', js: 'cushionColor', typ: r('FeedDate') },
			{ json: 'numberOfPanels', js: 'numberOfPanels', typ: r('NumberOfHazardousComponents') },
			{ json: 'seatBackStyle', js: 'seatBackStyle', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'powerType', js: 'powerType', typ: r('FeedDate') },
			{ json: 'isPowered', js: 'isPowered', typ: r('Locale') },
			{ json: 'autographedBy', js: 'autographedBy', typ: r('FeedDate') },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: r('Athlete') },
			{ json: 'recommendedRooms', js: 'recommendedRooms', typ: r('Athlete') },
			{ json: 'recommendedLocations', js: 'recommendedLocations', typ: r('Athlete') },
			{ json: 'mattressFirmness', js: 'mattressFirmness', typ: r('FeedDate') },
			{ json: 'mattressThickness', js: 'mattressThickness', typ: r('AssembledProductHeight') },
			{ json: 'pumpIncluded', js: 'pumpIncluded', typ: r('Locale') },
			{ json: 'fillMaterial', js: 'fillMaterial', typ: r('Athlete') },
			{ json: 'frameMaterial', js: 'frameMaterial', typ: r('Athlete') },
			{ json: 'seatMaterial', js: 'seatMaterial', typ: r('FeedDate') },
			{ json: 'seatHeight', js: 'seatHeight', typ: r('AssembledProductHeight') },
			{ json: 'seatBackHeight', js: 'seatBackHeight', typ: r('AssembledProductHeight') },
			{ json: 'tableHeight', js: 'tableHeight', typ: r('AssembledProductHeight') },
			{ json: 'topMaterial', js: 'topMaterial', typ: r('FeedDate') },
			{ json: 'topDimensions', js: 'topDimensions', typ: r('FeedDate') },
			{ json: 'topFinish', js: 'topFinish', typ: r('FeedDate') },
			{ json: 'hardwareFinish', js: 'hardwareFinish', typ: r('FeedDate') },
			{ json: 'baseMaterial', js: 'baseMaterial', typ: r('FeedDate') },
			{ json: 'baseColor', js: 'baseColor', typ: r('FeedDate') },
			{ json: 'baseFinish', js: 'baseFinish', typ: r('FeedDate') },
			{ json: 'doorOpeningStyle', js: 'doorOpeningStyle', typ: r('FeedDate') },
			{ json: 'doorStyle', js: 'doorStyle', typ: r('FeedDate') },
			{ json: 'slatWidth', js: 'slatWidth', typ: r('AssembledProductHeight') },
			{ json: 'numberOfHooks', js: 'numberOfHooks', typ: r('NumberOfHazardousComponents') },
			{ json: 'headboardStyle', js: 'headboardStyle', typ: r('FeedDate') },
			{ json: 'frameColor', js: 'frameColor', typ: r('FeedDate') },
			{ json: 'isAntique', js: 'isAntique', typ: r('Locale') },
			{ json: 'isFoldable', js: 'isFoldable', typ: r('Locale') },
			{ json: 'isInflatable', js: 'isInflatable', typ: r('Locale') },
			{ json: 'isWheeled', js: 'isWheeled', typ: r('Locale') },
			{ json: 'isIndustrial', js: 'isIndustrial', typ: r('Locale') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: r('Athlete') },
			{ json: 'character', js: 'character', typ: r('Athlete') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	GardenPatio: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('GardenPatioProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	GardenPatioProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'countryOfOriginTextiles', js: 'countryOfOriginTextiles', typ: r('Locale') },
			{ json: 'compositeWoodCertificationCode', js: 'compositeWoodCertificationCode', typ: r('Locale') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'inflexKitComponent', js: 'inflexKitComponent', typ: r('Locale') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'homeDecorStyle', js: 'homeDecorStyle', typ: r('FeedDate') },
			{ json: 'plantCategory', js: 'plantCategory', typ: r('FeedDate') },
			{ json: 'minimumTemperature', js: 'minimumTemperature', typ: r('AssembledProductHeight') },
			{ json: 'season', js: 'season', typ: r('Athlete') },
			{ json: 'occasion', js: 'occasion', typ: r('Athlete') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'pattern', js: 'pattern', typ: r('Athlete') },
			{ json: 'finish', js: 'finish', typ: r('FeedDate') },
			{ json: 'shape', js: 'shape', typ: r('FeedDate') },
			{ json: 'theme', js: 'theme', typ: r('Athlete') },
			{ json: 'fabricContent', js: 'fabricContent', typ: r('FabricContent') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'frameMaterial', js: 'frameMaterial', typ: r('Athlete') },
			{ json: 'baseMaterial', js: 'baseMaterial', typ: r('FeedDate') },
			{ json: 'isAntique', js: 'isAntique', typ: r('Locale') },
			{ json: 'isFoldable', js: 'isFoldable', typ: r('Locale') },
			{ json: 'isWheeled', js: 'isWheeled', typ: r('Locale') },
			{ json: 'isWeatherResistant', js: 'isWeatherResistant', typ: r('Locale') },
			{ json: 'isWaterproof', js: 'isWaterproof', typ: r('Locale') },
			{ json: 'isTearResistant', js: 'isTearResistant', typ: r('Locale') },
			{ json: 'powerType', js: 'powerType', typ: r('FeedDate') },
			{ json: 'lightBulbType', js: 'lightBulbType', typ: r('FeedDate') },
			{ json: 'lightBulbColor', js: 'lightBulbColor', typ: r('FeedDate') },
			{ json: 'volts', js: 'volts', typ: r('CompatibleConduitSizes') },
			{ json: 'watts', js: 'watts', typ: r('AssembledProductHeight') },
			{ json: 'cuttingWidth', js: 'cuttingWidth', typ: r('FeedDate') },
			{ json: 'clearingWidth', js: 'clearingWidth', typ: r('AssembledProductHeight') },
			{ json: 'sprayPatterns', js: 'sprayPatterns', typ: r('FeedDate') },
			{ json: 'fuelType', js: 'fuelType', typ: r('FeedDate') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: r('Athlete') },
			{ json: 'recommendedLocations', js: 'recommendedLocations', typ: r('Athlete') },
			{ json: 'isBulk', js: 'isBulk', typ: r('Locale') },
			{ json: 'diameter', js: 'diameter', typ: r('AssembledProductHeight') },
			{ json: 'capacity', js: 'capacity', typ: r('FeedDate') },
			{ json: 'productVolume', js: 'productVolume', typ: r('FeedDate') },
			{ json: 'maximumWeight', js: 'maximumWeight', typ: r('AssembledProductHeight') },
			{ json: 'hasRadiantHeat', js: 'hasRadiantHeat', typ: r('Locale') },
			{ json: 'coverageArea', js: 'coverageArea', typ: r('AssembledProductHeight') },
			{ json: 'minimumClearance', js: 'minimumClearance', typ: r('AssembledProductHeight') },
			{ json: 'isIndustrial', js: 'isIndustrial', typ: r('Locale') },
			{ json: 'flowRate', js: 'flowRate', typ: r('AssembledProductHeight') },
			{ json: 'isEnergyStarCertified', js: 'isEnergyStarCertified', typ: r('Locale') },
			{ json: 'hasAutomaticShutoff', js: 'hasAutomaticShutoff', typ: r('Locale') },
			{ json: 'installationType', js: 'installationType', typ: r('FeedDate') },
			{ json: 'vaseIncluded', js: 'vaseIncluded', typ: r('Locale') },
			{ json: 'flooringMaterial', js: 'flooringMaterial', typ: r('FeedDate') },
			{ json: 'cleaningCareAndMaintenance', js: 'cleaningCareAndMaintenance', typ: r('FeedDate') },
			{ json: 'isAssemblyRequired', js: 'isAssemblyRequired', typ: r('Locale') },
			{ json: 'assemblyInstructions', js: 'assemblyInstructions', typ: r('FeedDate') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: r('Athlete') },
			{ json: 'character', js: 'character', typ: r('Athlete') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	GrillsOutdoorCooking: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('GrillsOutdoorCookingProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	GrillsOutdoorCookingProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'homeDecorStyle', js: 'homeDecorStyle', typ: r('FeedDate') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'finish', js: 'finish', typ: r('FeedDate') },
			{ json: 'numberOfBurners', js: 'numberOfBurners', typ: r('NumberOfHazardousComponents') },
			{ json: 'sideBurnerSize', js: 'sideBurnerSize', typ: r('AssembledProductHeight') },
			{ json: 'hasSideShelf', js: 'hasSideShelf', typ: r('Locale') },
			{ json: 'hasCharcoalBasket', js: 'hasCharcoalBasket', typ: r('Locale') },
			{ json: 'hasTankTray', js: 'hasTankTray', typ: r('Locale') },
			{ json: 'totalCookingArea', js: 'totalCookingArea', typ: r('AssembledProductHeight') },
			{ json: 'fuelType', js: 'fuelType', typ: r('FeedDate') },
			{ json: 'btu', js: 'btu', typ: r('NumberOfHazardousComponents') },
			{ json: 'frameMaterial', js: 'frameMaterial', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'lifespan', js: 'lifespan', typ: r('FeedDate') },
			{ json: 'isBulk', js: 'isBulk', typ: r('Locale') },
			{ json: 'capacity', js: 'capacity', typ: r('FeedDate') },
			{ json: 'productVolume', js: 'productVolume', typ: r('FeedDate') },
			{ json: 'maximumWeight', js: 'maximumWeight', typ: r('AssembledProductHeight') },
			{ json: 'hasRadiantHeat', js: 'hasRadiantHeat', typ: r('Locale') },
			{ json: 'isIndustrial', js: 'isIndustrial', typ: r('Locale') },
			{ json: 'isFoldable', js: 'isFoldable', typ: r('Locale') },
			{ json: 'isWheeled', js: 'isWheeled', typ: r('Locale') },
			{ json: 'isWaterproof', js: 'isWaterproof', typ: r('Locale') },
			{ json: 'isWeatherResistant', js: 'isWeatherResistant', typ: r('Locale') },
			{ json: 'isEnergyStarCertified', js: 'isEnergyStarCertified', typ: r('Locale') },
			{ json: 'powerType', js: 'powerType', typ: r('FeedDate') },
			{ json: 'installationType', js: 'installationType', typ: r('FeedDate') },
			{ json: 'flavor', js: 'flavor', typ: r('FeedDate') },
			{ json: 'hasAutomaticShutoff', js: 'hasAutomaticShutoff', typ: r('Locale') },
			{ json: 'minimumTemperature', js: 'minimumTemperature', typ: r('AssembledProductHeight') },
			{ json: 'maximumTemperature', js: 'maximumTemperature', typ: r('AssembledProductHeight') },
			{ json: 'flowRate', js: 'flowRate', typ: r('AssembledProductHeight') },
			{ json: 'cleaningCareAndMaintenance', js: 'cleaningCareAndMaintenance', typ: r('FeedDate') },
			{ json: 'isAssemblyRequired', js: 'isAssemblyRequired', typ: r('Locale') },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: r('Athlete') },
			{ json: 'recommendedLocations', js: 'recommendedLocations', typ: r('Athlete') },
			{ json: 'assemblyInstructions', js: 'assemblyInstructions', typ: r('FeedDate') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: r('Athlete') },
			{ json: 'sportsLeague', js: 'sportsLeague', typ: r('Athlete') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	Hardware: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('HardwareProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	HardwareProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('AnimalBreed') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('AnimalBreed') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('AnimalBreed') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('AnimalBreed') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('AnimalBreed') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('AnimalBreed') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'shape', js: 'shape', typ: r('AnimalBreed') },
			{ json: 'finish', js: 'finish', typ: r('AnimalBreed') },
			{ json: 'size', js: 'size', typ: r('AnimalBreed') },
			{ json: 'homeDecorStyle', js: 'homeDecorStyle', typ: u(undefined, r('FeedDate')) },
			{ json: 'isLockable', js: 'isLockable', typ: u(undefined, r('Locale')) },
			{ json: 'lockType', js: 'lockType', typ: u(undefined, r('FeedDate')) },
			{ json: 'lockingMechanism', js: 'lockingMechanism', typ: u(undefined, r('FeedDate')) },
			{ json: 'alphanumericCharacter', js: 'alphanumericCharacter', typ: u(undefined, r('FeedDate')) },
			{ json: 'mountType', js: 'mountType', typ: u(undefined, r('Athlete')) },
			{ json: 'grade', js: 'grade', typ: u(undefined, r('FeedDate')) },
			{ json: 'workingLoadLimit', js: 'workingLoadLimit', typ: u(undefined, r('NumberOfHazardousComponents')) },
			{ json: 'maximumWeight', js: 'maximumWeight', typ: u(undefined, r('AssembledProductHeight')) },
			{ json: 'threadStandard', js: 'threadStandard', typ: u(undefined, r('FeedDate')) },
			{ json: 'backsetSize', js: 'backsetSize', typ: u(undefined, r('AssembledProductHeight')) },
			{ json: 'volts', js: 'volts', typ: u(undefined, r('CompatibleConduitSizes')) },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'accessoriesIncluded', js: 'accessoriesIncluded', typ: r('Athlete') },
			{ json: 'isWaterproof', js: 'isWaterproof', typ: r('Locale') },
			{ json: 'isFireResistant', js: 'isFireResistant', typ: r('Locale') },
			{ json: 'cleaningCareAndMaintenance', js: 'cleaningCareAndMaintenance', typ: r('AnimalBreed') },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: r('Athlete') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('AnimalBreed') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('WarrantyURL') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('AnimalBreed') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	HealthBeautyElectronics: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('HealthBeautyElectronicsProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	HealthBeautyElectronicsProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'bodyParts', js: 'bodyParts', typ: r('Athlete') },
			{ json: 'isPowered', js: 'isPowered', typ: r('Locale') },
			{ json: 'powerType', js: 'powerType', typ: r('FeedDate') },
			{ json: 'hasAutomaticShutoff', js: 'hasAutomaticShutoff', typ: r('Locale') },
			{ json: 'isTravelSize', js: 'isTravelSize', typ: r('Locale') },
			{ json: 'isPortable', js: 'isPortable', typ: r('Locale') },
			{ json: 'isReusable', js: 'isReusable', typ: r('Locale') },
			{ json: 'isDisposable', js: 'isDisposable', typ: r('Locale') },
			{ json: 'isCordless', js: 'isCordless', typ: r('Locale') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'hairType', js: 'hairType', typ: r('FeedDate') },
			{ json: 'hairProductForm', js: 'hairProductForm', typ: r('Locale') },
			{ json: 'hairCareKeyBenefit', js: 'hairCareKeyBenefit', typ: r('CountryOfOriginAssembly') },
			{ json: 'skinType', js: 'skinType', typ: r('FeedDate') },
			{ json: 'skinTone', js: 'skinTone', typ: r('FeedDate') },
			{ json: 'skinCareConcern', js: 'skinCareConcern', typ: r('Athlete') },
			{ json: 'makeupForm', js: 'makeupForm', typ: r('CountryOfOriginAssembly') },
			{ json: 'ingredientPreference', js: 'ingredientPreference', typ: r('CountryOfOriginAssembly') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'instructions', js: 'instructions', typ: r('FeedDate') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	HomeDecorKitchenOther: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('HomeDecorKitchenOtherProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	HomeDecorKitchenOtherProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'smallPartsWarnings', js: 'smallPartsWarnings', typ: r('CountryOfOriginAssembly') },
			{ json: 'countryOfOriginTextiles', js: 'countryOfOriginTextiles', typ: r('Locale') },
			{ json: 'compositeWoodCertificationCode', js: 'compositeWoodCertificationCode', typ: r('Locale') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'accentColor', js: 'accentColor', typ: r('FeedDate') },
			{ json: 'pattern', js: 'pattern', typ: r('Athlete') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'finish', js: 'finish', typ: r('FeedDate') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'homeDecorStyle', js: 'homeDecorStyle', typ: r('FeedDate') },
			{ json: 'curtainPanelStyle', js: 'curtainPanelStyle', typ: r('FeedDate') },
			{ json: 'curtainLength', js: 'curtainLength', typ: r('AssembledProductHeight') },
			{ json: 'slatWidth', js: 'slatWidth', typ: r('AssembledProductHeight') },
			{ json: 'windowTreatmentSheerness', js: 'windowTreatmentSheerness', typ: r('CountryOfOriginAssembly') },
			{ json: 'rugStyle', js: 'rugStyle', typ: r('Athlete') },
			{ json: 'rugSize', js: 'rugSize', typ: r('FeedDate') },
			{ json: 'clockNumberType', js: 'clockNumberType', typ: r('FeedDate') },
			{ json: 'shadeStyle', js: 'shadeStyle', typ: r('FeedDate') },
			{ json: 'shadeMaterial', js: 'shadeMaterial', typ: r('FeedDate') },
			{ json: 'shape', js: 'shape', typ: r('FeedDate') },
			{ json: 'bedStyle', js: 'bedStyle', typ: r('FeedDate') },
			{ json: 'threadCount', js: 'threadCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'gramsSquareMeter', js: 'gramsSquareMeter', typ: r('NumberOfHazardousComponents') },
			{ json: 'mealStyle', js: 'mealStyle', typ: r('FeedDate') },
			{ json: 'meal', js: 'meal', typ: r('FeedDate') },
			{ json: 'isNonStick', js: 'isNonStick', typ: r('Locale') },
			{ json: 'lightingFactsLabel', js: 'lightingFactsLabel', typ: r('FeedDate') },
			{ json: 'lampType', js: 'lampType', typ: r('Athlete') },
			{ json: 'scent', js: 'scent', typ: r('FeedDate') },
			{ json: 'isPetFriendly', js: 'isPetFriendly', typ: r('Locale') },
			{ json: 'fabricColor', js: 'fabricColor', typ: r('FeedDate') },
			{ json: 'fabricContent', js: 'fabricContent', typ: r('FabricContent') },
			{ json: 'fabricCareInstructions', js: 'fabricCareInstructions', typ: r('Athlete') },
			{ json: 'fillMaterial', js: 'fillMaterial', typ: r('Athlete') },
			{ json: 'framed', js: 'framed', typ: r('Locale') },
			{ json: 'frameMaterial', js: 'frameMaterial', typ: r('Athlete') },
			{ json: 'frameColor', js: 'frameColor', typ: r('FeedDate') },
			{ json: 'artist', js: 'artist', typ: r('Athlete') },
			{ json: 'orientation', js: 'orientation', typ: r('Locale') },
			{ json: 'baseColor', js: 'baseColor', typ: r('FeedDate') },
			{ json: 'baseFinish', js: 'baseFinish', typ: r('FeedDate') },
			{ json: 'academicInstitution', js: 'academicInstitution', typ: r('FeedDate') },
			{ json: 'recommendedRooms', js: 'recommendedRooms', typ: r('Athlete') },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: r('Athlete') },
			{ json: 'cleaningCareAndMaintenance', js: 'cleaningCareAndMaintenance', typ: r('FeedDate') },
			{ json: 'powerType', js: 'powerType', typ: r('FeedDate') },
			{ json: 'inductionSafe', js: 'inductionSafe', typ: r('Locale') },
			{ json: 'serviceCount', js: 'serviceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'isAssemblyRequired', js: 'isAssemblyRequired', typ: r('Locale') },
			{ json: 'assemblyInstructions', js: 'assemblyInstructions', typ: r('FeedDate') },
			{ json: 'bedSize', js: 'bedSize', typ: r('FeedDate') },
			{ json: 'collection', js: 'collection', typ: r('FeedDate') },
			{ json: 'occasion', js: 'occasion', typ: r('Athlete') },
			{ json: 'contaminantsRemoved', js: 'contaminantsRemoved', typ: r('FeedDate') },
			{ json: 'theme', js: 'theme', typ: r('Athlete') },
			{ json: 'capacity', js: 'capacity', typ: r('FeedDate') },
			{ json: 'diameter', js: 'diameter', typ: r('AssembledProductHeight') },
			{ json: 'isSet', js: 'isSet', typ: r('Locale') },
			{ json: 'character', js: 'character', typ: r('Athlete') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'gender', js: 'gender', typ: r('Locale') },
			{ json: 'volumeCapacity', js: 'volumeCapacity', typ: r('AssembledProductHeight') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'sportsLeague', js: 'sportsLeague', typ: r('Athlete') },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: r('Athlete') },
			{ json: 'athlete', js: 'athlete', typ: r('Athlete') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	HouseholdCleaningProductsSupplies: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('HouseholdCleaningProductsSuppliesProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	HouseholdCleaningProductsSuppliesProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'labelImage', js: 'labelImage', typ: r('LabelImage') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'ingredients', js: 'ingredients', typ: r('FeedDate') },
			{ json: 'recommendedSurfaces', js: 'recommendedSurfaces', typ: r('Athlete') },
			{ json: 'recommendedRooms', js: 'recommendedRooms', typ: r('Athlete') },
			{ json: 'recommendedLocations', js: 'recommendedLocations', typ: r('Athlete') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'finish', js: 'finish', typ: r('FeedDate') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'pattern', js: 'pattern', typ: r('Athlete') },
			{ json: 'shape', js: 'shape', typ: r('FeedDate') },
			{ json: 'numberOfSheets', js: 'numberOfSheets', typ: r('NumberOfHazardousComponents') },
			{ json: 'isAssemblyRequired', js: 'isAssemblyRequired', typ: r('Locale') },
			{ json: 'assemblyInstructions', js: 'assemblyInstructions', typ: r('FeedDate') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'shelfLife', js: 'shelfLife', typ: r('AssembledProductHeight') },
			{ json: 'fabricContent', js: 'fabricContent', typ: r('FabricContent') },
			{ json: 'isPowered', js: 'isPowered', typ: r('Locale') },
			{ json: 'powerType', js: 'powerType', typ: r('FeedDate') },
			{ json: 'volts', js: 'volts', typ: r('CompatibleConduitSizes') },
			{ json: 'connections', js: 'connections', typ: r('Athlete') },
			{ json: 'activeIngredients', js: 'activeIngredients', typ: r('ActiveIngredients') },
			{ json: 'inactiveIngredients', js: 'inactiveIngredients', typ: r('Athlete') },
			{ json: 'instructions', js: 'instructions', typ: r('FeedDate') },
			{ json: 'form', js: 'form', typ: r('FeedDate') },
			{ json: 'scent', js: 'scent', typ: r('FeedDate') },
			{ json: 'fluidOunces', js: 'fluidOunces', typ: r('AssembledProductHeight') },
			{ json: 'isRecyclable', js: 'isRecyclable', typ: r('Locale') },
			{ json: 'isFlammable', js: 'isFlammable', typ: r('Locale') },
			{ json: 'isCombustible', js: 'isCombustible', typ: r('Locale') },
			{ json: 'isBiodegradable', js: 'isBiodegradable', typ: r('Locale') },
			{ json: 'isEnergyStarCertified', js: 'isEnergyStarCertified', typ: r('Locale') },
			{ json: 'handleLength', js: 'handleLength', typ: r('AssembledProductHeight') },
			{ json: 'bladeWidth', js: 'bladeWidth', typ: r('AssembledProductHeight') },
			{ json: 'bristleMaterial', js: 'bristleMaterial', typ: r('FeedDate') },
			{ json: 'cleaningPath', js: 'cleaningPath', typ: r('AssembledProductHeight') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	InstrumentAccessories: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('InstrumentAccessoriesProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	InstrumentAccessoriesProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('AnimalBreed') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('AnimalBreed') },
			{ json: 'smallPartsWarnings', js: 'smallPartsWarnings', typ: r('CountryOfOriginAssembly') },
			{
				json: 'compositeWoodCertificationCode',
				js: 'compositeWoodCertificationCode',
				typ: u(undefined, r('Locale')),
			},
			{ json: 'manufacturer', js: 'manufacturer', typ: r('AnimalBreed') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('AnimalBreed') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('AnimalBreed') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('AnimalBreed') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'size', js: 'size', typ: u(undefined, r('FeedDate')) },
			{ json: 'instrument', js: 'instrument', typ: u(undefined, r('Athlete')) },
			{ json: 'inputsAndOutputs', js: 'inputsAndOutputs', typ: r('InputsAndOutputs') },
			{ json: 'displayTechnology', js: 'displayTechnology', typ: u(undefined, r('FeedDate')) },
			{ json: 'wirelessTechnologies', js: 'wirelessTechnologies', typ: r('Athlete') },
			{ json: 'hasBluetooth', js: 'hasBluetooth', typ: r('Locale') },
			{ json: 'batteryLife', js: 'batteryLife', typ: r('AssembledProductHeight') },
			{ json: 'isRemoteControlIncluded', js: 'isRemoteControlIncluded', typ: r('Locale') },
			{ json: 'autographedBy', js: 'autographedBy', typ: u(undefined, r('FeedDate')) },
			{ json: 'isPortable', js: 'isPortable', typ: r('Locale') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: r('Athlete') },
			{ json: 'recommendedLocations', js: 'recommendedLocations', typ: r('Athlete') },
			{ json: 'ingredients', js: 'ingredients', typ: u(undefined, r('FeedDate')) },
			{ json: 'pattern', js: 'pattern', typ: u(undefined, r('Athlete')) },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'sportsLeague', js: 'sportsLeague', typ: u(undefined, r('Athlete')) },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: u(undefined, r('Athlete')) },
			{ json: 'athlete', js: 'athlete', typ: u(undefined, r('Athlete')) },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('AnimalBreed') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('WarrantyURL') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('AnimalBreed') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
			{ json: 'audioPowerOutput', js: 'audioPowerOutput', typ: u(undefined, r('FeedDate')) },
			{ json: 'equalizerControl', js: 'equalizerControl', typ: u(undefined, r('FeedDate')) },
			{ json: 'hasIntegratedSpeakers', js: 'hasIntegratedSpeakers', typ: u(undefined, r('Locale')) },
			{ json: 'isPowered', js: 'isPowered', typ: u(undefined, r('Locale')) },
			{ json: 'microphoneTechnology', js: 'microphoneTechnology', typ: u(undefined, r('FeedDate')) },
			{ json: 'impedance', js: 'impedance', typ: u(undefined, r('FocalLength')) },
			{ json: 'powerType', js: 'powerType', typ: u(undefined, r('FeedDate')) },
		],
		false
	),
	InputsAndOutputs: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('SafetyDataSheetType') },
			{ json: 'title', js: 'title', typ: '' },
			{ json: 'items', js: 'items', typ: r('InputsAndOutputsItems') },
			{ json: 'minItems', js: 'minItems', typ: 0 },
		],
		false
	),
	InputsAndOutputsItems: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('MagentaProperties') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	MagentaProperties: o(
		[
			{ json: 'inputOutputType', js: 'inputOutputType', typ: r('AnimalBreed') },
			{ json: 'inputOutputQuantity', js: 'inputOutputQuantity', typ: r('NumberOfHazardousComponents') },
		],
		false
	),
	Jewelry: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('JewelryProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	JewelryProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'smallPartsWarnings', js: 'smallPartsWarnings', typ: r('CountryOfOriginAssembly') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'gender', js: 'gender', typ: r('Locale') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'ringStyle', js: 'ringStyle', typ: r('Athlete') },
			{ json: 'ringSize', js: 'ringSize', typ: r('NumberOfHazardousComponents') },
			{ json: 'gemstone', js: 'gemstone', typ: r('Locale') },
			{ json: 'secondaryStoneType', js: 'secondaryStoneType', typ: r('Locale') },
			{ json: 'accentStone', js: 'accentStone', typ: r('CountryOfOriginAssembly') },
			{ json: 'numberOfGemstones', js: 'numberOfGemstones', typ: r('NumberOfHazardousComponents') },
			{ json: 'chainPattern', js: 'chainPattern', typ: r('CountryOfOriginAssembly') },
			{ json: 'chainLength', js: 'chainLength', typ: r('AssembledProductHeight') },
			{ json: 'claspType', js: 'claspType', typ: r('CountryOfOriginAssembly') },
			{ json: 'earringStyle', js: 'earringStyle', typ: r('Locale') },
			{ json: 'earGaugeSize', js: 'earGaugeSize', typ: r('AssembledProductHeight') },
			{ json: 'backFinding', js: 'backFinding', typ: r('Locale') },
			{ json: 'braceletStyle', js: 'braceletStyle', typ: r('Locale') },
			{ json: 'necklaceStyle', js: 'necklaceStyle', typ: r('Locale') },
			{ json: 'bodyJewelryStyle', js: 'bodyJewelryStyle', typ: r('FeedDate') },
			{ json: 'braceletCharmStyle', js: 'braceletCharmStyle', typ: r('FeedDate') },
			{ json: 'jewelrySetting', js: 'jewelrySetting', typ: r('CountryOfOriginAssembly') },
			{ json: 'certifyingAgent', js: 'certifyingAgent', typ: r('FeedDate') },
			{ json: 'diamondClarity', js: 'diamondClarity', typ: r('Locale') },
			{ json: 'diamondColor', js: 'diamondColor', typ: r('Locale') },
			{ json: 'diamondCut', js: 'diamondCut', typ: r('Locale') },
			{ json: 'carats', js: 'carats', typ: r('AssembledProductHeight') },
			{ json: 'totalDiamondWeight', js: 'totalDiamondWeight', typ: r('AssembledProductHeight') },
			{ json: 'stoneTreatment', js: 'stoneTreatment', typ: r('FeedDate') },
			{ json: 'stoneCreationMethod', js: 'stoneCreationMethod', typ: r('FeedDate') },
			{ json: 'gemstoneShape', js: 'gemstoneShape', typ: r('Locale') },
			{ json: 'pearlType', js: 'pearlType', typ: r('Athlete') },
			{ json: 'sizePerPearl', js: 'sizePerPearl', typ: r('AssembledProductHeight') },
			{ json: 'isResizable', js: 'isResizable', typ: r('Locale') },
			{ json: 'personalRelationship', js: 'personalRelationship', typ: r('Athlete') },
			{ json: 'metal', js: 'metal', typ: r('Locale') },
			{ json: 'metalPurity', js: 'metalPurity', typ: r('FeedDate') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'religion', js: 'religion', typ: r('Locale') },
			{ json: 'birthstone', js: 'birthstone', typ: r('Locale') },
			{ json: 'style', js: 'style', typ: r('FeedDate') },
			{ json: 'shape', js: 'shape', typ: r('FeedDate') },
			{ json: 'occasion', js: 'occasion', typ: r('Athlete') },
			{ json: 'bodyParts', js: 'bodyParts', typ: r('Athlete') },
			{ json: 'isMadeFromRecycledMaterial', js: 'isMadeFromRecycledMaterial', typ: r('Locale') },
			{ json: 'recycledMaterialContent', js: 'recycledMaterialContent', typ: r('RecycledMaterialContent') },
			{ json: 'theme', js: 'theme', typ: r('Athlete') },
			{ json: 'diameter', js: 'diameter', typ: r('AssembledProductHeight') },
			{ json: 'character', js: 'character', typ: r('Athlete') },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: r('Athlete') },
			{ json: 'sportsLeague', js: 'sportsLeague', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
			{ json: 'seasonYear', js: 'seasonYear', typ: r('NumberOfHazardousComponents') },
			{ json: 'seasonCode', js: 'seasonCode', typ: r('Locale') },
		],
		false
	),
	LandVehicles: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('LandVehiclesProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	LandVehiclesProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'countryOfOriginTextiles', js: 'countryOfOriginTextiles', typ: r('Locale') },
			{ json: 'compositeWoodCertificationCode', js: 'compositeWoodCertificationCode', typ: r('Locale') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'vehicleType', js: 'vehicleType', typ: r('FeedDate') },
			{ json: 'vehicleYear', js: 'vehicleYear', typ: r('NumberOfHazardousComponents') },
			{ json: 'vehicleMake', js: 'vehicleMake', typ: r('FeedDate') },
			{ json: 'vehicleModel', js: 'vehicleModel', typ: r('FeedDate') },
			{ json: 'submodel', js: 'submodel', typ: r('FeedDate') },
			{ json: 'powertrain', js: 'powertrain', typ: r('FeedDate') },
			{ json: 'drivetrain', js: 'drivetrain', typ: r('FeedDate') },
			{ json: 'transmissionDesignation', js: 'transmissionDesignation', typ: r('FeedDate') },
			{ json: 'engineModel', js: 'engineModel', typ: r('FeedDate') },
			{ json: 'engineDisplacement', js: 'engineDisplacement', typ: r('AssembledProductHeight') },
			{ json: 'boreStroke', js: 'boreStroke', typ: r('FeedDate') },
			{ json: 'inductionSystem', js: 'inductionSystem', typ: r('FeedDate') },
			{ json: 'compressionRatio', js: 'compressionRatio', typ: r('FeedDate') },
			{ json: 'maximumEnginePower', js: 'maximumEnginePower', typ: r('AssembledProductHeight') },
			{ json: 'torque', js: 'torque', typ: r('FeedDate') },
			{ json: 'acceleration', js: 'acceleration', typ: r('FeedDate') },
			{ json: 'topSpeed', js: 'topSpeed', typ: r('AssembledProductHeight') },
			{ json: 'coolingSystem', js: 'coolingSystem', typ: r('FeedDate') },
			{ json: 'fuelRequirement', js: 'fuelRequirement', typ: r('FeedDate') },
			{ json: 'fuelSystem', js: 'fuelSystem', typ: r('FeedDate') },
			{ json: 'fuelCapacity', js: 'fuelCapacity', typ: r('AssembledProductHeight') },
			{ json: 'averageFuelConsumption', js: 'averageFuelConsumption', typ: r('AssembledProductHeight') },
			{ json: 'frontSuspension', js: 'frontSuspension', typ: r('FeedDate') },
			{ json: 'rearSuspension', js: 'rearSuspension', typ: r('FeedDate') },
			{ json: 'frontBrakes', js: 'frontBrakes', typ: r('FeedDate') },
			{ json: 'rearBrakes', js: 'rearBrakes', typ: r('FeedDate') },
			{ json: 'frontWheels', js: 'frontWheels', typ: r('FeedDate') },
			{ json: 'rearWheels', js: 'rearWheels', typ: r('FeedDate') },
			{ json: 'frontTires', js: 'frontTires', typ: r('FeedDate') },
			{ json: 'rearTires', js: 'rearTires', typ: r('FeedDate') },
			{ json: 'seatingCapacity', js: 'seatingCapacity', typ: r('NumberOfHazardousComponents') },
			{ json: 'seatHeight', js: 'seatHeight', typ: r('AssembledProductHeight') },
			{ json: 'wheelbase', js: 'wheelbase', typ: r('AssembledProductHeight') },
			{ json: 'curbWeight', js: 'curbWeight', typ: r('AssembledProductHeight') },
			{ json: 'towingCapacity', js: 'towingCapacity', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'fabricContent', js: 'fabricContent', typ: r('FabricContent') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	LargeAppliances: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('LargeAppliancesProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	LargeAppliancesProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'pattern', js: 'pattern', typ: r('Athlete') },
			{ json: 'finish', js: 'finish', typ: r('FeedDate') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'capacity', js: 'capacity', typ: r('FeedDate') },
			{ json: 'homeDecorStyle', js: 'homeDecorStyle', typ: r('FeedDate') },
			{ json: 'hasCfl', js: 'hasCfl', typ: r('Locale') },
			{ json: 'isEnergyStarCertified', js: 'isEnergyStarCertified', typ: r('Locale') },
			{ json: 'energyGuideLabel', js: 'energyGuideLabel', typ: r('FeedDate') },
			{ json: 'lightingFactsLabel', js: 'lightingFactsLabel', typ: r('FeedDate') },
			{ json: 'fuelType', js: 'fuelType', typ: r('FeedDate') },
			{ json: 'powerType', js: 'powerType', typ: r('FeedDate') },
			{ json: 'volts', js: 'volts', typ: r('CompatibleConduitSizes') },
			{ json: 'btu', js: 'btu', typ: r('NumberOfHazardousComponents') },
			{ json: 'watts', js: 'watts', typ: r('AssembledProductHeight') },
			{ json: 'isSet', js: 'isSet', typ: r('Locale') },
			{ json: 'isRemoteControlIncluded', js: 'isRemoteControlIncluded', typ: r('Locale') },
			{ json: 'cordLength', js: 'cordLength', typ: r('AssembledProductHeight') },
			{ json: 'isSmart', js: 'isSmart', typ: r('Locale') },
			{ json: 'hasAutomaticShutoff', js: 'hasAutomaticShutoff', typ: r('Locale') },
			{ json: 'loadPosition', js: 'loadPosition', typ: r('FeedDate') },
			{ json: 'runTime', js: 'runTime', typ: r('AssembledProductHeight') },
			{ json: 'recommendedRooms', js: 'recommendedRooms', typ: r('Athlete') },
			{ json: 'maximumRoomSize', js: 'maximumRoomSize', typ: r('AssembledProductHeight') },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: r('Athlete') },
			{ json: 'cleaningCareAndMaintenance', js: 'cleaningCareAndMaintenance', typ: r('FeedDate') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'isAssemblyRequired', js: 'isAssemblyRequired', typ: r('Locale') },
			{ json: 'assemblyInstructions', js: 'assemblyInstructions', typ: r('FeedDate') },
			{ json: 'collection', js: 'collection', typ: r('FeedDate') },
			{ json: 'shape', js: 'shape', typ: r('FeedDate') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	MedicalAidsEquipment: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('MedicalAidsEquipmentProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	MedicalAidsEquipmentProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'healthConcerns', js: 'healthConcerns', typ: r('Athlete') },
			{ json: 'collection', js: 'collection', typ: r('FeedDate') },
			{ json: 'bodyParts', js: 'bodyParts', typ: r('Athlete') },
			{ json: 'shape', js: 'shape', typ: r('FeedDate') },
			{ json: 'isLatexFree', js: 'isLatexFree', typ: r('Locale') },
			{ json: 'isWaterproof', js: 'isWaterproof', typ: r('Locale') },
			{ json: 'isPowered', js: 'isPowered', typ: r('Locale') },
			{ json: 'powerType', js: 'powerType', typ: r('FeedDate') },
			{ json: 'isFoldable', js: 'isFoldable', typ: r('Locale') },
			{ json: 'isInflatable', js: 'isInflatable', typ: r('Locale') },
			{ json: 'isWheeled', js: 'isWheeled', typ: r('Locale') },
			{ json: 'isIndustrial', js: 'isIndustrial', typ: r('Locale') },
			{ json: 'isSet', js: 'isSet', typ: r('Locale') },
			{ json: 'isTravelSize', js: 'isTravelSize', typ: r('Locale') },
			{ json: 'isPortable', js: 'isPortable', typ: r('Locale') },
			{ json: 'isReusable', js: 'isReusable', typ: r('Locale') },
			{ json: 'isDisposable', js: 'isDisposable', typ: r('Locale') },
			{ json: 'cleaningCareAndMaintenance', js: 'cleaningCareAndMaintenance', typ: r('FeedDate') },
			{ json: 'driveSystem', js: 'driveSystem', typ: r('FeedDate') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'minimumWeight', js: 'minimumWeight', typ: r('AssembledProductHeight') },
			{ json: 'maximumWeight', js: 'maximumWeight', typ: r('AssembledProductHeight') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'diameter', js: 'diameter', typ: r('AssembledProductHeight') },
			{ json: 'gender', js: 'gender', typ: r('Locale') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'fabricContent', js: 'fabricContent', typ: r('FabricContent') },
			{ json: 'fabricCareInstructions', js: 'fabricCareInstructions', typ: r('Athlete') },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: r('Athlete') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'compatibleBrands', js: 'compatibleBrands', typ: r('Athlete') },
			{ json: 'medicineStrength', js: 'medicineStrength', typ: r('FeedDate') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	MedicineSupplements: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('MedicineSupplementsProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	MedicineSupplementsProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'labelImage', js: 'labelImage', typ: r('LabelImage') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'shelfLife', js: 'shelfLife', typ: r('AssembledProductHeight') },
			{ json: 'flavor', js: 'flavor', typ: r('FeedDate') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'healthConcerns', js: 'healthConcerns', typ: r('Athlete') },
			{ json: 'isControlledSubstance', js: 'isControlledSubstance', typ: r('Locale') },
			{ json: 'ingredients', js: 'ingredients', typ: r('FeedDate') },
			{ json: 'drugDosageInstructionsImage', js: 'drugDosageInstructionsImage', typ: r('FeedDate') },
			{
				json: 'drugActiveInactiveIngredientsImage',
				js: 'drugActiveInactiveIngredientsImage',
				typ: r('FeedDate'),
			},
			{ json: 'supplementDosageInstructionsImage', js: 'supplementDosageInstructionsImage', typ: r('FeedDate') },
			{
				json: 'supplementActiveInactiveIngredientsImage',
				js: 'supplementActiveInactiveIngredientsImage',
				typ: r('FeedDate'),
			},
			{ json: 'activeIngredients', js: 'activeIngredients', typ: r('ActiveIngredients') },
			{ json: 'inactiveIngredients', js: 'inactiveIngredients', typ: r('Athlete') },
			{ json: 'form', js: 'form', typ: r('FeedDate') },
			{ json: 'instructions', js: 'instructions', typ: r('FeedDate') },
			{ json: 'dosage', js: 'dosage', typ: r('FeedDate') },
			{ json: 'stopUseIndications', js: 'stopUseIndications', typ: r('Athlete') },
			{ json: 'medicineStrength', js: 'medicineStrength', typ: r('FeedDate') },
			{ json: 'nationalDrugCode', js: 'nationalDrugCode', typ: r('FeedDate') },
			{ json: 'nutrients', js: 'nutrients', typ: r('Nutrients') },
			{ json: 'servingSize', js: 'servingSize', typ: r('FeedDate') },
			{ json: 'sugarPerServing', js: 'sugarPerServing', typ: r('NumberOfHazardousComponents') },
			{ json: 'nutrientContentClaims', js: 'nutrientContentClaims', typ: r('Athlete') },
			{ json: 'totalFat', js: 'totalFat', typ: r('AssembledProductHeight') },
			{ json: 'totalCarbohydrate', js: 'totalCarbohydrate', typ: r('AssembledProductHeight') },
			{ json: 'totalProtein', js: 'totalProtein', typ: r('AssembledProductHeight') },
			{ json: 'activityStage', js: 'activityStage', typ: r('CountryOfOriginAssembly') },
			{ json: 'calories', js: 'calories', typ: r('AssembledProductHeight') },
			{ json: 'primaryIngredient', js: 'primaryIngredient', typ: r('Athlete') },
			{ json: 'symptoms', js: 'symptoms', typ: r('FeedDate') },
			{ json: 'dietaryMethod', js: 'dietaryMethod', typ: r('Athlete') },
			{ json: 'servingsPerContainer', js: 'servingsPerContainer', typ: r('NumberOfHazardousComponents') },
			{ json: 'bodyParts', js: 'bodyParts', typ: r('Athlete') },
			{ json: 'gender', js: 'gender', typ: r('Locale') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	Movies: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('MoviesProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	MoviesProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'movieGenre', js: 'movieGenre', typ: r('FeedDate') },
			{ json: 'mpaaRating', js: 'mpaaRating', typ: r('Locale') },
			{ json: 'physicalMediaFormat', js: 'physicalMediaFormat', typ: r('CountryOfOriginAssembly') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'title', js: 'title', typ: r('FeedDate') },
			{ json: 'ratingReason', js: 'ratingReason', typ: r('FeedDate') },
			{ json: 'movieSubgenre', js: 'movieSubgenre', typ: r('FeedDate') },
			{ json: 'seriesTitle', js: 'seriesTitle', typ: r('FeedDate') },
			{ json: 'numberInSeries', js: 'numberInSeries', typ: r('FeedDate') },
			{ json: 'director', js: 'director', typ: r('FeedDate') },
			{ json: 'actors', js: 'actors', typ: r('Athlete') },
			{ json: 'screenwriter', js: 'screenwriter', typ: r('FeedDate') },
			{ json: 'studioProductionCompany', js: 'studioProductionCompany', typ: r('FeedDate') },
			{ json: 'awardsWon', js: 'awardsWon', typ: r('Athlete') },
			{ json: 'duration', js: 'duration', typ: r('AssembledProductHeight') },
			{ json: 'theatricalReleaseDate', js: 'theatricalReleaseDate', typ: r('FeedDate') },
			{ json: 'originalLanguages', js: 'originalLanguages', typ: r('Athlete') },
			{ json: 'isDubbed', js: 'isDubbed', typ: r('Locale') },
			{ json: 'dubbedLanguages', js: 'dubbedLanguages', typ: r('Athlete') },
			{ json: 'hasSubtitles', js: 'hasSubtitles', typ: r('Locale') },
			{ json: 'subtitledLanguages', js: 'subtitledLanguages', typ: r('Athlete') },
			{ json: 'aspectRatio', js: 'aspectRatio', typ: r('FeedDate') },
			{ json: 'edition', js: 'edition', typ: r('FeedDate') },
			{ json: 'numberOfDiscs', js: 'numberOfDiscs', typ: r('NumberOfHazardousComponents') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'additionalVariantAttributeNames', js: 'additionalVariantAttributeNames', typ: r('Athlete') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('FluffySwatchImages') },
		],
		false
	),
	FluffySwatchImages: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('SafetyDataSheetType') },
			{ json: 'title', js: 'title', typ: r('SwatchImagesTitle') },
			{ json: 'items', js: 'items', typ: r('FluffyItems') },
			{ json: 'minItems', js: 'minItems', typ: 0 },
		],
		false
	),
	FluffyItems: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('FriskyProperties') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	FriskyProperties: o(
		[
			{ json: 'swatchVariantAttribute', js: 'swatchVariantAttribute', typ: r('AnimalBreed') },
			{ json: 'swatchImageUrl', js: 'swatchImageUrl', typ: r('FeedDate') },
		],
		false
	),
	Music: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('MusicProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	MusicProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'physicalMediaFormat', js: 'physicalMediaFormat', typ: r('CountryOfOriginAssembly') },
			{ json: 'musicGenre', js: 'musicGenre', typ: r('FeedDate') },
			{ json: 'hasParentalAdvisoryLabel', js: 'hasParentalAdvisoryLabel', typ: r('Locale') },
			{ json: 'parentalAdvisoryLabelURL', js: 'parentalAdvisoryLabelURL', typ: r('Athlete') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'title', js: 'title', typ: r('FeedDate') },
			{ json: 'performer', js: 'performer', typ: r('Athlete') },
			{ json: 'songwriter', js: 'songwriter', typ: r('FeedDate') },
			{ json: 'musicSubGenre', js: 'musicSubGenre', typ: r('FeedDate') },
			{ json: 'awardsWon', js: 'awardsWon', typ: r('Athlete') },
			{ json: 'digitalAudioFileFormat', js: 'digitalAudioFileFormat', typ: r('Athlete') },
			{ json: 'musicReleaseType', js: 'musicReleaseType', typ: r('FeedDate') },
			{ json: 'recordLabel', js: 'recordLabel', typ: r('FeedDate') },
			{ json: 'releaseDate', js: 'releaseDate', typ: r('FeedDate') },
			{ json: 'trackListings', js: 'trackListings', typ: r('TrackListings') },
			{ json: 'numberOfTracks', js: 'numberOfTracks', typ: r('NumberOfHazardousComponents') },
			{ json: 'musicProducer', js: 'musicProducer', typ: r('FeedDate') },
			{ json: 'seriesTitle', js: 'seriesTitle', typ: r('FeedDate') },
			{ json: 'numberInSeries', js: 'numberInSeries', typ: r('FeedDate') },
			{ json: 'isEdited', js: 'isEdited', typ: r('Locale') },
			{ json: 'isEnhanced', js: 'isEnhanced', typ: r('Locale') },
			{ json: 'edition', js: 'edition', typ: r('FeedDate') },
			{ json: 'numberOfDiscs', js: 'numberOfDiscs', typ: r('NumberOfHazardousComponents') },
			{ json: 'originalLanguages', js: 'originalLanguages', typ: r('Athlete') },
			{ json: 'autographedBy', js: 'autographedBy', typ: r('FeedDate') },
			{ json: 'character', js: 'character', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('FluffySwatchImages') },
			{ json: 'ratingReason', js: 'ratingReason', typ: r('FeedDate') },
			{ json: 'movieSubgenre', js: 'movieSubgenre', typ: r('FeedDate') },
		],
		false
	),
	TrackListings: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('SafetyDataSheetType') },
			{ json: 'title', js: 'title', typ: '' },
			{ json: 'items', js: 'items', typ: r('TrackListingsItems') },
			{ json: 'minItems', js: 'minItems', typ: 0 },
		],
		false
	),
	TrackListingsItems: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('MischievousProperties') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	MischievousProperties: o(
		[
			{ json: 'trackNumber', js: 'trackNumber', typ: r('NumberOfHazardousComponents') },
			{ json: 'trackName', js: 'trackName', typ: r('FeedDate') },
			{ json: 'trackDuration', js: 'trackDuration', typ: r('FeedDate') },
		],
		false
	),
	MusicalInstruments: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('MusicalInstrumentsProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	MusicalInstrumentsProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'smallPartsWarnings', js: 'smallPartsWarnings', typ: r('CountryOfOriginAssembly') },
			{ json: 'compositeWoodCertificationCode', js: 'compositeWoodCertificationCode', typ: r('Locale') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'pattern', js: 'pattern', typ: r('Athlete') },
			{ json: 'finish', js: 'finish', typ: r('FeedDate') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'instrument', js: 'instrument', typ: r('Athlete') },
			{ json: 'musicalInstrumentFamily', js: 'musicalInstrumentFamily', typ: r('FeedDate') },
			{ json: 'saxophoneType', js: 'saxophoneType', typ: r('Locale') },
			{ json: 'soundKey', js: 'soundKey', typ: r('CountryOfOriginAssembly') },
			{ json: 'guitarType', js: 'guitarType', typ: r('Locale') },
			{ json: 'numberOfStrings', js: 'numberOfStrings', typ: r('NumberOfHazardousComponents') },
			{ json: 'karaokeMachineType', js: 'karaokeMachineType', typ: r('Locale') },
			{ json: 'drumSetCymbalType', js: 'drumSetCymbalType', typ: r('CountryOfOriginAssembly') },
			{ json: 'percussionInstrumentType', js: 'percussionInstrumentType', typ: r('Athlete') },
			{ json: 'numberOfKeys', js: 'numberOfKeys', typ: r('NumberOfHazardousComponents') },
			{ json: 'powerType', js: 'powerType', typ: r('FeedDate') },
			{ json: 'audioPowerOutput', js: 'audioPowerOutput', typ: r('FeedDate') },
			{ json: 'isPowered', js: 'isPowered', typ: r('Locale') },
			{ json: 'isPortable', js: 'isPortable', typ: r('Locale') },
			{ json: 'isCollectible', js: 'isCollectible', typ: r('Locale') },
			{ json: 'isSet', js: 'isSet', typ: r('Locale') },
			{ json: 'isElectric', js: 'isElectric', typ: r('Locale') },
			{ json: 'inputsAndOutputs', js: 'inputsAndOutputs', typ: r('InputsAndOutputs') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'hasIntegratedSpeakers', js: 'hasIntegratedSpeakers', typ: r('Locale') },
			{ json: 'microphoneIncluded', js: 'microphoneIncluded', typ: r('Locale') },
			{ json: 'hasBluetooth', js: 'hasBluetooth', typ: r('Locale') },
			{ json: 'batteryLife', js: 'batteryLife', typ: r('AssembledProductHeight') },
			{ json: 'displayTechnology', js: 'displayTechnology', typ: r('FeedDate') },
			{ json: 'orientation', js: 'orientation', typ: r('Locale') },
			{ json: 'skillLevel', js: 'skillLevel', typ: r('FeedDate') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: r('Athlete') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	Office: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('OfficeProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	OfficeProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'smallPartsWarnings', js: 'smallPartsWarnings', typ: r('CountryOfOriginAssembly') },
			{ json: 'compositeWoodCertificationCode', js: 'compositeWoodCertificationCode', typ: r('Locale') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'paperSize', js: 'paperSize', typ: r('Athlete') },
			{ json: 'capacity', js: 'capacity', typ: r('FeedDate') },
			{ json: 'occasion', js: 'occasion', typ: r('Athlete') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'lightingFactsLabel', js: 'lightingFactsLabel', typ: r('FeedDate') },
			{ json: 'pattern', js: 'pattern', typ: r('Athlete') },
			{ json: 'shape', js: 'shape', typ: r('FeedDate') },
			{ json: 'finish', js: 'finish', typ: r('FeedDate') },
			{ json: 'compatibleDevices', js: 'compatibleDevices', typ: r('Athlete') },
			{ json: 'brightness', js: 'brightness', typ: r('AssembledProductHeight') },
			{ json: 'dexterity', js: 'dexterity', typ: r('FeedDate') },
			{ json: 'systemOfMeasurement', js: 'systemOfMeasurement', typ: r('FeedDate') },
			{ json: 'holeSize', js: 'holeSize', typ: r('AssembledProductHeight') },
			{ json: 'year', js: 'year', typ: r('NumberOfHazardousComponents') },
			{ json: 'calendarFormat', js: 'calendarFormat', typ: r('FeedDate') },
			{ json: 'calendarTerm', js: 'calendarTerm', typ: r('AssembledProductHeight') },
			{ json: 'numberOfSheets', js: 'numberOfSheets', typ: r('NumberOfHazardousComponents') },
			{ json: 'isLined', js: 'isLined', typ: r('Locale') },
			{ json: 'envelopeSize', js: 'envelopeSize', typ: r('FeedDate') },
			{ json: 'penPointSize', js: 'penPointSize', typ: r('AssembledProductHeight') },
			{ json: 'inkColor', js: 'inkColor', typ: r('Athlete') },
			{ json: 'pencilLeadDiameter', js: 'pencilLeadDiameter', typ: r('Locale') },
			{ json: 'isRefillable', js: 'isRefillable', typ: r('Locale') },
			{ json: 'isRetractable', js: 'isRetractable', typ: r('Locale') },
			{ json: 'isIndustrial', js: 'isIndustrial', typ: r('Locale') },
			{ json: 'isAntiglare', js: 'isAntiglare', typ: r('Locale') },
			{ json: 'isMagnetic', js: 'isMagnetic', typ: r('Locale') },
			{ json: 'isTearResistant', js: 'isTearResistant', typ: r('Locale') },
			{ json: 'isPowered', js: 'isPowered', typ: r('Locale') },
			{ json: 'powerType', js: 'powerType', typ: r('FeedDate') },
			{ json: 'hpprintercartridgeNumber', js: 'hpprintercartridgeNumber', typ: r('Athlete') },
			{ json: 'tabCut', js: 'tabCut', typ: r('Locale') },
			{ json: 'tabColor', js: 'tabColor', typ: r('FeedDate') },
			{ json: 'shredderCutStyles', js: 'shredderCutStyles', typ: r('FeedDate') },
			{ json: 'overallExpansion', js: 'overallExpansion', typ: r('AssembledProductHeight') },
			{ json: 'paperClipSize', js: 'paperClipSize', typ: r('Locale') },
			{ json: 'theme', js: 'theme', typ: r('Athlete') },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: r('Athlete') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	Optical: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('OpticalProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	OpticalProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'sunglassesStyle', js: 'sunglassesStyle', typ: r('FeedDate') },
			{ json: 'eyewearFrameStyle', js: 'eyewearFrameStyle', typ: r('FeedDate') },
			{ json: 'eyewearFrameSize', js: 'eyewearFrameSize', typ: r('FeedDate') },
			{ json: 'eyewearLensFeature', js: 'eyewearLensFeature', typ: r('Athlete') },
			{ json: 'lensType', js: 'lensType', typ: r('Athlete') },
			{ json: 'eyewearRimStyle', js: 'eyewearRimStyle', typ: r('Locale') },
			{ json: 'hasAdaptiveLenses', js: 'hasAdaptiveLenses', typ: r('Locale') },
			{ json: 'lensMaterial', js: 'lensMaterial', typ: r('FeedDate') },
			{ json: 'lensTint', js: 'lensTint', typ: r('FeedDate') },
			{ json: 'isScratchResistant', js: 'isScratchResistant', typ: r('Locale') },
			{ json: 'isPolarized', js: 'isPolarized', typ: r('Locale') },
			{ json: 'uvRating', js: 'uvRating', typ: r('NumberOfHazardousComponents') },
			{ json: 'collection', js: 'collection', typ: r('FeedDate') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'shape', js: 'shape', typ: r('FeedDate') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'gender', js: 'gender', typ: r('Locale') },
			{ json: 'isSet', js: 'isSet', typ: r('Locale') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'character', js: 'character', typ: r('Athlete') },
			{ json: 'sportsLeague', js: 'sportsLeague', typ: r('Athlete') },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: r('Athlete') },
			{ json: 'athlete', js: 'athlete', typ: r('Athlete') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'compatibleBrands', js: 'compatibleBrands', typ: r('Athlete') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'cleaningCareAndMaintenance', js: 'cleaningCareAndMaintenance', typ: r('FeedDate') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	Optics: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('OpticsProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	OpticsProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'pattern', js: 'pattern', typ: r('Athlete') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'gender', js: 'gender', typ: r('Locale') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'minimumRecommendedAge', js: 'minimumRecommendedAge', typ: r('AssembledProductHeight') },
			{ json: 'maximumRecommendedAge', js: 'maximumRecommendedAge', typ: r('AssembledProductHeight') },
			{ json: 'digitalZoom', js: 'digitalZoom', typ: r('FeedDate') },
			{ json: 'opticalZoom', js: 'opticalZoom', typ: r('FeedDate') },
			{ json: 'lensDiameter', js: 'lensDiameter', typ: r('AssembledProductHeight') },
			{ json: 'lensCoating', js: 'lensCoating', typ: r('FeedDate') },
			{ json: 'sensorResolution', js: 'sensorResolution', typ: r('FeedDate') },
			{ json: 'magnification', js: 'magnification', typ: r('FeedDate') },
			{ json: 'focusType', js: 'focusType', typ: r('Athlete') },
			{ json: 'fieldOfView', js: 'fieldOfView', typ: r('FeedDate') },
			{ json: 'isParfocal', js: 'isParfocal', typ: r('Locale') },
			{ json: 'focalRatio', js: 'focalRatio', typ: r('FeedDate') },
			{ json: 'displayTechnology', js: 'displayTechnology', typ: r('FeedDate') },
			{ json: 'displayResolution', js: 'displayResolution', typ: r('Athlete') },
			{ json: 'hasLcdScreen', js: 'hasLcdScreen', typ: r('Locale') },
			{ json: 'screenSize', js: 'screenSize', typ: r('AssembledProductHeight') },
			{ json: 'hasNightVision', js: 'hasNightVision', typ: r('Locale') },
			{ json: 'attachmentStyle', js: 'attachmentStyle', typ: r('FeedDate') },
			{ json: 'wirelessTechnologies', js: 'wirelessTechnologies', typ: r('Athlete') },
			{ json: 'hasDovetailBarSystem', js: 'hasDovetailBarSystem', typ: r('Locale') },
			{ json: 'sport', js: 'sport', typ: r('Athlete') },
			{ json: 'isFogResistant', js: 'isFogResistant', typ: r('Locale') },
			{ json: 'isWeatherResistant', js: 'isWeatherResistant', typ: r('Locale') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'isAssemblyRequired', js: 'isAssemblyRequired', typ: r('Locale') },
			{ json: 'assemblyInstructions', js: 'assemblyInstructions', typ: r('FeedDate') },
			{ json: 'lockType', js: 'lockType', typ: r('FeedDate') },
			{ json: 'operatingTemperature', js: 'operatingTemperature', typ: r('AssembledProductHeight') },
			{ json: 'hasMemoryCardSlot', js: 'hasMemoryCardSlot', typ: r('Locale') },
			{ json: 'dexterity', js: 'dexterity', typ: r('FeedDate') },
			{ json: 'powerType', js: 'powerType', typ: r('FeedDate') },
			{ json: 'isMulticoated', js: 'isMulticoated', typ: r('Locale') },
			{ json: 'isLockable', js: 'isLockable', typ: r('Locale') },
			{ json: 'isPortable', js: 'isPortable', typ: r('Locale') },
			{ json: 'isFoldable', js: 'isFoldable', typ: r('Locale') },
			{ json: 'isWaterproof', js: 'isWaterproof', typ: r('Locale') },
			{ json: 'isPowered', js: 'isPowered', typ: r('Locale') },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: r('Athlete') },
			{ json: 'recommendedLocations', js: 'recommendedLocations', typ: r('Athlete') },
			{ json: 'cleaningCareAndMaintenance', js: 'cleaningCareAndMaintenance', typ: r('FeedDate') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	PhotoAccessories: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('PhotoAccessoriesProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	PhotoAccessoriesProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'compatibleBrands', js: 'compatibleBrands', typ: r('Athlete') },
			{ json: 'compatibleDevices', js: 'compatibleDevices', typ: r('Athlete') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'memoryCardType', js: 'memoryCardType', typ: r('Athlete') },
			{ json: 'recordableMediaFormats', js: 'recordableMediaFormats', typ: r('Athlete') },
			{ json: 'connections', js: 'connections', typ: r('Athlete') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'isAssemblyRequired', js: 'isAssemblyRequired', typ: r('Locale') },
			{ json: 'assemblyInstructions', js: 'assemblyInstructions', typ: r('FeedDate') },
			{ json: 'wirelessTechnologies', js: 'wirelessTechnologies', typ: r('Athlete') },
			{ json: 'displayTechnology', js: 'displayTechnology', typ: r('FeedDate') },
			{ json: 'accessoriesIncluded', js: 'accessoriesIncluded', typ: r('Athlete') },
			{ json: 'isWaterproof', js: 'isWaterproof', typ: r('Locale') },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: r('Athlete') },
			{ json: 'cleaningCareAndMaintenance', js: 'cleaningCareAndMaintenance', typ: r('FeedDate') },
			{ json: 'shape', js: 'shape', typ: r('FeedDate') },
			{ json: 'pattern', js: 'pattern', typ: r('Athlete') },
			{ json: 'capacity', js: 'capacity', typ: r('FeedDate') },
			{ json: 'inputsAndOutputs', js: 'inputsAndOutputs', typ: r('InputsAndOutputs') },
			{ json: 'lightOutput', js: 'lightOutput', typ: r('AssembledProductHeight') },
			{ json: 'lightBulbType', js: 'lightBulbType', typ: r('FeedDate') },
			{ json: 'volts', js: 'volts', typ: r('CompatibleConduitSizes') },
			{ json: 'watts', js: 'watts', typ: r('AssembledProductHeight') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	PlumbingHVAC: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('PlumbingHVACProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	PlumbingHVACProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'finish', js: 'finish', typ: r('FeedDate') },
			{ json: 'hardwareFinish', js: 'hardwareFinish', typ: r('FeedDate') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'shape', js: 'shape', typ: r('FeedDate') },
			{ json: 'homeDecorStyle', js: 'homeDecorStyle', typ: r('FeedDate') },
			{ json: 'hasCeeCertification', js: 'hasCeeCertification', typ: r('Locale') },
			{ json: 'ceeTier', js: 'ceeTier', typ: r('Locale') },
			{ json: 'volts', js: 'volts', typ: r('CompatibleConduitSizes') },
			{ json: 'watts', js: 'watts', typ: r('AssembledProductHeight') },
			{ json: 'volumeCapacity', js: 'volumeCapacity', typ: r('AssembledProductHeight') },
			{ json: 'faucetHandleDesign', js: 'faucetHandleDesign', typ: r('FeedDate') },
			{ json: 'faucetDrillings', js: 'faucetDrillings', typ: r('FeedDate') },
			{ json: 'contaminantsRemoved', js: 'contaminantsRemoved', typ: r('FeedDate') },
			{ json: 'roughInDistance', js: 'roughInDistance', typ: r('FocalLength') },
			{ json: 'humidificationOutputPerDay', js: 'humidificationOutputPerDay', typ: r('FeedDate') },
			{
				json: 'pintsOfMoistureRemovedPerDay',
				js: 'pintsOfMoistureRemovedPerDay',
				typ: r('NumberOfHazardousComponents'),
			},
			{ json: 'gallonsPerFlush', js: 'gallonsPerFlush', typ: r('AssembledProductHeight') },
			{ json: 'mervRating', js: 'mervRating', typ: r('FeedDate') },
			{ json: 'gallonsPerMinute', js: 'gallonsPerMinute', typ: r('AssembledProductHeight') },
			{ json: 'sprayPatterns', js: 'sprayPatterns', typ: r('FeedDate') },
			{ json: 'numberOfBlades', js: 'numberOfBlades', typ: r('NumberOfHazardousComponents') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'accessoriesIncluded', js: 'accessoriesIncluded', typ: r('Athlete') },
			{ json: 'fuelType', js: 'fuelType', typ: r('FeedDate') },
			{ json: 'isWaterproof', js: 'isWaterproof', typ: r('Locale') },
			{ json: 'isIndustrial', js: 'isIndustrial', typ: r('Locale') },
			{ json: 'isFireResistant', js: 'isFireResistant', typ: r('Locale') },
			{ json: 'coverageArea', js: 'coverageArea', typ: r('AssembledProductHeight') },
			{ json: 'horsepower', js: 'horsepower', typ: r('AssembledProductHeight') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: r('Athlete') },
			{ json: 'cleaningCareAndMaintenance', js: 'cleaningCareAndMaintenance', typ: r('FeedDate') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	PrintersScannersImaging: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('PrintersScannersImagingProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	PrintersScannersImagingProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'monochromeColor', js: 'monochromeColor', typ: r('Locale') },
			{ json: 'printingTechnology', js: 'printingTechnology', typ: r('FeedDate') },
			{ json: 'has3dCapabilities', js: 'has3dCapabilities', typ: r('Locale') },
			{ json: 'resolution', js: 'resolution', typ: r('FeedDate') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'connections', js: 'connections', typ: r('Athlete') },
			{ json: 'memoryCardType', js: 'memoryCardType', typ: r('Athlete') },
			{ json: 'hasAutomaticDocumentFeeder', js: 'hasAutomaticDocumentFeeder', typ: r('Locale') },
			{ json: 'hasAutomaticTwoSidedPrinting', js: 'hasAutomaticTwoSidedPrinting', typ: r('Locale') },
			{ json: 'colorPagesPerMinute', js: 'colorPagesPerMinute', typ: r('NumberOfHazardousComponents') },
			{ json: 'monochromePagesPerMinute', js: 'monochromePagesPerMinute', typ: r('NumberOfHazardousComponents') },
			{ json: 'maximumDocumentSize', js: 'maximumDocumentSize', typ: r('FeedDate') },
			{ json: 'maximumPrintResolution', js: 'maximumPrintResolution', typ: r('AssembledProductHeight') },
			{ json: 'maximumScannerResolution', js: 'maximumScannerResolution', typ: r('AssembledProductHeight') },
			{ json: 'wirelessTechnologies', js: 'wirelessTechnologies', typ: r('Athlete') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
		],
		false
	),
	SafetyEmergency: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('SafetyEmergencyProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	SafetyEmergencyProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'recommendedSurfaces', js: 'recommendedSurfaces', typ: r('Athlete') },
			{ json: 'recommendedLocations', js: 'recommendedLocations', typ: r('Athlete') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'isAssemblyRequired', js: 'isAssemblyRequired', typ: r('Locale') },
			{ json: 'assemblyInstructions', js: 'assemblyInstructions', typ: r('FeedDate') },
			{ json: 'instructions', js: 'instructions', typ: r('FeedDate') },
			{ json: 'form', js: 'form', typ: r('FeedDate') },
			{ json: 'ingredients', js: 'ingredients', typ: r('FeedDate') },
			{ json: 'fluidOunces', js: 'fluidOunces', typ: r('AssembledProductHeight') },
			{ json: 'handleLength', js: 'handleLength', typ: r('AssembledProductHeight') },
			{ json: 'isRefillable', js: 'isRefillable', typ: r('Locale') },
			{ json: 'fireExtinguisherClasses', js: 'fireExtinguisherClasses', typ: r('CountryOfOriginAssembly') },
			{ json: 'workingPressure', js: 'workingPressure', typ: r('AssembledProductHeight') },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: r('Athlete') },
			{ json: 'isPowered', js: 'isPowered', typ: r('Locale') },
			{ json: 'powerType', js: 'powerType', typ: r('FeedDate') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	Software: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('SoftwareProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	SoftwareProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'softwareCategory', js: 'softwareCategory', typ: r('Athlete') },
			{ json: 'operatingSystem', js: 'operatingSystem', typ: r('Athlete') },
			{ json: 'systemRequirements', js: 'systemRequirements', typ: r('Athlete') },
			{ json: 'version', js: 'version', typ: r('FeedDate') },
			{ json: 'releaseDate', js: 'releaseDate', typ: r('FeedDate') },
			{ json: 'numberOfUsers', js: 'numberOfUsers', typ: r('NumberOfHazardousComponents') },
			{ json: 'requiredPeripherals', js: 'requiredPeripherals', typ: r('FeedDate') },
			{ json: 'educationalFocus', js: 'educationalFocus', typ: r('Athlete') },
			{ json: 'digitalFileFormat', js: 'digitalFileFormat', typ: r('Athlete') },
			{ json: 'physicalMediaFormat', js: 'physicalMediaFormat', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
		],
		false
	),
	SportRecreationOther: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('SportRecreationOtherProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	SportRecreationOtherProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'smallPartsWarnings', js: 'smallPartsWarnings', typ: r('CountryOfOriginAssembly') },
			{ json: 'countryOfOriginTextiles', js: 'countryOfOriginTextiles', typ: r('Locale') },
			{ json: 'compositeWoodCertificationCode', js: 'compositeWoodCertificationCode', typ: r('Locale') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'inflexKitComponent', js: 'inflexKitComponent', typ: r('Locale') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'sport', js: 'sport', typ: r('Athlete') },
			{ json: 'gender', js: 'gender', typ: r('Locale') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'minimumRecommendedAge', js: 'minimumRecommendedAge', typ: r('AssembledProductHeight') },
			{ json: 'maximumRecommendedAge', js: 'maximumRecommendedAge', typ: r('AssembledProductHeight') },
			{ json: 'clothingSize', js: 'clothingSize', typ: r('FeedDate') },
			{ json: 'fabricContent', js: 'fabricContent', typ: r('FabricContent') },
			{ json: 'fabricCareInstructions', js: 'fabricCareInstructions', typ: r('Athlete') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'pattern', js: 'pattern', typ: r('Athlete') },
			{ json: 'season', js: 'season', typ: r('Athlete') },
			{ json: 'isFoldable', js: 'isFoldable', typ: r('Locale') },
			{ json: 'isTearResistant', js: 'isTearResistant', typ: r('Locale') },
			{ json: 'isWeatherResistant', js: 'isWeatherResistant', typ: r('Locale') },
			{ json: 'isWaterproof', js: 'isWaterproof', typ: r('Locale') },
			{ json: 'shoeSize', js: 'shoeSize', typ: r('FeedDate') },
			{ json: 'AirGunPowerType', js: 'AirGunPowerType', typ: r('Locale') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'isAssemblyRequired', js: 'isAssemblyRequired', typ: r('Locale') },
			{ json: 'assemblyInstructions', js: 'assemblyInstructions', typ: r('FeedDate') },
			{ json: 'driveSystem', js: 'driveSystem', typ: r('FeedDate') },
			{ json: 'strideLength', js: 'strideLength', typ: r('NumberOfHazardousComponents') },
			{ json: 'dexterity', js: 'dexterity', typ: r('FeedDate') },
			{ json: 'autographedBy', js: 'autographedBy', typ: r('FeedDate') },
			{ json: 'finish', js: 'finish', typ: r('FeedDate') },
			{ json: 'shape', js: 'shape', typ: r('FeedDate') },
			{ json: 'capacity', js: 'capacity', typ: r('FeedDate') },
			{ json: 'seatingCapacity', js: 'seatingCapacity', typ: r('NumberOfHazardousComponents') },
			{ json: 'maximumWeight', js: 'maximumWeight', typ: r('AssembledProductHeight') },
			{ json: 'maximumIncline', js: 'maximumIncline', typ: r('NumberOfHazardousComponents') },
			{ json: 'batDrop', js: 'batDrop', typ: r('FeedDate') },
			{ json: 'fitnessGoal', js: 'fitnessGoal', typ: r('FeedDate') },
			{ json: 'footballSize', js: 'footballSize', typ: r('FeedDate') },
			{ json: 'basketballSize', js: 'basketballSize', typ: r('FeedDate') },
			{ json: 'soccerBallSize', js: 'soccerBallSize', typ: r('FeedDate') },
			{ json: 'ballCoreMaterial', js: 'ballCoreMaterial', typ: r('Athlete') },
			{ json: 'bladeType', js: 'bladeType', typ: r('FeedDate') },
			{ json: 'animalType', js: 'animalType', typ: r('FeedDate') },
			{ json: 'tentType', js: 'tentType', typ: r('FeedDate') },
			{ json: 'fishingLocation', js: 'fishingLocation', typ: r('FeedDate') },
			{ json: 'fishingLinePoundTest', js: 'fishingLinePoundTest', typ: r('NumberOfHazardousComponents') },
			{ json: 'wirelessTechnologies', js: 'wirelessTechnologies', typ: r('Athlete') },
			{ json: 'hasAutomaticShutoff', js: 'hasAutomaticShutoff', typ: r('Locale') },
			{ json: 'minimumTemperature', js: 'minimumTemperature', typ: r('AssembledProductHeight') },
			{ json: 'isMemorabilia', js: 'isMemorabilia', typ: r('Locale') },
			{ json: 'isCollectible', js: 'isCollectible', typ: r('Locale') },
			{ json: 'isPortable', js: 'isPortable', typ: r('Locale') },
			{ json: 'isSpaceSaving', js: 'isSpaceSaving', typ: r('Locale') },
			{ json: 'isWheeled', js: 'isWheeled', typ: r('Locale') },
			{ json: 'isPowered', js: 'isPowered', typ: r('Locale') },
			{ json: 'powerType', js: 'powerType', typ: r('FeedDate') },
			{ json: 'horsepower', js: 'horsepower', typ: r('AssembledProductHeight') },
			{ json: 'velocity', js: 'velocity', typ: r('AssembledProductHeight') },
			{ json: 'shaftMaterial', js: 'shaftMaterial', typ: r('Athlete') },
			{ json: 'golfClubShaftFlex', js: 'golfClubShaftFlex', typ: r('FeedDate') },
			{ json: 'loft', js: 'loft', typ: r('FeedDate') },
			{ json: 'golfClubShaftType', js: 'golfClubShaftType', typ: r('FeedDate') },
			{ json: 'shaftLength', js: 'shaftLength', typ: r('FeedDate') },
			{ json: 'tireDiameter', js: 'tireDiameter', typ: r('AssembledProductHeight') },
			{ json: 'cleaningCareAndMaintenance', js: 'cleaningCareAndMaintenance', typ: r('FeedDate') },
			{ json: 'compatibleDevices', js: 'compatibleDevices', typ: r('Athlete') },
			{ json: 'insulationType', js: 'insulationType', typ: r('Locale') },
			{ json: 'rValue', js: 'rValue', typ: r('NumberOfHazardousComponents') },
			{ json: 'sleepingBagSize', js: 'sleepingBagSize', typ: r('FeedDate') },
			{ json: 'recommendedLocations', js: 'recommendedLocations', typ: r('Athlete') },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: r('Athlete') },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: r('Athlete') },
			{ json: 'sportsLeague', js: 'sportsLeague', typ: r('Athlete') },
			{ json: 'athlete', js: 'athlete', typ: r('Athlete') },
			{ json: 'character', js: 'character', typ: r('Athlete') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	Storage: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('StorageProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	StorageProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'compositeWoodCertificationCode', js: 'compositeWoodCertificationCode', typ: r('Locale') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'inflexKitComponent', js: 'inflexKitComponent', typ: r('Locale') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'finish', js: 'finish', typ: r('FeedDate') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'pattern', js: 'pattern', typ: r('Athlete') },
			{ json: 'shape', js: 'shape', typ: r('FeedDate') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'recommendedRooms', js: 'recommendedRooms', typ: r('Athlete') },
			{ json: 'recommendedLocations', js: 'recommendedLocations', typ: r('Athlete') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'isAssemblyRequired', js: 'isAssemblyRequired', typ: r('Locale') },
			{ json: 'assemblyInstructions', js: 'assemblyInstructions', typ: r('FeedDate') },
			{ json: 'fabricContent', js: 'fabricContent', typ: r('FabricContent') },
			{ json: 'fabricCareInstructions', js: 'fabricCareInstructions', typ: r('Athlete') },
			{ json: 'collection', js: 'collection', typ: r('FeedDate') },
			{ json: 'numberOfShelves', js: 'numberOfShelves', typ: r('NumberOfHazardousComponents') },
			{ json: 'shelfStyle', js: 'shelfStyle', typ: r('FeedDate') },
			{ json: 'shelfDepth', js: 'shelfDepth', typ: r('AssembledProductHeight') },
			{ json: 'numberOfDrawers', js: 'numberOfDrawers', typ: r('NumberOfHazardousComponents') },
			{ json: 'drawerPosition', js: 'drawerPosition', typ: r('FeedDate') },
			{ json: 'drawerDimensions', js: 'drawerDimensions', typ: r('FeedDate') },
			{ json: 'capacity', js: 'capacity', typ: r('FeedDate') },
			{ json: 'minimumWeight', js: 'minimumWeight', typ: r('AssembledProductHeight') },
			{ json: 'maximumWeight', js: 'maximumWeight', typ: r('AssembledProductHeight') },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: r('Athlete') },
			{ json: 'isFoldable', js: 'isFoldable', typ: r('Locale') },
			{ json: 'isRetractable', js: 'isRetractable', typ: r('Locale') },
			{ json: 'isPortable', js: 'isPortable', typ: r('Locale') },
			{ json: 'isIndustrial', js: 'isIndustrial', typ: r('Locale') },
			{ json: 'systemOfMeasurement', js: 'systemOfMeasurement', typ: r('FeedDate') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	TVsVideoDisplays: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('TVsVideoDisplaysProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	TVsVideoDisplaysProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'televisionType', js: 'televisionType', typ: r('Athlete') },
			{ json: 'screenSize', js: 'screenSize', typ: r('AssembledProductHeight') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'resolution', js: 'resolution', typ: r('FeedDate') },
			{ json: 'displayTechnology', js: 'displayTechnology', typ: r('FeedDate') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'connections', js: 'connections', typ: r('Athlete') },
			{ json: 'memoryCardType', js: 'memoryCardType', typ: r('Athlete') },
			{ json: 'hasTouchscreen', js: 'hasTouchscreen', typ: r('Locale') },
			{ json: 'inputsAndOutputs', js: 'inputsAndOutputs', typ: r('InputsAndOutputs') },
			{ json: 'isEnergyStarCertified', js: 'isEnergyStarCertified', typ: r('Locale') },
			{ json: 'energyGuideLabel', js: 'energyGuideLabel', typ: r('FeedDate') },
			{ json: 'isSmart', js: 'isSmart', typ: r('Locale') },
			{ json: 'aspectRatio', js: 'aspectRatio', typ: r('FeedDate') },
			{ json: 'nativeResolution', js: 'nativeResolution', typ: r('FeedDate') },
			{ json: 'maximumContrastRatio', js: 'maximumContrastRatio', typ: r('FeedDate') },
			{ json: 'refreshRate', js: 'refreshRate', typ: r('AssembledProductHeight') },
			{ json: 'responseTime', js: 'responseTime', typ: r('AssembledProductHeight') },
			{ json: 'backlightType', js: 'backlightType', typ: r('FeedDate') },
			{ json: 'wirelessTechnologies', js: 'wirelessTechnologies', typ: r('Athlete') },
			{ json: 'hasIntegratedSpeakers', js: 'hasIntegratedSpeakers', typ: r('Locale') },
			{ json: 'audioFeatures', js: 'audioFeatures', typ: r('Athlete') },
			{ json: 'peakAudioPowerCapacity', js: 'peakAudioPowerCapacity', typ: r('AssembledProductHeight') },
			{ json: 'audioPowerOutput', js: 'audioPowerOutput', typ: r('FeedDate') },
			{ json: 'streamingServices', js: 'streamingServices', typ: r('FeedDate') },
			{ json: 'mountingPattern', js: 'mountingPattern', typ: r('FeedDate') },
			{ json: 'configuration', js: 'configuration', typ: r('FeedDate') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	Tools: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('ToolsProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	ToolsProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'inflexKitComponent', js: 'inflexKitComponent', typ: r('Locale') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'shape', js: 'shape', typ: r('FeedDate') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'finish', js: 'finish', typ: r('FeedDate') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'bladeDiameter', js: 'bladeDiameter', typ: r('AssembledProductHeight') },
			{ json: 'bladeLength', js: 'bladeLength', typ: r('AssembledProductHeight') },
			{ json: 'bladeWidth', js: 'bladeWidth', typ: r('AssembledProductHeight') },
			{ json: 'bladeShank', js: 'bladeShank', typ: r('FeedDate') },
			{ json: 'numberOfBlades', js: 'numberOfBlades', typ: r('NumberOfHazardousComponents') },
			{ json: 'shankSize', js: 'shankSize', typ: r('AssembledProductHeight') },
			{ json: 'discSize', js: 'discSize', typ: r('AssembledProductHeight') },
			{ json: 'chuckType', js: 'chuckType', typ: r('FeedDate') },
			{ json: 'chuckSize', js: 'chuckSize', typ: r('FocalLength') },
			{ json: 'colletSize', js: 'colletSize', typ: r('FocalLength') },
			{ json: 'sandingBeltSize', js: 'sandingBeltSize', typ: r('FeedDate') },
			{ json: 'arborDiameter', js: 'arborDiameter', typ: r('FocalLength') },
			{ json: 'spindleThread', js: 'spindleThread', typ: r('FeedDate') },
			{ json: 'airInlet', js: 'airInlet', typ: r('AssembledProductHeight') },
			{
				json: 'averageAirConsumptionAt90PSI',
				js: 'averageAirConsumptionAt90PSI',
				typ: r('AssembledProductHeight'),
			},
			{ json: 'cfmAt40Psi', js: 'cfmAt40Psi', typ: r('AssembledProductHeight') },
			{ json: 'cfmAt90Psi', js: 'cfmAt90Psi', typ: r('AssembledProductHeight') },
			{ json: 'volts', js: 'volts', typ: r('CompatibleConduitSizes') },
			{ json: 'amps', js: 'amps', typ: r('AssembledProductHeight') },
			{ json: 'loadCapacity', js: 'loadCapacity', typ: r('AssembledProductHeight') },
			{ json: 'volumeCapacity', js: 'volumeCapacity', typ: r('AssembledProductHeight') },
			{ json: 'gritSize', js: 'gritSize', typ: r('FeedDate') },
			{ json: 'squareDriveSize', js: 'squareDriveSize', typ: r('FeedDate') },
			{ json: 'socketDepth', js: 'socketDepth', typ: r('FeedDate') },
			{ json: 'cordLength', js: 'cordLength', typ: r('AssembledProductHeight') },
			{ json: 'torque', js: 'torque', typ: r('FeedDate') },
			{ json: 'engineDisplacement', js: 'engineDisplacement', typ: r('AssembledProductHeight') },
			{ json: 'numberOfSteps', js: 'numberOfSteps', typ: r('NumberOfHazardousComponents') },
			{ json: 'numberOfPoints', js: 'numberOfPoints', typ: r('NumberOfHazardousComponents') },
			{ json: 'lightBulbType', js: 'lightBulbType', typ: r('FeedDate') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'powerType', js: 'powerType', typ: r('FeedDate') },
			{ json: 'fuelType', js: 'fuelType', typ: r('FeedDate') },
			{ json: 'maximumJawOpening', js: 'maximumJawOpening', typ: r('AssembledProductHeight') },
			{ json: 'handing', js: 'handing', typ: r('FeedDate') },
			{ json: 'horsepower', js: 'horsepower', typ: r('AssembledProductHeight') },
			{ json: 'batteryCapacity', js: 'batteryCapacity', typ: r('AssembledProductHeight') },
			{ json: 'accessoriesIncluded', js: 'accessoriesIncluded', typ: r('Athlete') },
			{ json: 'isWaterproof', js: 'isWaterproof', typ: r('Locale') },
			{ json: 'isIndustrial', js: 'isIndustrial', typ: r('Locale') },
			{ json: 'isFireResistant', js: 'isFireResistant', typ: r('Locale') },
			{ json: 'decibelRating', js: 'decibelRating', typ: r('AssembledProductHeight') },
			{ json: 'maximumAirPressure', js: 'maximumAirPressure', typ: r('AssembledProductHeight') },
			{ json: 'maximumWattsOut', js: 'maximumWattsOut', typ: r('AssembledProductHeight') },
			{ json: 'sandingSpeed', js: 'sandingSpeed', typ: r('AssembledProductHeight') },
			{ json: 'noLoadSpeed', js: 'noLoadSpeed', typ: r('AssembledProductHeight') },
			{ json: 'strokeLength', js: 'strokeLength', typ: r('AssembledProductHeight') },
			{ json: 'strokesPerMinute', js: 'strokesPerMinute', typ: r('FeedDate') },
			{ json: 'blowsPerMinute', js: 'blowsPerMinute', typ: r('FeedDate') },
			{ json: 'impactEnergy', js: 'impactEnergy', typ: r('AssembledProductHeight') },
			{ json: 'teethPerInch', js: 'teethPerInch', typ: r('NumberOfHazardousComponents') },
			{ json: 'tankConfiguration', js: 'tankConfiguration', typ: r('FeedDate') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'recommendedUses', js: 'recommendedUses', typ: r('Athlete') },
			{ json: 'cleaningCareAndMaintenance', js: 'cleaningCareAndMaintenance', typ: r('FeedDate') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	Toys: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('ToysProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	ToysProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'smallPartsWarnings', js: 'smallPartsWarnings', typ: r('CountryOfOriginAssembly') },
			{ json: 'countryOfOriginTextiles', js: 'countryOfOriginTextiles', typ: r('Locale') },
			{ json: 'compositeWoodCertificationCode', js: 'compositeWoodCertificationCode', typ: r('Locale') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'inflexKitComponent', js: 'inflexKitComponent', typ: r('Locale') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'gender', js: 'gender', typ: r('Locale') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'minimumRecommendedAge', js: 'minimumRecommendedAge', typ: r('AssembledProductHeight') },
			{ json: 'maximumRecommendedAge', js: 'maximumRecommendedAge', typ: r('AssembledProductHeight') },
			{ json: 'targetAudience', js: 'targetAudience', typ: r('Athlete') },
			{ json: 'educationalFocus', js: 'educationalFocus', typ: r('Athlete') },
			{ json: 'skillLevel', js: 'skillLevel', typ: r('FeedDate') },
			{ json: 'awardsWon', js: 'awardsWon', typ: r('Athlete') },
			{ json: 'theme', js: 'theme', typ: r('Athlete') },
			{ json: 'character', js: 'character', typ: r('Athlete') },
			{ json: 'activity', js: 'activity', typ: r('Athlete') },
			{ json: 'numberOfPlayers', js: 'numberOfPlayers', typ: r('NumberOfPlayers') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'ingredients', js: 'ingredients', typ: r('FeedDate') },
			{ json: 'fabricContent', js: 'fabricContent', typ: r('FabricContent') },
			{ json: 'fabricCareInstructions', js: 'fabricCareInstructions', typ: r('Athlete') },
			{ json: 'isAssemblyRequired', js: 'isAssemblyRequired', typ: r('Locale') },
			{ json: 'assemblyInstructions', js: 'assemblyInstructions', typ: r('FeedDate') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'finish', js: 'finish', typ: r('FeedDate') },
			{ json: 'shape', js: 'shape', typ: r('FeedDate') },
			{ json: 'occasion', js: 'occasion', typ: r('Athlete') },
			{ json: 'sport', js: 'sport', typ: r('Athlete') },
			{ json: 'hairColorCategory', js: 'hairColorCategory', typ: r('Locale') },
			{ json: 'skinTone', js: 'skinTone', typ: r('FeedDate') },
			{ json: 'flavor', js: 'flavor', typ: r('FeedDate') },
			{ json: 'animalType', js: 'animalType', typ: r('FeedDate') },
			{ json: 'vehicleType', js: 'vehicleType', typ: r('FeedDate') },
			{ json: 'displayTechnology', js: 'displayTechnology', typ: r('FeedDate') },
			{ json: 'screenSize', js: 'screenSize', typ: r('AssembledProductHeight') },
			{ json: 'isPowered', js: 'isPowered', typ: r('Locale') },
			{ json: 'powerType', js: 'powerType', typ: r('FeedDate') },
			{ json: 'capacity', js: 'capacity', typ: r('FeedDate') },
			{ json: 'seatingCapacity', js: 'seatingCapacity', typ: r('NumberOfHazardousComponents') },
			{ json: 'minimumWeight', js: 'minimumWeight', typ: r('AssembledProductHeight') },
			{ json: 'maximumWeight', js: 'maximumWeight', typ: r('AssembledProductHeight') },
			{ json: 'maximumSpeed', js: 'maximumSpeed', typ: r('AssembledProductHeight') },
			{ json: 'isTravelSize', js: 'isTravelSize', typ: r('Locale') },
			{ json: 'isInflatable', js: 'isInflatable', typ: r('Locale') },
			{ json: 'fillMaterial', js: 'fillMaterial', typ: r('Athlete') },
			{ json: 'makesNoise', js: 'makesNoise', typ: r('Locale') },
			{ json: 'sportsLeague', js: 'sportsLeague', typ: r('Athlete') },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: r('Athlete') },
			{ json: 'athlete', js: 'athlete', typ: r('Athlete') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	NumberOfPlayers: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('NumberOfPlayersProperties') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	NumberOfPlayersProperties: o(
		[
			{ json: 'minimumNumberOfPlayers', js: 'minimumNumberOfPlayers', typ: r('NumberOfHazardousComponents') },
			{ json: 'maximumNumberOfPlayers', js: 'maximumNumberOfPlayers', typ: r('NumberOfHazardousComponents') },
		],
		false
	),
	VehicleOther: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('VehicleOtherProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	VehicleOtherProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'countryOfOriginTextiles', js: 'countryOfOriginTextiles', typ: r('Locale') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'inflexKitComponent', js: 'inflexKitComponent', typ: r('Locale') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'finish', js: 'finish', typ: r('FeedDate') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'shape', js: 'shape', typ: r('FeedDate') },
			{ json: 'vehicleType', js: 'vehicleType', typ: r('FeedDate') },
			{ json: 'partTerminologyID', js: 'partTerminologyID', typ: r('Athlete') },
			{ json: 'aaiaBrandID', js: 'aaiaBrandID', typ: r('Athlete') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'fabricContent', js: 'fabricContent', typ: r('FabricContent') },
			{ json: 'sportsLeague', js: 'sportsLeague', typ: r('Athlete') },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: r('Athlete') },
			{ json: 'athlete', js: 'athlete', typ: r('Athlete') },
			{ json: 'autographedBy', js: 'autographedBy', typ: r('FeedDate') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	VehiclePartsAccessories: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('VehiclePartsAccessoriesProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	VehiclePartsAccessoriesProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'compositeWoodCertificationCode', js: 'compositeWoodCertificationCode', typ: r('Locale') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'unitsPerConsumerUnit', js: 'unitsPerConsumerUnit', typ: r('NumberOfHazardousComponents') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'pieceCount', js: 'pieceCount', typ: r('NumberOfHazardousComponents') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'compatibleCars', js: 'compatibleCars', typ: r('FeedDate') },
			{ json: 'vehicleYear', js: 'vehicleYear', typ: r('NumberOfHazardousComponents') },
			{ json: 'vehicleMake', js: 'vehicleMake', typ: r('FeedDate') },
			{ json: 'vehicleModel', js: 'vehicleModel', typ: r('FeedDate') },
			{ json: 'vehicleType', js: 'vehicleType', typ: r('FeedDate') },
			{ json: 'audioPowerOutput', js: 'audioPowerOutput', typ: r('FeedDate') },
			{ json: 'numberOfChannels', js: 'numberOfChannels', typ: r('FeedDate') },
			{ json: 'compatibleDevices', js: 'compatibleDevices', typ: r('Athlete') },
			{ json: 'isPowered', js: 'isPowered', typ: r('Locale') },
			{ json: 'powerType', js: 'powerType', typ: r('FeedDate') },
			{ json: 'amps', js: 'amps', typ: r('AssembledProductHeight') },
			{ json: 'impedance', js: 'impedance', typ: r('FocalLength') },
			{ json: 'coldCrankAmp', js: 'coldCrankAmp', typ: r('NumberOfHazardousComponents') },
			{ json: 'beamSpread', js: 'beamSpread', typ: r('AssembledProductHeight') },
			{ json: 'beamAngle', js: 'beamAngle', typ: r('AssembledProductHeight') },
			{ json: 'displayTechnology', js: 'displayTechnology', typ: r('FeedDate') },
			{ json: 'inDashSystem', js: 'inDashSystem', typ: r('Locale') },
			{ json: 'interfaceType', js: 'interfaceType', typ: r('Athlete') },
			{ json: 'displayResolution', js: 'displayResolution', typ: r('Athlete') },
			{ json: 'fastenerHeadType', js: 'fastenerHeadType', typ: r('FeedDate') },
			{ json: 'connections', js: 'connections', typ: r('Athlete') },
			{ json: 'cableLength', js: 'cableLength', typ: r('AssembledProductHeight') },
			{ json: 'chainLength', js: 'chainLength', typ: r('AssembledProductHeight') },
			{ json: 'candlePower', js: 'candlePower', typ: r('FeedDate') },
			{ json: 'flashPoint', js: 'flashPoint', typ: r('FeedDate') },
			{ json: 'filterLife', js: 'filterLife', typ: r('FeedDate') },
			{ json: 'lightBulbType', js: 'lightBulbType', typ: r('FeedDate') },
			{ json: 'isLockable', js: 'isLockable', typ: r('Locale') },
			{ json: 'isReusable', js: 'isReusable', typ: r('Locale') },
			{ json: 'breakingStrength', js: 'breakingStrength', typ: r('AssembledProductHeight') },
			{ json: 'maximumMotorSpeed', js: 'maximumMotorSpeed', typ: r('AssembledProductHeight') },
			{ json: 'numberOfOutlets', js: 'numberOfOutlets', typ: r('NumberOfHazardousComponents') },
			{ json: 'receiverCompatibility', js: 'receiverCompatibility', typ: r('AssembledProductHeight') },
			{ json: 'reserveCapacity', js: 'reserveCapacity', typ: r('AssembledProductHeight') },
			{ json: 'loadCapacity', js: 'loadCapacity', typ: r('AssembledProductHeight') },
			{ json: 'saeDotCompliant', js: 'saeDotCompliant', typ: r('Locale') },
			{ json: 'hitchClass', js: 'hitchClass', typ: r('FeedDate') },
			{ json: 'shackleClearance', js: 'shackleClearance', typ: r('AssembledProductHeight') },
			{ json: 'shackleDiameter', js: 'shackleDiameter', typ: r('AssembledProductHeight') },
			{ json: 'shackleLength', js: 'shackleLength', typ: r('AssembledProductHeight') },
			{ json: 'shankLength', js: 'shankLength', typ: r('AssembledProductHeight') },
			{ json: 'shearStrength', js: 'shearStrength', typ: r('AssembledProductHeight') },
			{ json: 'dropDistance', js: 'dropDistance', typ: r('FeedDate') },
			{ json: 'fluidOunces', js: 'fluidOunces', typ: r('AssembledProductHeight') },
			{ json: 'motorOilViscosity', js: 'motorOilViscosity', typ: r('FeedDate') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'form', js: 'form', typ: r('FeedDate') },
			{ json: 'carSpeakerType', js: 'carSpeakerType', typ: r('Athlete') },
			{ json: 'carSpeakerSizeClass', js: 'carSpeakerSizeClass', typ: r('Athlete') },
			{ json: 'automotivePartsDivision', js: 'automotivePartsDivision', typ: r('CountryOfOriginAssembly') },
			{ json: 'partTerminologyID', js: 'partTerminologyID', typ: r('Athlete') },
			{ json: 'aaiaBrandID', js: 'aaiaBrandID', typ: r('Athlete') },
			{ json: 'dinSize', js: 'dinSize', typ: r('Athlete') },
			{ json: 'fuelType', js: 'fuelType', typ: r('FeedDate') },
			{ json: 'horsepower', js: 'horsepower', typ: r('AssembledProductHeight') },
			{ json: 'maximumTemperature', js: 'maximumTemperature', typ: r('AssembledProductHeight') },
			{ json: 'fillMaterial', js: 'fillMaterial', typ: r('Athlete') },
			{ json: 'finish', js: 'finish', typ: r('FeedDate') },
			{ json: 'shape', js: 'shape', typ: r('FeedDate') },
			{ json: 'compatibleBrands', js: 'compatibleBrands', typ: r('Athlete') },
			{ json: 'sportsLeague', js: 'sportsLeague', typ: r('Athlete') },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: r('Athlete') },
			{ json: 'athlete', js: 'athlete', typ: r('Athlete') },
			{ json: 'autographedBy', js: 'autographedBy', typ: r('FeedDate') },
			{ json: 'fabricContent', js: 'fabricContent', typ: r('FabricContent') },
			{ json: 'fabricCareInstructions', js: 'fabricCareInstructions', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	VideoGames: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('VideoGamesProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	VideoGamesProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'esrbRating', js: 'esrbRating', typ: r('Locale') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'platform', js: 'platform', typ: r('FeedDate') },
			{ json: 'videoGameGenre', js: 'videoGameGenre', typ: r('CountryOfOriginAssembly') },
			{ json: 'ratingReason', js: 'ratingReason', typ: r('FeedDate') },
			{ json: 'sport', js: 'sport', typ: r('Athlete') },
			{ json: 'edition', js: 'edition', typ: r('FeedDate') },
			{ json: 'releaseDate', js: 'releaseDate', typ: r('FeedDate') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'videoGameCollection', js: 'videoGameCollection', typ: r('FeedDate') },
			{ json: 'targetAudience', js: 'targetAudience', typ: r('Athlete') },
			{ json: 'isOnlineMultiplayerAvailable', js: 'isOnlineMultiplayerAvailable', typ: r('Locale') },
			{ json: 'isDownloadableContentAvailable', js: 'isDownloadableContentAvailable', typ: r('Locale') },
			{ json: 'mountType', js: 'mountType', typ: r('Athlete') },
			{ json: 'requiredPeripherals', js: 'requiredPeripherals', typ: r('FeedDate') },
			{ json: 'physicalMediaFormat', js: 'physicalMediaFormat', typ: r('CountryOfOriginAssembly') },
			{ json: 'sportsLeague', js: 'sportsLeague', typ: r('Athlete') },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: r('Athlete') },
			{ json: 'numberOfChannels', js: 'numberOfChannels', typ: r('FeedDate') },
			{ json: 'globalBrandLicense', js: 'globalBrandLicense', typ: r('Athlete') },
			{ json: 'athlete', js: 'athlete', typ: r('Athlete') },
			{ json: 'autographedBy', js: 'autographedBy', typ: r('FeedDate') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	VideoProjectors: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('VideoProjectorsProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	VideoProjectorsProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'throwRatio', js: 'throwRatio', typ: r('FeedDate') },
			{ json: 'lampLife', js: 'lampLife', typ: r('AssembledProductHeight') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'resolution', js: 'resolution', typ: r('FeedDate') },
			{ json: 'displayTechnology', js: 'displayTechnology', typ: r('FeedDate') },
			{ json: 'screenSize', js: 'screenSize', typ: r('AssembledProductHeight') },
			{ json: 'brightness', js: 'brightness', typ: r('AssembledProductHeight') },
			{ json: 'aspectRatio', js: 'aspectRatio', typ: r('FeedDate') },
			{ json: 'mountType', js: 'mountType', typ: r('Athlete') },
			{ json: 'has3dCapabilities', js: 'has3dCapabilities', typ: r('Locale') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'inputsAndOutputs', js: 'inputsAndOutputs', typ: r('InputsAndOutputs') },
			{ json: 'maximumContrastRatio', js: 'maximumContrastRatio', typ: r('FeedDate') },
			{ json: 'hasIntegratedSpeakers', js: 'hasIntegratedSpeakers', typ: r('Locale') },
			{ json: 'wirelessTechnologies', js: 'wirelessTechnologies', typ: r('Athlete') },
			{ json: 'nativeResolution', js: 'nativeResolution', typ: r('FeedDate') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	Watches: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('WatchesProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	WatchesProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'smallPartsWarnings', js: 'smallPartsWarnings', typ: r('CountryOfOriginAssembly') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'gender', js: 'gender', typ: r('Locale') },
			{ json: 'ageGroup', js: 'ageGroup', typ: r('CountryOfOriginAssembly') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'colorCategory', js: 'colorCategory', typ: r('CountryOfOriginAssembly') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'metal', js: 'metal', typ: r('Locale') },
			{ json: 'metalPurity', js: 'metalPurity', typ: r('FeedDate') },
			{ json: 'plating', js: 'plating', typ: r('FeedDate') },
			{ json: 'watchStyle', js: 'watchStyle', typ: r('Athlete') },
			{ json: 'watchMovement', js: 'watchMovement', typ: r('Locale') },
			{ json: 'watchMovementType', js: 'watchMovementType', typ: r('CountryOfOriginAssembly') },
			{ json: 'watchComplication', js: 'watchComplication', typ: r('FeedDate') },
			{ json: 'clockWatchFaceColor', js: 'clockWatchFaceColor', typ: r('FeedDate') },
			{ json: 'watchCaseShape', js: 'watchCaseShape', typ: r('Locale') },
			{ json: 'watchBandColor', js: 'watchBandColor', typ: r('FeedDate') },
			{ json: 'watchBandLength', js: 'watchBandLength', typ: r('AssembledProductHeight') },
			{ json: 'bandWidth', js: 'bandWidth', typ: r('AssembledProductHeight') },
			{ json: 'watchBandMaterial', js: 'watchBandMaterial', typ: r('CountryOfOriginAssembly') },
			{ json: 'claspType', js: 'claspType', typ: r('CountryOfOriginAssembly') },
			{ json: 'watchCrystalMaterial', js: 'watchCrystalMaterial', typ: r('CountryOfOriginAssembly') },
			{ json: 'watchCaseMaterial', js: 'watchCaseMaterial', typ: r('Locale') },
			{ json: 'watchCaseSize', js: 'watchCaseSize', typ: r('AssembledProductHeight') },
			{ json: 'watchCaseThickness', js: 'watchCaseThickness', typ: r('FocalLength') },
			{ json: 'watchBezelMaterial', js: 'watchBezelMaterial', typ: r('Athlete') },
			{ json: 'clockNumberType', js: 'clockNumberType', typ: r('FeedDate') },
			{ json: 'isWaterResistant', js: 'isWaterResistant', typ: r('Locale') },
			{ json: 'gemstoneShape', js: 'gemstoneShape', typ: r('Locale') },
			{ json: 'gemstone', js: 'gemstone', typ: r('Locale') },
			{ json: 'carats', js: 'carats', typ: r('AssembledProductHeight') },
			{ json: 'accentStone', js: 'accentStone', typ: r('CountryOfOriginAssembly') },
			{ json: 'totalDiamondWeight', js: 'totalDiamondWeight', typ: r('AssembledProductHeight') },
			{ json: 'batteryLife', js: 'batteryLife', typ: r('AssembledProductHeight') },
			{ json: 'activity', js: 'activity', typ: r('Athlete') },
			{ json: 'theme', js: 'theme', typ: r('Athlete') },
			{ json: 'occasion', js: 'occasion', typ: r('Athlete') },
			{ json: 'character', js: 'character', typ: r('Athlete') },
			{ json: 'sportsLeague', js: 'sportsLeague', typ: r('Athlete') },
			{ json: 'sportsTeam', js: 'sportsTeam', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('FluffySwatchImages') },
			{ json: 'seasonYear', js: 'seasonYear', typ: r('NumberOfHazardousComponents') },
			{ json: 'seasonCode', js: 'seasonCode', typ: r('Locale') },
		],
		false
	),
	Watercraft: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('WatercraftProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	WatercraftProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'size', js: 'size', typ: r('FeedDate') },
			{ json: 'vehicleType', js: 'vehicleType', typ: r('FeedDate') },
			{ json: 'vehicleYear', js: 'vehicleYear', typ: r('NumberOfHazardousComponents') },
			{ json: 'vehicleMake', js: 'vehicleMake', typ: r('FeedDate') },
			{ json: 'vehicleModel', js: 'vehicleModel', typ: r('FeedDate') },
			{ json: 'submodel', js: 'submodel', typ: r('FeedDate') },
			{ json: 'engineLocation', js: 'engineLocation', typ: r('FeedDate') },
			{ json: 'engineModel', js: 'engineModel', typ: r('FeedDate') },
			{ json: 'engineDisplacement', js: 'engineDisplacement', typ: r('AssembledProductHeight') },
			{ json: 'boreStroke', js: 'boreStroke', typ: r('FeedDate') },
			{ json: 'inductionSystem', js: 'inductionSystem', typ: r('FeedDate') },
			{ json: 'compressionRatio', js: 'compressionRatio', typ: r('FeedDate') },
			{ json: 'maximumEnginePower', js: 'maximumEnginePower', typ: r('AssembledProductHeight') },
			{ json: 'propulsionSystem', js: 'propulsionSystem', typ: r('FeedDate') },
			{ json: 'coolingSystem', js: 'coolingSystem', typ: r('FeedDate') },
			{ json: 'thrust', js: 'thrust', typ: r('AssembledProductHeight') },
			{ json: 'impellerPropeller', js: 'impellerPropeller', typ: r('FeedDate') },
			{ json: 'topSpeed', js: 'topSpeed', typ: r('AssembledProductHeight') },
			{ json: 'fuelRequirement', js: 'fuelRequirement', typ: r('FeedDate') },
			{ json: 'fuelSystem', js: 'fuelSystem', typ: r('FeedDate') },
			{ json: 'fuelCapacity', js: 'fuelCapacity', typ: r('AssembledProductHeight') },
			{ json: 'averageFuelConsumption', js: 'averageFuelConsumption', typ: r('AssembledProductHeight') },
			{ json: 'hullLength', js: 'hullLength', typ: r('AssembledProductHeight') },
			{ json: 'beam', js: 'beam', typ: r('AssembledProductHeight') },
			{ json: 'airDraft', js: 'airDraft', typ: r('AssembledProductHeight') },
			{ json: 'draft', js: 'draft', typ: r('AssembledProductHeight') },
			{ json: 'dryWeight', js: 'dryWeight', typ: r('AssembledProductHeight') },
			{ json: 'waterCapacity', js: 'waterCapacity', typ: r('AssembledProductHeight') },
			{ json: 'seatingCapacity', js: 'seatingCapacity', typ: r('NumberOfHazardousComponents') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'sportsLeague', js: 'sportsLeague', typ: r('Athlete') },
			{ json: 'athlete', js: 'athlete', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	WheelsWheelComponents: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('WheelsWheelComponentsProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	WheelsWheelComponentsProperties: o(
		[
			{ json: 'shortDescription', js: 'shortDescription', typ: r('FeedDate') },
			{ json: 'prop65WarningText', js: 'prop65WarningText', typ: r('FeedDate') },
			{ json: 'manufacturer', js: 'manufacturer', typ: r('FeedDate') },
			{ json: 'mainImageUrl', js: 'mainImageUrl', typ: r('FeedDate') },
			{ json: 'productSecondaryImageURL', js: 'productSecondaryImageURL', typ: r('ProductSecondaryImageURL') },
			{ json: 'keyFeatures', js: 'keyFeatures', typ: r('Athlete') },
			{ json: 'msrp', js: 'msrp', typ: r('NumberOfHazardousComponents') },
			{ json: 'manufacturerPartNumber', js: 'manufacturerPartNumber', typ: r('FeedDate') },
			{ json: 'modelNumber', js: 'modelNumber', typ: r('FeedDate') },
			{ json: 'countPerPack', js: 'countPerPack', typ: r('NumberOfHazardousComponents') },
			{ json: 'count', js: 'count', typ: r('FeedDate') },
			{ json: 'color', js: 'color', typ: r('Athlete') },
			{ json: 'finish', js: 'finish', typ: r('FeedDate') },
			{ json: 'material', js: 'material', typ: r('Athlete') },
			{ json: 'vehicleRimSize', js: 'vehicleRimSize', typ: r('FeedDate') },
			{ json: 'diameter', js: 'diameter', typ: r('AssembledProductHeight') },
			{ json: 'compatibleTireSize', js: 'compatibleTireSize', typ: r('FeedDate') },
			{ json: 'numberOfSpokes', js: 'numberOfSpokes', typ: r('NumberOfHazardousComponents') },
			{ json: 'assembledProductLength', js: 'assembledProductLength', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWidth', js: 'assembledProductWidth', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductHeight', js: 'assembledProductHeight', typ: r('AssembledProductHeight') },
			{ json: 'assembledProductWeight', js: 'assembledProductWeight', typ: r('AssembledProductHeight') },
			{ json: 'aaiaBrandID', js: 'aaiaBrandID', typ: r('Athlete') },
			{ json: 'partTerminologyID', js: 'partTerminologyID', typ: r('Athlete') },
			{ json: 'warrantyText', js: 'warrantyText', typ: r('FeedDate') },
			{ json: 'warrantyURL', js: 'warrantyURL', typ: r('FeedDate') },
			{ json: 'features', js: 'features', typ: r('Athlete') },
			{
				json: 'additionalProductAttributes',
				js: 'additionalProductAttributes',
				typ: r('AdditionalProductAttributes'),
			},
			{ json: 'variantGroupId', js: 'variantGroupId', typ: r('FeedDate') },
			{ json: 'variantAttributeNames', js: 'variantAttributeNames', typ: r('CountryOfOriginAssembly') },
			{ json: 'isPrimaryVariant', js: 'isPrimaryVariant', typ: r('Locale') },
			{ json: 'swatchImages', js: 'swatchImages', typ: r('PurpleSwatchImages') },
		],
		false
	),
	MPItemFeedHeader: o(
		[
			{ json: '$schema', js: '$schema', typ: '' },
			{ json: 'type', js: 'type', typ: r('LithiumIonBatteriesType') },
			{ json: 'properties', js: 'properties', typ: r('MPItemFeedHeaderProperties') },
			{ json: 'required', js: 'required', typ: a('') },
			{ json: 'additionalProperties', js: 'additionalProperties', typ: true },
		],
		false
	),
	MPItemFeedHeaderProperties: o(
		[
			{ json: 'requestId', js: 'requestId', typ: r('FeedDate') },
			{ json: 'requestBatchId', js: 'requestBatchId', typ: r('FeedDate') },
			{ json: 'feedDate', js: 'feedDate', typ: r('FeedDate') },
			{ json: 'processMode', js: 'processMode', typ: r('Locale') },
			{ json: 'subset', js: 'subset', typ: r('Locale') },
			{ json: 'mart', js: 'mart', typ: r('Locale') },
			{ json: 'sellingChannel', js: 'sellingChannel', typ: r('Locale') },
			{ json: 'version', js: 'version', typ: r('Locale') },
			{ json: 'subCategory', js: 'subCategory', typ: r('Locale') },
			{ json: 'locale', js: 'locale', typ: r('Locale') },
		],
		false
	),
	PurpleType: ['string'],
	Format: ['date-time', 'uri'],
	NumberOfHazardousComponentsType: ['integer', 'number'],
	LithiumIonBatteriesType: ['object'],
	SafetyDataSheetType: ['array'],
	PurpleRequired: ['productAttributeName', 'productAttributeValue'],
	AdditionalProductAttributesTitle: ['Additional Product Attributes'],
	FabricContentTitle: ['Fabric Content'],
	ProductSecondaryImageURLTitle: ['Additional Image URL'],
	SwatchImagesTitle: ['Swatch Images'],
	WarrantyURLTitle: ['Assembly Instructions URL', 'Label Image URL', 'Warranty URL'],
	FluffyRequired: ['labelImageContains', 'labelImageURL'],
};
